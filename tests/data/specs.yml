openapi: 3.0.3
info:
  title: CloudBlue Connect API
  version: '22.0'
  description: "[CloudBlue Connect](https://connect.cloudblue.com)\nis a cloud end-to-end\
    \ supply automation platform that joins service vendor and service provider efforts\n\
    to reach their business goals most effectively and efficiently. For this purpose,\
    \ it provides a highly\ncustomizable service to arrange various integrated business\
    \ flows, including contract management, product\ninformation flow, ordering and\
    \ fulfillment, subscription management, and resource usage reporting.\n\nConnect\
    \ REST API provides you with the lowest-level access to the functionality of the\
    \ Connect Platform.\nAll other integration methods, like our Portals, [SDKs](https://connect.cloudblue.com/community/sdk/)\n\
    and [Extensions](https://connect.cloudblue.com/community/extensions/) are built\
    \ on top of the REST API layer.\n\nPlease visit our [Community Portal](https://connect.cloudblue.com/community)\
    \ for more information.\n\n\n\n> \u26A0 This file was generated on Thu Mar 11\
    \ 12:20:48 2021 (UTC) and may not be updated.\nPlease download the latest version\
    \ at\n[https://apispec.connect.cloudblue.com/connect-openapi30.yml](https://apispec.connect.cloudblue.com/connect-openapi30.yml]).\n"
servers:
- url: https://api.connect.cloudblue.com/public/v1
security:
- Apikey0: []
paths:
  /subscriptions/assets:
    get:
      operationId: assets_list_listAssets
      description: ''
      tags:
      - Subscriptions
      parameters:
      - $ref: '#/components/parameters/subscriptions.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/subscriptions.RQLContentRangeLimitOffsetPagination.offset'
      - name: billing.next_date
        description: '**Filter for: billing.next_date**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: billing.period.uom
        description: '**Filter for: billing.period.uom**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - monthly
          - yearly
          - years_2
          - years_3
          - years_4
          - years_5
      - name: connection.hub.id
        description: '**Filter for: connection.hub.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.hub.name
        description: '**Filter for: connection.hub.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.id
        description: '**Filter for: connection.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.provider.id
        description: '**Filter for: connection.provider.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.provider.name
        description: '**Filter for: connection.provider.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.type
        description: '**Filter for: connection.type**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - test
          - production
          - preview
      - name: connection.vendor.id
        description: '**Filter for: connection.vendor.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.vendor.name
        description: '**Filter for: connection.vendor.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: contract.id
        description: '**Filter for: contract.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: CRD-00000-00000-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: external_id
        description: '**Filter for: external_id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: external_uid
        description: '**Filter for: external_uid**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.id
        description: '**Filter for: marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: MP-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.name
        description: '**Filter for: marketplace.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - processing
          - active
          - terminating
          - suspended
          - terminated
      - name: tiers.customer.id
        description: '**Filter for: tiers.customer.id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: tiers.tier1.id
        description: '**Filter for: tiers.tier1.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: tiers.tier2.id
        description: '**Filter for: tiers.tier2.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/subscriptions.Assets'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/subscriptions.any_400'
  /subscriptions/assets/{id}:
    get:
      operationId: assets_detail_retrieveAsset
      description: ''
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Asset.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriptions.Asset'
          description: ''
        '400':
          $ref: '#/components/responses/subscriptions.any_400'
  /subscriptions/requests:
    get:
      operationId: requests_list_listBillingRequests
      description: ''
      tags:
      - Subscriptions
      parameters:
      - $ref: '#/components/parameters/subscriptions.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/subscriptions.RQLContentRangeLimitOffsetPagination.offset'
      - name: asset.billing.next_date
        description: '**Filter for: asset.billing.next_date**


          lookups: eq, ne, ge, gt, le, lt, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: asset.billing.period.uom
        description: '**Filter for: asset.billing.period.uom**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - monthly
          - yearly
          - years_2
          - years_3
          - years_4
          - years_5
      - name: asset.connection.hub.id
        description: '**Filter for: asset.connection.hub.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.hub.name
        description: '**Filter for: asset.connection.hub.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.id
        description: '**Filter for: asset.connection.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.provider.id
        description: '**Filter for: asset.connection.provider.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.provider.name
        description: '**Filter for: asset.connection.provider.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.type
        description: '**Filter for: asset.connection.type**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - test
          - production
          - preview
      - name: asset.connection.vendor.id
        description: '**Filter for: asset.connection.vendor.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.vendor.name
        description: '**Filter for: asset.connection.vendor.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.contract.id
        description: '**Filter for: asset.contract.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: CRD-00000-00000-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.external_id
        description: '**Filter for: asset.external_id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.external_uid
        description: '**Filter for: asset.external_uid**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.id
        description: '**Filter for: asset.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.marketplace.id
        description: '**Filter for: asset.marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: MP-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.marketplace.name
        description: '**Filter for: asset.marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.product.id
        description: '**Filter for: asset.product.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.product.name
        description: '**Filter for: asset.product.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.tiers.customer.id
        description: '**Filter for: asset.tiers.customer.id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.tiers.tier1.id
        description: '**Filter for: asset.tiers.tier1.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.tiers.tier2.id
        description: '**Filter for: asset.tiers.tier2.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: period.from
        description: '**Filter for: period.from**


          lookups: eq, ne, ge, gt, le, lt, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: period.to
        description: '**Filter for: period.to**


          lookups: eq, ne, ge, gt, le, lt, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: period.uom
        description: '**Filter for: period.uom**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - monthly
          - yearly
          - years_2
          - years_3
          - years_4
          - years_5
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - vendor
          - provider
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/subscriptions.BillingRequest'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/subscriptions.any_400'
    post:
      operationId: requests_list_createBillingRequest
      description: ''
      tags:
      - Subscriptions
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptions.NewBillingRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriptions.BillingRequest'
          description: ''
        '400':
          $ref: '#/components/responses/subscriptions.any_400'
  /subscriptions/requests/{id}:
    get:
      operationId: requests_detail_retrieveBillingRequest
      description: ''
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Request.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriptions.BillingRequest'
          description: ''
        '400':
          $ref: '#/components/responses/subscriptions.any_400'
  /subscriptions/requests/{id}/attributes:
    put:
      operationId: requests_attributes_putAttributesBillingRequest
      description: ''
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptions.Attribute'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriptions.Attribute'
          description: ''
        '400':
          $ref: '#/components/responses/subscriptions.any_400'
  /agreements:
    get:
      operationId: agreement_list_listAgreements
      description: ''
      tags:
      - Agreements
      parameters:
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: active
        description: '**Filter for: active**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: created
        description: '**Filter for: created**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: forms.id
        description: '**Filter for: forms.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: forms__type
        description: '**Filter for: forms__type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - enroll
          - product
          - item
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.id
        description: '**Filter for: marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.name
        description: '**Filter for: marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace__id
        description: '**Filter for: marketplace__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace__name
        description: '**Filter for: marketplace__name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.id
        description: '**Filter for: owner.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.name
        description: '**Filter for: owner.name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner__id
        description: '**Filter for: owner__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner__name
        description: '**Filter for: owner__name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: title
        description: '**Filter for: title**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - distribution
          - program
          - service
          - syndication
          - referral
      - name: updated
        description: '**Filter for: updated**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Agreement'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: agreement_list_createAgreementCreate
      description: ''
      tags:
      - Agreements
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.AgreementCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Agreement'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /agreements/{agreement_id}/agreements:
    get:
      operationId: agreement_agreements_list_listAgreementReads
      description: ''
      tags:
      - Agreements
      parameters:
      - name: agreement_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.AgreementRead'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: agreement_agreements_list_createAgreementCreate
      description: ''
      tags:
      - Agreements
      parameters:
      - name: agreement_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.AgreementCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.AgreementRead'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /agreements/{agreement_id}/contracts:
    get:
      operationId: agreement_contracts_list_listContracts
      description: ''
      tags:
      - Agreements
      parameters:
      - name: agreement_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Contract'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: agreement_contracts_list_createContract
      description: ''
      tags:
      - Agreements
      parameters:
      - name: agreement_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.Contract'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Contract'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /agreements/{agreement_id}/versions:
    get:
      operationId: agreement_versions_list_listAgreementVersions
      description: ''
      tags:
      - Agreements
      parameters:
      - name: agreement_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.AgreementVersion'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: agreement_versions_list_createAgreementVersionCreate
      description: ''
      tags:
      - Agreements
      parameters:
      - name: agreement_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.AgreementVersionCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.AgreementVersion'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /agreements/{agreement_id}/versions/{version}:
    get:
      operationId: agreement_versions_detail_retrieveAgreementVersion
      description: ''
      tags:
      - Agreements
      parameters:
      - name: agreement_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.AgreementVersion'
          description: ''
    delete:
      operationId: agreement_versions_detail_destroyAgreementVersion
      description: ''
      tags:
      - Agreements
      parameters:
      - name: agreement_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /agreements/{agreement_id}/versions/{version}/activate:
    post:
      operationId: agreement_versions_activate_postActivateAgreementVersion
      description: ''
      tags:
      - Agreements
      parameters:
      - name: agreement_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: ''
  /agreements/{agreement_id}/versions/{version}/document:
    get:
      operationId: agreement_versions_document_getDocumentAgreementVersion
      description: ''
      tags:
      - Agreements
      parameters:
      - name: agreement_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '302':
          description: ''
  /agreements/{id}:
    get:
      operationId: agreement_detail_retrieveAgreement
      description: Get base object or redirect to object version.
      tags:
      - Agreements
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Agreement'
          description: ''
    put:
      operationId: agreement_detail_updateAgreement
      description: ''
      tags:
      - Agreements
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.Agreement'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Agreement'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: agreement_detail_destroyAgreement
      description: ''
      tags:
      - Agreements
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /agreements/{id}/document:
    get:
      operationId: agreement_document_getDocumentAgreement
      description: ''
      tags:
      - Agreements
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '302':
          description: ''
  /assets:
    get:
      operationId: asset_list_listAssets
      description: ''
      tags:
      - Assets
      parameters:
      - $ref: '#/components/parameters/dp.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/dp.RQL1000Pagination.offset'
      - name: connection.hub.id
        description: '**Filter for: connection.hub.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: HB-0000-0000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.id
        description: '**Filter for: connection.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: CT-0000-0000-0000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.provider.id
        description: '**Filter for: connection.provider.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.provider.name
        description: '**Filter for: connection.provider.name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.type
        description: '**Filter for: connection.type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - test
          - production
      - name: connection.vendor.id
        description: '**Filter for: connection.vendor.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.vendor.name
        description: '**Filter for: connection.vendor.name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: contract.id
        description: '**Filter for: contract.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: CRD-00000-00000-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: created
        description: '**Filter for: created**


          lookups: gt, lt

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: external_id
        description: '**Filter for: external_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: external_name
        description: '**Filter for: external_name**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: external_uid
        description: '**Filter for: external_uid**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: hub.name
        description: '**Filter for: hub.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.id
        description: '**Filter for: marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true

          null: MP-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.name
        description: '**Filter for: marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: params.id
        description: '**Filter for: params.id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: params.value
        description: '**Filter for: params.value**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.title
        description: '**Filter for: product.title**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - processing
          - active
          - terminating
          - suspended
          - terminated
      - name: tiers.customer.id
        description: '**Filter for: tiers.customer.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: tiers.customer.name
        description: '**Filter for: tiers.customer.name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: tiers.tier1.id
        description: '**Filter for: tiers.tier1.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: tiers.tier2.id
        description: '**Filter for: tiers.tier2.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: updated
        description: '**Filter for: updated**


          lookups: gt, lt

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Asset'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /assets/{asset_id}/requests:
    get:
      operationId: asset_requests_list_listAssets
      description: ''
      tags:
      - Assets
      parameters:
      - name: asset_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/dp.RQL1000Pagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.RequestReference'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /assets/{id}:
    get:
      operationId: asset_detail_retrieveAsset
      description: ''
      tags:
      - Assets
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this asset.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Asset'
          description: ''
  /categories:
    get:
      operationId: category_list_listListCategories
      description: ''
      tags:
      - Products
      parameters:
      - $ref: '#/components/parameters/dp.CategoriesPagination.limit'
      - $ref: '#/components/parameters/dp.CategoriesPagination.offset'
      - name: family.id
        description: '**Filter for: family.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: parent.id
        description: '**Filter for: parent.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ListCategory'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /categories/{id}:
    get:
      operationId: category_detail_retrieveCategory
      description: ''
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Category'
          description: ''
  /contracts:
    get:
      operationId: contract_list_listContracts
      description: ''
      tags:
      - Contracts
      parameters:
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: agreement.id
        description: '**Filter for: agreement.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: agreement.name
        description: '**Filter for: agreement.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: agreement.owner.id
        description: '**Filter for: agreement.owner.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: agreement__id
        description: '**Filter for: agreement__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: agreement__name
        description: '**Filter for: agreement__name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: agreement__owner__id
        description: '**Filter for: agreement__owner__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.created.by.id
        description: '**Filter for: events.created.by.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.by.name
        description: '**Filter for: events.created.by.name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.signed.by.id
        description: '**Filter for: events.signed.by.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.signed.by.name
        description: '**Filter for: events.signed.by.name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: issuer.id
        description: '**Filter for: issuer.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: issuer.name
        description: '**Filter for: issuer.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: kind
        description: '**Filter for: kind**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - production
          - test
      - name: marketplace.id
        description: '**Filter for: marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.name
        description: '**Filter for: marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace__id
        description: '**Filter for: marketplace__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace__name
        description: '**Filter for: marketplace__name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.id
        description: '**Filter for: owner.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.name
        description: '**Filter for: owner.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner__id
        description: '**Filter for: owner__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner__name
        description: '**Filter for: owner__name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: partner.id
        description: '**Filter for: partner.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: referral.agreement.id
        description: '**Filter for: referral.agreement.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing.listing.id
        description: '**Filter for: sourcing.listing.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing.marketplace.id
        description: '**Filter for: sourcing.marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing.marketplace.name
        description: '**Filter for: sourcing.marketplace.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing.product.id
        description: '**Filter for: sourcing.product.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing.product.name
        description: '**Filter for: sourcing.product.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - new
          - enrolling
          - pending
          - active
          - terminated
          - rejected
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - distribution
          - program
          - service
          - syndication
          - referral
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Contract'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /contracts/{contract_id}/data:
    get:
      operationId: enroll_distribution_data_list_listDistributionDatas
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.DistributionData'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: enroll_distribution_data_list_createDistributionData
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.DistributionData'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.DistributionData'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /contracts/{contract_id}/data/products:
    get:
      operationId: product_distribution_data_list_listDistributionDatas
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.DistributionData'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_distribution_data_list_createDistributionData
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.DistributionData'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.DistributionData'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /contracts/{contract_id}/data/products/{id}:
    get:
      operationId: product_distribution_data_detail_retrieveDistributionData
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique value identifying this distribution data.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.DistributionData'
          description: ''
    put:
      operationId: product_distribution_data_detail_updateDistributionData
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique value identifying this distribution data.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.DistributionData'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.DistributionData'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
  /contracts/{contract_id}/data/products/{product_id}/items:
    get:
      operationId: item_distribution_data_list_listDistributionDatas
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.DistributionData'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: item_distribution_data_list_createDistributionData
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.DistributionData'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.DistributionData'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /contracts/{contract_id}/data/products/{product_id}/items/{id}:
    get:
      operationId: item_distribution_data_detail_retrieveDistributionData
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique value identifying this distribution data.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.DistributionData'
          description: ''
    put:
      operationId: item_distribution_data_detail_updateDistributionData
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique value identifying this distribution data.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.DistributionData'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.DistributionData'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
  /contracts/{contract_id}/versions:
    get:
      operationId: contract_versions_list_listContractVersions
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ContractVersion'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /contracts/{contract_id}/versions/{version__version}:
    get:
      operationId: contract_versions_detail_retrieveContractVersion
      description: ''
      tags:
      - Contracts
      parameters:
      - name: contract_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version__version
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ContractVersion'
          description: ''
  /contracts/{id}:
    get:
      operationId: contract_detail_retrieveContract
      description: Get base object or redirect to object version.
      tags:
      - Contracts
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Contract.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Contract'
          description: ''
    put:
      operationId: contract_detail_updateContract
      description: ''
      tags:
      - Contracts
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Contract.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.Contract'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Contract'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: contract_detail_destroyContract
      description: ''
      tags:
      - Contracts
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Contract.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /contracts/{id}/enroll:
    post:
      operationId: contract_enroll_postEnrollContract
      description: ''
      tags:
      - Contracts
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Contract.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /contracts/{id}/refine:
    post:
      operationId: contract_refine_postRefineContract
      description: ''
      tags:
      - Contracts
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Contract.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /contracts/{id}/reject:
    post:
      operationId: contract_reject_postRejectContract
      description: ''
      tags:
      - Contracts
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Contract.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /contracts/{id}/sign:
    post:
      operationId: contract_sign_postSignContract
      description: ''
      tags:
      - Contracts
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Contract.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /contracts/{id}/terminate:
    post:
      operationId: contract_terminate_postTerminateContract
      description: ''
      tags:
      - Contracts
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Contract.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /countries:
    get:
      operationId: country_list_listCountries
      description: ''
      tags:
      - Marketplaces
      parameters:
      - $ref: '#/components/parameters/dp.CountryPagination.limit'
      - $ref: '#/components/parameters/dp.CountryPagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Country'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /countries/{id}:
    get:
      operationId: country_detail_retrieveCountry
      description: ''
      tags:
      - Marketplaces
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Country.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Country'
          description: ''
  /forms:
    get:
      operationId: agreement_forms_list_listAgreementForms
      description: ''
      tags:
      - Agreements
      parameters:
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - enroll
          - product
          - item
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.DistributionAgreementForms'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: agreement_forms_list_createAgreementForm
      description: ''
      tags:
      - Agreements
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.DistributionAgreementForms'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.DistributionAgreementForms'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /forms/{form_id}/versions:
    get:
      operationId: agreement_form_versions_list_listDistributionAgreementFormVersions
      description: ''
      tags:
      - Agreements
      parameters:
      - name: form_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.DistributionAgreementFormVersion'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /forms/{form_id}/versions/{version}:
    get:
      operationId: agreement_form_versions_detail_retrieveDistributionAgreementFormVersion
      description: ''
      tags:
      - Agreements
      parameters:
      - name: form_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.DistributionAgreementFormVersion'
          description: ''
  /forms/{id}:
    get:
      operationId: agreement_forms_detail_retrieveAgreementForm
      description: Get base object or redirect to object version.
      tags:
      - Agreements
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this agreement form.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.DistributionAgreementForms'
          description: ''
    put:
      operationId: agreement_forms_detail_updateAgreementForm
      description: ''
      tags:
      - Agreements
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this agreement form.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.DistributionAgreementForms'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.DistributionAgreementForms'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: agreement_forms_detail_destroyAgreementForm
      description: ''
      tags:
      - Agreements
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this agreement form.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /hubs:
    get:
      operationId: hubs_list_listHubs
      description: ''
      tags:
      - Hubs
      parameters:
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events__created__at
        description: '**Filter for: events__created__at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events__updated__at
        description: '**Filter for: events__updated__at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: instance.id
        description: '**Filter for: instance.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: instance.type
        description: '**Filter for: instance.type**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - oa
          - cb
          - api
      - name: instance__id
        description: '**Filter for: instance__id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: instance__type
        description: '**Filter for: instance__type**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - oa
          - cb
          - api
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: stats.connections
        description: '**Filter for: stats.connections**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: stats.marketplaces
        description: '**Filter for: stats.marketplaces**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: stats__connections
        description: '**Filter for: stats__connections**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: stats__marketplaces
        description: '**Filter for: stats__marketplaces**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Hub'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: hubs_list_createHub
      description: ''
      tags:
      - Hubs
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.HubCreateResponse'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.HubCreateResponse'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /hubs/{hub_id}/connections:
    get:
      operationId: hub_connections_list_listConnectionReferences
      description: ''
      tags:
      - Hubs
      parameters:
      - name: hub_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      - name: created_at
        description: '**Filter for: created_at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product__name
        description: '**Filter for: product__name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ConnectionReference'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /hubs/{hub_id}/marketplaces:
    get:
      operationId: hub_marketplaces_list_listHubReferenceMarketplaces
      description: ''
      tags:
      - Hubs
      parameters:
      - name: hub_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.HubReferenceMarketplace'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /hubs/{id}:
    get:
      operationId: hubs_detail_retrieveHub
      description: ''
      tags:
      - Hubs
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this hub.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Hub'
          description: ''
    put:
      operationId: hubs_detail_updateHub
      description: ''
      tags:
      - Hubs
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this hub.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.Hub'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Hub'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: hubs_detail_destroyHub
      description: ''
      tags:
      - Hubs
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this hub.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /listing-requests:
    get:
      operationId: listingrequest_list_listListingRequests
      description: ''
      tags:
      - Listings
      parameters:
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: contract__id
        description: '**Filter for: contract__id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: contract__name
        description: '**Filter for: contract__name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: created
        description: '**Filter for: created**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.contract.id
        description: '**Filter for: listing.contract.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.contract.marketplace.id
        description: '**Filter for: listing.contract.marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.contract.marketplace.name
        description: '**Filter for: listing.contract.marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.contract.name
        description: '**Filter for: listing.contract.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.id
        description: '**Filter for: listing.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.marketplace.id
        description: '**Filter for: listing.marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.marketplace.name
        description: '**Filter for: listing.marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.product.id
        description: '**Filter for: listing.product.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.product.name
        description: '**Filter for: listing.product.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.product.version
        description: '**Filter for: listing.product.version**


          lookups: eq, ne, ge, gt, le, lt, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: listing.provider.id
        description: '**Filter for: listing.provider.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.provider.name
        description: '**Filter for: listing.provider.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.vendor.id
        description: '**Filter for: listing.vendor.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing.vendor.name
        description: '**Filter for: listing.vendor.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: listing__id
        description: '**Filter for: listing__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace__id
        description: '**Filter for: marketplace__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace__name
        description: '**Filter for: marketplace__name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.version
        description: '**Filter for: product.version**


          lookups: eq, ne, ge, gt, le, lt, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: product__id
        description: '**Filter for: product__id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product__name
        description: '**Filter for: product__name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product__version
        description: '**Filter for: product__version**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: provider__id
        description: '**Filter for: provider__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: provider__name
        description: '**Filter for: provider__name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: state
        description: '**Filter for: state**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - reviewing
          - deploying
          - canceled
          - completed
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - unlisted
          - listed
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - new
          - remove
      - name: updated
        description: '**Filter for: updated**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: vendor__id
        description: '**Filter for: vendor__id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: vendor__name
        description: '**Filter for: vendor__name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ListingRequest'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: listingrequest_list_createListingRequest
      description: ''
      tags:
      - Listings
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                    - new
                    - update
                    - remove
                  note:
                    type: string
                  product_id:
                    type: string
                  contract_id:
                    type: string
              - type: object
                properties:
                  type:
                    type: string
                    enum:
                    - update
                    - remove
                  note:
                    type: string
                  listing_id:
                    type: string
              discriminator:
                propertyName: type
        description: ''
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ListingRequest'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /listing-requests/{id}:
    get:
      operationId: listingrequest_detail_retrieveListingRequest
      description: ''
      tags:
      - Listings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this listing request.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ListingRequest'
          description: ''
  /listing-requests/{id}/assign:
    post:
      operationId: listingrequest_assign_postAssignListingRequest
      description: ''
      tags:
      - Listings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this listing request.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /listing-requests/{id}/cancel:
    post:
      operationId: listingrequest_cancel_postCancelListingRequest
      description: ''
      tags:
      - Listings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this listing request.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /listing-requests/{id}/complete:
    post:
      operationId: listingrequest_complete_postCompleteListingRequest
      description: ''
      tags:
      - Listings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this listing request.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /listing-requests/{id}/deploy:
    post:
      operationId: listingrequest_deploy_postDeployListingRequest
      description: ''
      tags:
      - Listings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this listing request.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /listing-requests/{id}/refine:
    post:
      operationId: listingrequest_refine_postRefineListingRequest
      description: ''
      tags:
      - Listings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this listing request.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /listing-requests/{id}/submit:
    post:
      operationId: listingrequest_submit_postSubmitListingRequest
      description: ''
      tags:
      - Listings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this listing request.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /listing-requests/{id}/unassign:
    post:
      operationId: listingrequest_unassign_postUnassignListingRequest
      description: ''
      tags:
      - Listings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this listing request.
        schema:
          type: string
      responses:
        '200':
          description: ''
  /listings:
    get:
      operationId: listing_list_listListings
      description: ''
      tags:
      - Listings
      parameters:
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: contract.id
        description: '**Filter for: contract.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: contract__id
        description: '**Filter for: contract__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: contract__marketplace__name
        description: '**Filter for: contract__marketplace__name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: created
        description: '**Filter for: created**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.id
        description: '**Filter for: marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.name
        description: '**Filter for: marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace__id
        description: '**Filter for: marketplace__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace__name
        description: '**Filter for: marketplace__name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace__name__icontains
        description: '**Filter for: marketplace__name__icontains**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: offer.id
        description: '**Filter for: offer.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: offer.name
        description: '**Filter for: offer.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pending_request.status
        description: '**Filter for: pending_request.status**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pending_request.type
        description: '**Filter for: pending_request.type**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pending_request__id
        description: '**Filter for: pending_request__id**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pending_request__is_null
        description: '**Filter for: pending_request__is_null**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pricelist.id
        description: '**Filter for: pricelist.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pricelist.name
        description: '**Filter for: pricelist.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product__id
        description: '**Filter for: product__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product__name
        description: '**Filter for: product__name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product__name__icontains
        description: '**Filter for: product__name__icontains**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: provider.id
        description: '**Filter for: provider.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: provider.name
        description: '**Filter for: provider.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: provider__id
        description: '**Filter for: provider__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing.id
        description: '**Filter for: sourcing.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing.name
        description: '**Filter for: sourcing.name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing.published
        description: '**Filter for: sourcing.published**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: sourcing__agreement__id
        description: '**Filter for: sourcing__agreement__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing__agreement__name
        description: '**Filter for: sourcing__agreement__name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing__agreement__name__icontains
        description: '**Filter for: sourcing__agreement__name__icontains**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing__published
        description: '**Filter for: sourcing__published**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - unlisted
          - listed
      - name: updated
        description: '**Filter for: updated**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: vendor.id
        description: '**Filter for: vendor.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: vendor.name
        description: '**Filter for: vendor.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Listing'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /listings/{id}:
    get:
      operationId: listing_detail_retrieveListing
      description: ''
      tags:
      - Listings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this listing.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Listing'
          description: ''
    put:
      operationId: listing_detail_updateListing
      description: ''
      tags:
      - Listings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this listing.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.Listing'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Listing'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
  /marketplaces:
    get:
      operationId: marketplace_list_listMarketplaces
      description: ''
      tags:
      - Marketplaces
      parameters:
      - $ref: '#/components/parameters/dp.MarketplacePagination.limit'
      - $ref: '#/components/parameters/dp.MarketplacePagination.offset'
      - name: countries.id
        description: '**Filter for: countries.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: currency
        description: '**Filter for: currency**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - SSP
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
      - name: description
        description: '**Filter for: description**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: hubs.id
        description: '**Filter for: hubs.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: hubs.name
        description: '**Filter for: hubs.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.id
        description: '**Filter for: owner.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.name
        description: '**Filter for: owner.name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner__id
        description: '**Filter for: owner__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing
        description: '**Filter for: sourcing**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Marketplace'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: marketplace_list_createMarketplace
      description: ''
      tags:
      - Marketplaces
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.Marketplace'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Marketplace'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /marketplaces/{id}:
    get:
      operationId: marketplace_detail_retrieveMarketplace
      description: ''
      tags:
      - Marketplaces
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this marketplace.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Marketplace'
          description: ''
    put:
      operationId: marketplace_detail_updateMarketplace
      description: ''
      tags:
      - Marketplaces
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this marketplace.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.MarketplaceUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.MarketplaceUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: marketplace_detail_destroyMarketplace
      description: ''
      tags:
      - Marketplaces
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this marketplace.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /marketplaces/{id}/icon:
    post:
      operationId: marketplace_icon_postIconMarketplace
      description: ''
      tags:
      - Marketplaces
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this marketplace.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.MarketplaceIcon'
      responses:
        '200':
          description: ''
  /partners:
    get:
      operationId: partner_list_listPartners
      description: ''
      tags:
      - Partners
      parameters:
      - $ref: '#/components/parameters/dp.PartnersPagination.limit'
      - $ref: '#/components/parameters/dp.PartnersPagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: public
        description: '**Filter for: public**


          lookups: eq, ne, null'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: stats.contracts.distribution
        description: '**Filter for: stats.contracts.distribution**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: stats.contracts.program
        description: '**Filter for: stats.contracts.program**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: stats.contracts.service
        description: '**Filter for: stats.contracts.service**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: stats.contracts.syndication
        description: '**Filter for: stats.contracts.syndication**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: stats.listings
        description: '**Filter for: stats.listings**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - invited
          - active
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - vendor
          - provider
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Partner'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /partners/{partner_id}:
    get:
      operationId: partner_detail_retrievePartner
      description: ''
      tags:
      - Partners
      parameters:
      - name: partner_id
        in: path
        required: true
        description: A unique value identifying this partner.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Partner'
          description: ''
  /products:
    get:
      operationId: products_list_listProducts
      description: ''
      tags:
      - Products
      parameters:
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: category.id
        description: '**Filter for: category.id**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.id
        description: '**Filter for: owner.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.name
        description: '**Filter for: owner.name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: replacement.id
        description: '**Filter for: replacement.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: sourcing.marketplaces
        description: '**Filter for: sourcing.marketplaces**


          lookups: eq, ne, ilike, null, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, ge, gt, le, lt, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - indevelopment
          - oncertification
          - published
          - initializationfailed
          - deleted
          - endofsale
      - name: visibility.catalog
        description: '**Filter for: visibility.catalog**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: visibility.listing
        description: '**Filter for: visibility.listing**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: visibility.owner
        description: '**Filter for: visibility.owner**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: visibility.syndication
        description: '**Filter for: visibility.syndication**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Product'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: products_list_createProductCreate
      description: ''
      tags:
      - Products
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductCreate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{id}:
    get:
      operationId: products_detail_retrieveProduct
      description: ''
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Product'
          description: ''
    put:
      operationId: products_detail_updateProductUpdate
      description: ''
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: products_detail_destroyProduct
      description: ''
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /products/{id}/endsale:
    post:
      operationId: products_endsale_postEndsaleProduct
      description: ''
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                replacement:
                  type: object
                  properties:
                    id:
                      type: string
                end_of_sale_notes:
                  type: string
      responses:
        '200':
          description: ''
  /products/{id}/resumesale:
    post:
      operationId: products_resumesale_postResumesaleProduct
      description: ''
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: ''
  /products/{product_id}/actions:
    get:
      operationId: product_actions_list_listProductAction
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: scope
        description: '**Filter for: scope**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - asset
          - tier1
          - tier2
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ProductActions'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_actions_list_createProductActions
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductActions'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductActions'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/actions/regeneratesecret:
    post:
      operationId: product_actions_regeneratesecret_postRegeneratesecretRegenerateSecret
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.RegenerateSecret'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.RegenerateSecret'
          description: ''
  /products/{product_id}/actions/{id}:
    get:
      operationId: product_actions_detail_retrieveProductActions
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductActions'
          description: ''
    put:
      operationId: product_actions_detail_updateProductActions
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductActions'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductActions'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: product_actions_detail_destroyProductActions
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /products/{product_id}/actions/{id}/actionLink:
    get:
      operationId: product_actions_get_action_link_getGet_action_linkProductActions
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                    format: uri
          description: ''
  /products/{product_id}/agreements:
    get:
      operationId: product_agreements_list_listProductSourcingAgreements
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: marketplace.id
        description: '**Filter for: marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.name
        description: '**Filter for: marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.id
        description: '**Filter for: owner.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.name
        description: '**Filter for: owner.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: parent.id
        description: '**Filter for: parent.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: parent.name
        description: '**Filter for: parent.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: parent.type
        description: '**Filter for: parent.type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - distribution
          - program
          - service
          - syndication
          - referral
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: agreement.id
        description: '**This filter is deprecated, please use parent.id instead**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: true
        schema:
          type: string
      - name: agreement.name
        description: '**This filter is deprecated, please use parent.name instead**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: true
        schema:
          type: string
      - name: contract.id
        description: '**Filter for: contract.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: true
        schema:
          type: string
      - name: contract.status
        description: '**Filter for: contract.status**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: true
        schema:
          type: string
          enum:
          - new
          - enrolling
          - pending
          - active
          - terminated
          - rejected
      - name: sourcing_marketplace.id
        description: '**This filter is deprecated, please use marketplace.id instead**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: true
        schema:
          type: string
      - name: sourcing_marketplace.name
        description: '**This filter is deprecated, please use marketplace.name instead**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: true
        schema:
          type: string
      - name: target_marketplace.id
        description: '**Filter for: target_marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: true
        schema:
          type: string
      - name: target_marketplace.name
        description: '**Filter for: target_marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ProductSourcingAgreement'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /products/{product_id}/agreements/{id}:
    get:
      operationId: product_agreements_detail_retrieveProductSourcingAgreement
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductSourcingAgreement'
          description: ''
  /products/{product_id}/configurations:
    get:
      operationId: product_configurations_list_listConfigurationDataReads
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: item.id
        description: '**Filter for: item.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.name
        description: '**Filter for: item.name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.id
        description: '**Filter for: marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.name
        description: '**Filter for: marketplace.name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: parameter.constraints.required
        description: '**Filter for: parameter.constraints.required**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: parameter.constraints.shared
        description: '**Filter for: parameter.constraints.shared**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - view
          - edit
      - name: parameter.id
        description: '**Filter for: parameter.id**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: parameter.scope
        description: '**Filter for: parameter.scope**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: parameter.title
        description: '**Filter for: parameter.title**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: value
        description: '**Filter for: value**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ConfigurationDataRead'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_configurations_list_createConfigurationDataWrite
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ConfigurationDataWrite'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ConfigurationDataWrite'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/connections:
    get:
      operationId: product_connections_list_listConnections
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: hub.id
        description: '**Filter for: hub.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: HB-0000-0000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: hub.instance.id
        description: '**Filter for: hub.instance.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: hub.name
        description: '**Filter for: hub.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Connection'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /products/{product_id}/connections/{id}:
    get:
      operationId: product_connections_detail_retrieveConnection
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Connection'
          description: ''
  /products/{product_id}/items:
    get:
      operationId: product_items_list_listUiItems
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: app.id
        description: '**Filter for: app.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: commitment.count
        description: '**Filter for: commitment.count**


          lookups: eq, ne, ge, gt, le, lt, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: description.value
        description: '**Filter for: description.value**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: display_name
        description: '**Filter for: display_name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: dynamic
        description: '**Filter for: dynamic**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.saleended.at
        description: '**Filter for: events.saleended.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: frozen
        description: '**Filter for: frozen**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item_type
        description: '**Filter for: item_type**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - Reservation
          - PPU
      - name: local_id
        description: '**Filter for: local_id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: mpn
        description: '**Filter for: mpn**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: period
        description: '**Filter for: period**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - Monthly
          - Yearly
          - years_2
          - years_3
          - years_4
          - years_5
          - OneTime
      - name: replacement.id
        description: '**Filter for: replacement.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - published
          - endofsale
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - Reservation
          - PPU
      - name: unit.title
        description: '**Filter for: unit.title**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: usage_data_type
        description: '**Filter for: usage_data_type**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - Integer
          - Decimal(1)
          - Decimal(2)
          - Decimal(4)
          - Decimal(8)
      - name: verbose_id
        description: '**Filter for: verbose_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: version
        description: '**Filter for: version**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.UIItem'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_items_list_createItemCreate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ItemCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ItemCreate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/items/{verbose_id}:
    get:
      operationId: product_items_detail_retrieveUIItem
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.UIItem'
          description: ''
    put:
      operationId: product_items_detail_updateItemUpdate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ItemUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ItemUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: product_items_detail_destroyUIItem
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /products/{product_id}/items/{verbose_id}/endsale:
    post:
      operationId: product_items_endsale_postEndsaleUIItem
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                replacement:
                  type: object
                  properties:
                    id:
                      type: string
                end_of_sale_notes:
                  type: string
      responses:
        '200':
          description: ''
  /products/{product_id}/items/{verbose_id}/resumesale:
    post:
      operationId: product_items_resumesale_postResumesaleUIItem
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: ''
  /products/{product_id}/localizations:
    get:
      operationId: product_localizations_list_listProductLocalizationsReads
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ProductLocalizationsRead'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_localizations_list_createProductLocalizationsCreate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductLocalizationsCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductLocalizationsCreate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/localizations/{locale}:
    get:
      operationId: product_localizations_detail_retrieveProductLocalizationsRead
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: locale
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductLocalizationsRead'
          description: ''
    delete:
      operationId: product_localizations_detail_destroyProductLocalizationsRead
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: locale
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /products/{product_id}/localizations/{locale}/po:
    get:
      operationId: product_localizations_po_getDownloadProductLocalizationsRead
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: locale
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            text/x-gettext-translation:
              schema:
                type: string
          description: ''
    post:
      operationId: product_localizations_po_postPoPOFile
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: locale
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.POFile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.POFile'
          description: ''
  /products/{product_id}/media:
    get:
      operationId: product_media_list_listProductVersionMediaReads
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - image
          - video
      - name: url
        description: '**Filter for: url**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                    thumbnail:
                      type: string
                    url:
                      type: string
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_media_list_createProductVersionMediaCreate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductVersionMediaCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductVersionMediaCreate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/media/{id}:
    get:
      operationId: product_media_detail_retrieveProductVersionMediaRead
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  thumbnail:
                    type: string
                  url:
                    type: string
          description: ''
    put:
      operationId: product_media_detail_updateProductVersionMediaUpdate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductVersionMediaUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductVersionMediaUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: product_media_detail_destroyProductVersionMediaRead
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /products/{product_id}/parameters:
    get:
      operationId: product_parameters_list_listParameterReads
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: constraints.hidden
        description: '**Filter for: constraints.hidden**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: constraints.reconciliation
        description: '**Filter for: constraints.reconciliation**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: constraints.required
        description: '**Filter for: constraints.required**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: constraints.shared
        description: '**Filter for: constraints.shared**


          lookups: eq, null, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: constraints.unique
        description: '**Filter for: constraints.unique**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: phase
        description: '**Filter for: phase**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - configuration
          - fulfillment
          - ordering
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: scope
        description: '**Filter for: scope**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - asset
          - tier1
          - tier2
          - product
          - item
          - marketplace
          - item_marketplace
      - name: title
        description: '**Filter for: title**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - text
          - dropdown
          - password
          - email
          - checkbox
          - subdomain
          - domain
          - address
          - phone
          - object
          - url
          - choice
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ParameterRead'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_parameters_list_createParameterCreate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ParameterCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ParameterRead'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/parameters/{verbose_id}:
    get:
      operationId: product_parameters_detail_retrieveParameterRead
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ParameterRead'
          description: ''
    put:
      operationId: product_parameters_detail_updateParameterUpdate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ParameterUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ParameterRead'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: product_parameters_detail_destroyParameterRead
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /products/{product_id}/templates:
    get:
      operationId: product_templates_list_listProductTemplate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: scope
        description: '**Filter for: scope**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - asset
          - tier1
          - tier2
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - inquire
          - fulfillment
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ProductTemplates'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_templates_list_createProductTemplates
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductTemplates'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductTemplates'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/templates/{id}:
    get:
      operationId: product_templates_detail_retrieveProductTemplates
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductTemplates'
          description: ''
    put:
      operationId: product_templates_detail_updateProductTemplatesUpdate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductTemplatesUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductTemplatesUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: product_templates_detail_destroyProductTemplates
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /products/{product_id}/templates/{id}/preview:
    get:
      operationId: product_templates_preview_getPreviewProductTemplates
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /products/{product_id}/templates/{id}/render:
    get:
      operationId: product_templates_render_getRenderProductTemplates
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /products/{product_id}/versions:
    get:
      operationId: product_versions_list_listProducts
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Product'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_versions_list_createProductVersionCreateUpdate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/versions/{release}:
    get:
      operationId: product_versions_detail_retrieveProduct
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: release
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Product'
          description: ''
    put:
      operationId: product_versions_detail_updateProductVersionCreateUpdate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: release
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductVersionCreateUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductVersionCreateUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
  /products/{product_id}/versions/{release}/build:
    post:
      operationId: product_versions_build_postBuildProduct
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: release
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '202':
          description: ''
  /products/{product_id}/versions/{version_release}/actions:
    get:
      operationId: product_version_actions_list_listProductAction
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: scope
        description: '**Filter for: scope**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - asset
          - tier1
          - tier2
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ProductActions'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_version_actions_list_createProductActions
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductActions'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductActions'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/versions/{version_release}/actions/regeneratesecret:
    post:
      operationId: product_version_actions_regeneratesecret_postRegeneratesecretRegenerateSecret
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.RegenerateSecret'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.RegenerateSecret'
          description: ''
  /products/{product_id}/versions/{version_release}/actions/{id}:
    get:
      operationId: product_version_actions_detail_retrieveProductActions
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductActions'
          description: ''
    put:
      operationId: product_version_actions_detail_updateProductActions
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductActions'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductActions'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: product_version_actions_detail_destroyProductActions
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /products/{product_id}/versions/{version_release}/actions/{id}/actionLink:
    get:
      operationId: product_version_actions_get_action_link_getGet_action_linkProductActions
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                    format: uri
          description: ''
  /products/{product_id}/versions/{version_release}/connections:
    get:
      operationId: product_version_connections_list_listConnections
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: hub.id
        description: '**Filter for: hub.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: HB-0000-0000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: hub.instance.id
        description: '**Filter for: hub.instance.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: hub.name
        description: '**Filter for: hub.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.Connection'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /products/{product_id}/versions/{version_release}/connections/{id}:
    get:
      operationId: product_version_connections_detail_retrieveConnection
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.Connection'
          description: ''
  /products/{product_id}/versions/{version_release}/items:
    get:
      operationId: product_version_items_list_listUiItems
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: app.id
        description: '**Filter for: app.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: commitment.count
        description: '**Filter for: commitment.count**


          lookups: eq, ne, ge, gt, le, lt, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: description.value
        description: '**Filter for: description.value**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: display_name
        description: '**Filter for: display_name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: dynamic
        description: '**Filter for: dynamic**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.saleended.at
        description: '**Filter for: events.saleended.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: frozen
        description: '**Filter for: frozen**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item_type
        description: '**Filter for: item_type**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - Reservation
          - PPU
      - name: local_id
        description: '**Filter for: local_id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: mpn
        description: '**Filter for: mpn**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: period
        description: '**Filter for: period**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - Monthly
          - Yearly
          - years_2
          - years_3
          - years_4
          - years_5
          - OneTime
      - name: replacement.id
        description: '**Filter for: replacement.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - published
          - endofsale
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - Reservation
          - PPU
      - name: unit.title
        description: '**Filter for: unit.title**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: usage_data_type
        description: '**Filter for: usage_data_type**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - Integer
          - Decimal(1)
          - Decimal(2)
          - Decimal(4)
          - Decimal(8)
      - name: verbose_id
        description: '**Filter for: verbose_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: version
        description: '**Filter for: version**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.UIItem'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_version_items_list_createItemCreate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ItemCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ItemCreate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/versions/{version_release}/items/{verbose_id}:
    get:
      operationId: product_version_items_detail_retrieveUIItem
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.UIItem'
          description: ''
    put:
      operationId: product_version_items_detail_updateItemUpdate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ItemUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ItemUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: product_version_items_detail_destroyUIItem
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /products/{product_id}/versions/{version_release}/items/{verbose_id}/endsale:
    post:
      operationId: product_version_items_endsale_postEndsaleUIItem
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                replacement:
                  type: object
                  properties:
                    id:
                      type: string
                end_of_sale_notes:
                  type: string
      responses:
        '200':
          description: ''
  /products/{product_id}/versions/{version_release}/items/{verbose_id}/resumesale:
    post:
      operationId: product_version_items_resumesale_postResumesaleUIItem
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: ''
  /products/{product_id}/versions/{version_release}/media:
    get:
      operationId: product_version_media_list_listProductVersionMediaReads
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - image
          - video
      - name: url
        description: '**Filter for: url**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                    thumbnail:
                      type: string
                    url:
                      type: string
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /products/{product_id}/versions/{version_release}/media/{id}:
    get:
      operationId: product_version_media_detail_retrieveProductVersionMediaRead
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  thumbnail:
                    type: string
                  url:
                    type: string
          description: ''
  /products/{product_id}/versions/{version_release}/parameters:
    get:
      operationId: product_version_parameters_list_listParameterReads
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: constraints.hidden
        description: '**Filter for: constraints.hidden**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: constraints.reconciliation
        description: '**Filter for: constraints.reconciliation**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: constraints.required
        description: '**Filter for: constraints.required**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: constraints.shared
        description: '**Filter for: constraints.shared**


          lookups: eq, null, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: constraints.unique
        description: '**Filter for: constraints.unique**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: phase
        description: '**Filter for: phase**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - configuration
          - fulfillment
          - ordering
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: scope
        description: '**Filter for: scope**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - asset
          - tier1
          - tier2
          - product
          - item
          - marketplace
          - item_marketplace
      - name: title
        description: '**Filter for: title**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - text
          - dropdown
          - password
          - email
          - checkbox
          - subdomain
          - domain
          - address
          - phone
          - object
          - url
          - choice
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ParameterRead'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_version_parameters_list_createParameterCreate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ParameterCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ParameterRead'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/versions/{version_release}/parameters/{verbose_id}:
    get:
      operationId: product_version_parameters_detail_retrieveParameterRead
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ParameterRead'
          description: ''
    put:
      operationId: product_version_parameters_detail_updateParameterUpdate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ParameterUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ParameterRead'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: product_version_parameters_detail_destroyParameterRead
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: verbose_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /products/{product_id}/versions/{version_release}/templates:
    get:
      operationId: product_version_templates_list_listProductTemplate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: scope
        description: '**Filter for: scope**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - asset
          - tier1
          - tier2
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - inquire
          - fulfillment
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.ProductTemplates'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: product_version_templates_list_createProductTemplates
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductTemplates'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductTemplates'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /products/{product_id}/versions/{version_release}/templates/{id}:
    get:
      operationId: product_version_templates_detail_retrieveProductTemplates
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductTemplates'
          description: ''
    put:
      operationId: product_version_templates_detail_updateProductTemplatesUpdate
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.ProductTemplatesUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.ProductTemplatesUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: product_version_templates_detail_destroyProductTemplates
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /products/{product_id}/versions/{version_release}/templates/{id}/preview:
    get:
      operationId: product_version_templates_preview_getPreviewProductTemplates
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /products/{product_id}/versions/{version_release}/templates/{id}/render:
    get:
      operationId: product_version_templates_render_getRenderProductTemplates
      description: ''
      tags:
      - Products
      parameters:
      - name: product_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version_release
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /requests:
    get:
      operationId: request_list_listRequests
      description: 'Requests endpoints allows the creation of different kind of requests
        to handle the life cycle

        of Assets.'
      tags:
      - Assets
      parameters:
      - $ref: '#/components/parameters/dp.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/dp.RQL1000Pagination.offset'
      - name: asset.account_id
        description: '**Filter for: asset.account_id**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.environment
        description: '**Filter for: asset.connection.environment**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - test
          - production
      - name: asset.connection.hub.id
        description: '**Filter for: asset.connection.hub.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: HB-0000-0000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.hub.name
        description: '**Filter for: asset.connection.hub.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.id
        description: '**Filter for: asset.connection.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: CT-0000-0000-0000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.provider.id
        description: '**Filter for: asset.connection.provider.id**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.provider.name
        description: '**Filter for: asset.connection.provider.name**


          lookups: eq, ilike'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.type
        description: '**Filter for: asset.connection.type**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - test
          - production
      - name: asset.connection.vendor.id
        description: '**Filter for: asset.connection.vendor.id**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.connection.vendor.name
        description: '**Filter for: asset.connection.vendor.name**


          lookups: eq, ilike'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.contract.id
        description: '**Filter for: asset.contract.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: CRD-00000-00000-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.external.id
        description: '**Filter for: asset.external.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.external_id
        description: '**Filter for: asset.external_id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.external_uid
        description: '**Filter for: asset.external_uid**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.id
        description: '**Filter for: asset.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.marketplace.id
        description: '**Filter for: asset.marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: MP-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.marketplace.name
        description: '**Filter for: asset.marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.params.id
        description: '**Filter for: asset.params.id**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.params.value
        description: '**Filter for: asset.params.value**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.product.id
        description: '**Filter for: asset.product.id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.product.name
        description: '**Filter for: asset.product.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.status
        description: '**Filter for: asset.status**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - processing
          - active
          - terminating
          - suspended
          - terminated
      - name: asset.tier1_id
        description: '**Filter for: asset.tier1_id**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.tier2_id
        description: '**Filter for: asset.tier2_id**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.tiers.customer.id
        description: '**Filter for: asset.tiers.customer.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.tiers.customer.name
        description: '**Filter for: asset.tiers.customer.name**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.tiers.tier1.id
        description: '**Filter for: asset.tiers.tier1.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.tiers.tier2
        description: '**Filter for: asset.tiers.tier2**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.tiers.tier2.id
        description: '**Filter for: asset.tiers.tier2.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__connection__environment
        description: '**Filter for: asset__connection__environment**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - test
          - production
      - name: asset__connection__hub__id
        description: '**Filter for: asset__connection__hub__id**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__connection__hub__name
        description: '**Filter for: asset__connection__hub__name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__connection__provider__id
        description: '**Filter for: asset__connection__provider__id**


          lookups: eq, ilike'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__connection__provider__name
        description: '**Filter for: asset__connection__provider__name**


          lookups: eq, ilike'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__connection__type
        description: '**Filter for: asset__connection__type**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - test
          - production
      - name: asset__connection__vendor__id
        description: '**Filter for: asset__connection__vendor__id**


          lookups: eq, ilike'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__connection__vendor__name
        description: '**Filter for: asset__connection__vendor__name**


          lookups: eq, ilike'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__id
        description: '**Filter for: asset__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__product__id
        description: '**Filter for: asset__product__id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__product__name
        description: '**Filter for: asset__product__name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__tiers__customer__id
        description: '**Filter for: asset__tiers__customer__id**


          lookups: eq

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__tiers__tier1__id
        description: '**Filter for: asset__tiers__tier1__id**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset__tiers__tier2__id
        description: '**Filter for: asset__tiers__tier2__id**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset_id
        description: '**Filter for: asset_id**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: assignee
        description: '**Filter for: assignee**


          lookups: eq, null, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: assignee.email
        description: '**Filter for: assignee.email**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: assignee__email
        description: '**Filter for: assignee__email**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: contract.id
        description: '**Filter for: contract.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: CRD-00000-00000-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: contract__id
        description: '**Filter for: contract__id**


          lookups: eq, ne, like, ilike, null, in, out

          null: CRD-00000-00000-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: contract__id__exact
        description: '**Filter for: contract__id__exact**


          lookups: eq'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: created
        description: '**Filter for: created**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.id
        description: '**Filter for: marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          null: MP-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.name
        description: '**Filter for: marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace__name
        description: '**Filter for: marketplace__name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product_id
        description: '**Filter for: product_id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - tiers_setup
          - pending
          - inquiring
          - approved
          - failed
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - purchase
          - cancel
          - change
          - suspend
          - resume
      - name: updated
        description: '**Filter for: updated**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                      - purchase
                      - change
                      - suspend
                      - resume
                      - cancel
                    note:
                      type: string
                    reason:
                      type: string
                    created:
                      type: string
                      format: datetime
                    updated:
                      type: string
                      format: datetime
                    answered:
                      type: boolean
                    assignee:
                      type: string
                    activation_key:
                      type: string
                    marketplace: &id005
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        icon:
                          type: string
                    status:
                      type: string
                      enum:
                      - draft
                      - tiers_setup
                      - pending
                      - inquiring
                      - approved
                      - failed
                    asset:
                      type: object
                      properties:
                        id:
                          type: string
                        status:
                          type: string
                          enum:
                          - active
                          - new
                          - processing
                          - rejected
                          - suspended
                          - terminated
                        external_id:
                          type: string
                        external_uid:
                          type: string
                        product:
                          type: object
                          properties:
                            id:
                              type: string
                            icon:
                              type: string
                            name:
                              type: string
                            status:
                              type: string
                              enum:
                              - draft
                              - published
                              - endofsale
                        connection:
                          type: object
                          properties:
                            id:
                              type: string
                            provider: &id001
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                            vendor: *id001
                            type:
                              type: string
                              enum:
                              - preview
                              - test
                              - production
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                        events:
                          type: object
                          properties:
                            created: &id002
                              type: object
                              properties:
                                at:
                                  type: string
                                  format: datetime
                            updated: *id002
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              global_id:
                                type: string
                              mpn:
                                type: string
                              old_quantity:
                                type: string
                              quantity:
                                type: string
                              type:
                                type: string
                              display_name:
                                type: string
                              period:
                                type: string
                              item_type:
                                type: string
                        params:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                              type:
                                type: string
                              description:
                                type: string
                              value:
                                type: string
                              value_error:
                                type: string
                              structured_value:
                                type: object
                                oneOf:
                                - type: object
                                  properties:
                                    address_line1:
                                      type: string
                                    address_line2:
                                      type: string
                                    city:
                                      type: string
                                    state:
                                      type: string
                                    postal_code:
                                      type: string
                                    country:
                                      type: string
                                  required:
                                  - address_line1
                                  - city
                                  - state
                                  - postal_code
                                  - country
                                - type: object
                                  properties:
                                    country_code:
                                      type: string
                                    area_code:
                                      type: string
                                    phone_number:
                                      type: string
                                    extension:
                                      type: string
                                  required:
                                  - country_code
                                  - area_code
                                  - phone_number
                                  - extension
                              value_choices:
                                type: array
                                items:
                                  type: string
                              title:
                                type: string
                        tiers:
                          type: object
                          properties:
                            customer: &id003
                              type: object
                              properties:
                                external_id:
                                  type: string
                                external_uid:
                                  type: string
                                name:
                                  type: string
                                tax_id:
                                  type: string
                                contact_info:
                                  type: object
                                  required:
                                  - address_line1
                                  - city
                                  - postal_code
                                  - country
                                  - contact
                                  properties:
                                    address_line1:
                                      type: string
                                    address_line2:
                                      type: string
                                    city:
                                      type: string
                                    state:
                                      type: string
                                    postal_code:
                                      type: string
                                    country:
                                      type: string
                                    contact:
                                      type: object
                                      required:
                                      - first_name
                                      - last_name
                                      - email
                                      - phone_number
                                      properties:
                                        first_name:
                                          type: string
                                        last_name:
                                          type: string
                                        email:
                                          type: string
                                          format: email
                                        phone_number:
                                          type: object
                                          properties:
                                            country_code:
                                              type: string
                                            area_code:
                                              type: string
                                            phone_number:
                                              type: string
                                            extension:
                                              type: string
                            tier1: *id003
                            tier2: *id003
                        configuration:
                          type: object
                          properties:
                            params:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  title:
                                    type: string
                                  description:
                                    type: string
                                  value:
                                    type: string
                                  type:
                                    type: string
                                    enum:
                                    - text
                                    - dropdown
                                    - password
                                    - email
                                    - checkbox
                                    - subdomain
                                    - domain
                                    - phone
                                    - url
                                    - choice
                                  scope:
                                    type: string
                                    enum:
                                    - product
                                    - item
                                    - marketplace
                                    - item_marketplace
                                  phase:
                                    type: string
                                    enum:
                                    - configuration
                                  contraints:
                                    type: object
                                    properties:
                                      required:
                                        type: boolean
                                      hidden:
                                        type: boolean
                                      unique:
                                        type: boolean
                                      shared:
                                        type: string
                                        enum:
                                        - view
                                        - edit
                                  events:
                                    type: object
                                    properties:
                                      created: &id004
                                        type: object
                                        properties:
                                          at:
                                            type: string
                                            format: datetime
                                          by:
                                            type: object
                                            properties:
                                              id:
                                                type: string
                                              name:
                                                type: string
                                      updated: *id004
                        marketplace: *id005
                        contract:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: request_list_createRequest
      description: 'Requests endpoints allows the creation of different kind of requests
        to handle the life cycle

        of Assets.'
      tags:
      - Assets
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/dp.AssetPurchaseRequest'
              - $ref: '#/components/schemas/dp.AssetChangeRequest'
              - $ref: '#/components/schemas/dp.AssetSuspendResumeCancelRequest'
              discriminator:
                propertyName: type
        description: ''
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                    - purchase
                    - change
                    - suspend
                    - resume
                    - cancel
                  note:
                    type: string
                  reason:
                    type: string
                  created:
                    type: string
                    format: datetime
                  updated:
                    type: string
                    format: datetime
                  answered:
                    type: boolean
                  assignee:
                    type: string
                  activation_key:
                    type: string
                  marketplace: &id010
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      icon:
                        type: string
                  status:
                    type: string
                    enum:
                    - draft
                    - tiers_setup
                    - pending
                    - inquiring
                    - approved
                    - failed
                  asset:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                        - active
                        - new
                        - processing
                        - rejected
                        - suspended
                        - terminated
                      external_id:
                        type: string
                      external_uid:
                        type: string
                      product:
                        type: object
                        properties:
                          id:
                            type: string
                          icon:
                            type: string
                          name:
                            type: string
                          status:
                            type: string
                            enum:
                            - draft
                            - published
                            - endofsale
                      connection:
                        type: object
                        properties:
                          id:
                            type: string
                          provider: &id006
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                          vendor: *id006
                          type:
                            type: string
                            enum:
                            - preview
                            - test
                            - production
                          hub:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      events:
                        type: object
                        properties:
                          created: &id007
                            type: object
                            properties:
                              at:
                                type: string
                                format: datetime
                          updated: *id007
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            global_id:
                              type: string
                            mpn:
                              type: string
                            old_quantity:
                              type: string
                            quantity:
                              type: string
                            type:
                              type: string
                            display_name:
                              type: string
                            period:
                              type: string
                            item_type:
                              type: string
                      params:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                            description:
                              type: string
                            value:
                              type: string
                            value_error:
                              type: string
                            structured_value:
                              type: object
                              oneOf:
                              - type: object
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                required:
                                - address_line1
                                - city
                                - state
                                - postal_code
                                - country
                              - type: object
                                properties:
                                  country_code:
                                    type: string
                                  area_code:
                                    type: string
                                  phone_number:
                                    type: string
                                  extension:
                                    type: string
                                required:
                                - country_code
                                - area_code
                                - phone_number
                                - extension
                            value_choices:
                              type: array
                              items:
                                type: string
                            title:
                              type: string
                      tiers:
                        type: object
                        properties:
                          customer: &id008
                            type: object
                            properties:
                              external_id:
                                type: string
                              external_uid:
                                type: string
                              name:
                                type: string
                              tax_id:
                                type: string
                              contact_info:
                                type: object
                                required:
                                - address_line1
                                - city
                                - postal_code
                                - country
                                - contact
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                  contact:
                                    type: object
                                    required:
                                    - first_name
                                    - last_name
                                    - email
                                    - phone_number
                                    properties:
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                        format: email
                                      phone_number:
                                        type: object
                                        properties:
                                          country_code:
                                            type: string
                                          area_code:
                                            type: string
                                          phone_number:
                                            type: string
                                          extension:
                                            type: string
                          tier1: *id008
                          tier2: *id008
                      configuration:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                title:
                                  type: string
                                description:
                                  type: string
                                value:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                  - text
                                  - dropdown
                                  - password
                                  - email
                                  - checkbox
                                  - subdomain
                                  - domain
                                  - phone
                                  - url
                                  - choice
                                scope:
                                  type: string
                                  enum:
                                  - product
                                  - item
                                  - marketplace
                                  - item_marketplace
                                phase:
                                  type: string
                                  enum:
                                  - configuration
                                contraints:
                                  type: object
                                  properties:
                                    required:
                                      type: boolean
                                    hidden:
                                      type: boolean
                                    unique:
                                      type: boolean
                                    shared:
                                      type: string
                                      enum:
                                      - view
                                      - edit
                                events:
                                  type: object
                                  properties:
                                    created: &id009
                                      type: object
                                      properties:
                                        at:
                                          type: string
                                          format: datetime
                                        by:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                    updated: *id009
                      marketplace: *id010
                      contract:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /requests/{id}:
    get:
      operationId: request_detail_retrieveRequest
      description: obtains a concrete request identified by it's id
      tags:
      - Assets
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this request.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                    - purchase
                    - change
                    - suspend
                    - resume
                    - cancel
                  note:
                    type: string
                  reason:
                    type: string
                  created:
                    type: string
                    format: datetime
                  updated:
                    type: string
                    format: datetime
                  answered:
                    type: boolean
                  assignee:
                    type: string
                  activation_key:
                    type: string
                  marketplace: &id015
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      icon:
                        type: string
                  status:
                    type: string
                    enum:
                    - draft
                    - tiers_setup
                    - pending
                    - inquiring
                    - approved
                    - failed
                  asset:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                        - active
                        - new
                        - processing
                        - rejected
                        - suspended
                        - terminated
                      external_id:
                        type: string
                      external_uid:
                        type: string
                      product:
                        type: object
                        properties:
                          id:
                            type: string
                          icon:
                            type: string
                          name:
                            type: string
                          status:
                            type: string
                            enum:
                            - draft
                            - published
                            - endofsale
                      connection:
                        type: object
                        properties:
                          id:
                            type: string
                          provider: &id011
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                          vendor: *id011
                          type:
                            type: string
                            enum:
                            - preview
                            - test
                            - production
                          hub:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      events:
                        type: object
                        properties:
                          created: &id012
                            type: object
                            properties:
                              at:
                                type: string
                                format: datetime
                          updated: *id012
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            global_id:
                              type: string
                            mpn:
                              type: string
                            old_quantity:
                              type: string
                            quantity:
                              type: string
                            type:
                              type: string
                            display_name:
                              type: string
                            period:
                              type: string
                            item_type:
                              type: string
                      params:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                            description:
                              type: string
                            value:
                              type: string
                            value_error:
                              type: string
                            structured_value:
                              type: object
                              oneOf:
                              - type: object
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                required:
                                - address_line1
                                - city
                                - state
                                - postal_code
                                - country
                              - type: object
                                properties:
                                  country_code:
                                    type: string
                                  area_code:
                                    type: string
                                  phone_number:
                                    type: string
                                  extension:
                                    type: string
                                required:
                                - country_code
                                - area_code
                                - phone_number
                                - extension
                            value_choices:
                              type: array
                              items:
                                type: string
                            title:
                              type: string
                      tiers:
                        type: object
                        properties:
                          customer: &id013
                            type: object
                            properties:
                              external_id:
                                type: string
                              external_uid:
                                type: string
                              name:
                                type: string
                              tax_id:
                                type: string
                              contact_info:
                                type: object
                                required:
                                - address_line1
                                - city
                                - postal_code
                                - country
                                - contact
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                  contact:
                                    type: object
                                    required:
                                    - first_name
                                    - last_name
                                    - email
                                    - phone_number
                                    properties:
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                        format: email
                                      phone_number:
                                        type: object
                                        properties:
                                          country_code:
                                            type: string
                                          area_code:
                                            type: string
                                          phone_number:
                                            type: string
                                          extension:
                                            type: string
                          tier1: *id013
                          tier2: *id013
                      configuration:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                title:
                                  type: string
                                description:
                                  type: string
                                value:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                  - text
                                  - dropdown
                                  - password
                                  - email
                                  - checkbox
                                  - subdomain
                                  - domain
                                  - phone
                                  - url
                                  - choice
                                scope:
                                  type: string
                                  enum:
                                  - product
                                  - item
                                  - marketplace
                                  - item_marketplace
                                phase:
                                  type: string
                                  enum:
                                  - configuration
                                contraints:
                                  type: object
                                  properties:
                                    required:
                                      type: boolean
                                    hidden:
                                      type: boolean
                                    unique:
                                      type: boolean
                                    shared:
                                      type: string
                                      enum:
                                      - view
                                      - edit
                                events:
                                  type: object
                                  properties:
                                    created: &id014
                                      type: object
                                      properties:
                                        at:
                                          type: string
                                          format: datetime
                                        by:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                    updated: *id014
                      marketplace: *id015
                      contract:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
          description: ''
    put:
      operationId: request_detail_updateRequest
      description: 'Updates parameters on the request, only value, structured_value
        or value_error can

        be modified'
      tags:
      - Assets
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                asset:
                  type: object
                  properties:
                    params:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          type:
                            type: string
                          description:
                            type: string
                          value:
                            type: string
                          value_error:
                            type: string
                          structured_value:
                            type: object
                            oneOf:
                            - type: object
                              properties:
                                address_line1:
                                  type: string
                                address_line2:
                                  type: string
                                city:
                                  type: string
                                state:
                                  type: string
                                postal_code:
                                  type: string
                                country:
                                  type: string
                              required:
                              - address_line1
                              - city
                              - state
                              - postal_code
                              - country
                            - type: object
                              properties:
                                country_code:
                                  type: string
                                area_code:
                                  type: string
                                phone_number:
                                  type: string
                                extension:
                                  type: string
                              required:
                              - country_code
                              - area_code
                              - phone_number
                              - extension
                          value_choices:
                            type: array
                            items:
                              type: string
                          title:
                            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                    - purchase
                    - change
                    - suspend
                    - resume
                    - cancel
                  note:
                    type: string
                  reason:
                    type: string
                  created:
                    type: string
                    format: datetime
                  updated:
                    type: string
                    format: datetime
                  answered:
                    type: boolean
                  assignee:
                    type: string
                  activation_key:
                    type: string
                  marketplace: &id020
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      icon:
                        type: string
                  status:
                    type: string
                    enum:
                    - draft
                    - tiers_setup
                    - pending
                    - inquiring
                    - approved
                    - failed
                  asset:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                        - active
                        - new
                        - processing
                        - rejected
                        - suspended
                        - terminated
                      external_id:
                        type: string
                      external_uid:
                        type: string
                      product:
                        type: object
                        properties:
                          id:
                            type: string
                          icon:
                            type: string
                          name:
                            type: string
                          status:
                            type: string
                            enum:
                            - draft
                            - published
                            - endofsale
                      connection:
                        type: object
                        properties:
                          id:
                            type: string
                          provider: &id016
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                          vendor: *id016
                          type:
                            type: string
                            enum:
                            - preview
                            - test
                            - production
                          hub:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      events:
                        type: object
                        properties:
                          created: &id017
                            type: object
                            properties:
                              at:
                                type: string
                                format: datetime
                          updated: *id017
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            global_id:
                              type: string
                            mpn:
                              type: string
                            old_quantity:
                              type: string
                            quantity:
                              type: string
                            type:
                              type: string
                            display_name:
                              type: string
                            period:
                              type: string
                            item_type:
                              type: string
                      params:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                            description:
                              type: string
                            value:
                              type: string
                            value_error:
                              type: string
                            structured_value:
                              type: object
                              oneOf:
                              - type: object
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                required:
                                - address_line1
                                - city
                                - state
                                - postal_code
                                - country
                              - type: object
                                properties:
                                  country_code:
                                    type: string
                                  area_code:
                                    type: string
                                  phone_number:
                                    type: string
                                  extension:
                                    type: string
                                required:
                                - country_code
                                - area_code
                                - phone_number
                                - extension
                            value_choices:
                              type: array
                              items:
                                type: string
                            title:
                              type: string
                      tiers:
                        type: object
                        properties:
                          customer: &id018
                            type: object
                            properties:
                              external_id:
                                type: string
                              external_uid:
                                type: string
                              name:
                                type: string
                              tax_id:
                                type: string
                              contact_info:
                                type: object
                                required:
                                - address_line1
                                - city
                                - postal_code
                                - country
                                - contact
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                  contact:
                                    type: object
                                    required:
                                    - first_name
                                    - last_name
                                    - email
                                    - phone_number
                                    properties:
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                        format: email
                                      phone_number:
                                        type: object
                                        properties:
                                          country_code:
                                            type: string
                                          area_code:
                                            type: string
                                          phone_number:
                                            type: string
                                          extension:
                                            type: string
                          tier1: *id018
                          tier2: *id018
                      configuration:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                title:
                                  type: string
                                description:
                                  type: string
                                value:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                  - text
                                  - dropdown
                                  - password
                                  - email
                                  - checkbox
                                  - subdomain
                                  - domain
                                  - phone
                                  - url
                                  - choice
                                scope:
                                  type: string
                                  enum:
                                  - product
                                  - item
                                  - marketplace
                                  - item_marketplace
                                phase:
                                  type: string
                                  enum:
                                  - configuration
                                contraints:
                                  type: object
                                  properties:
                                    required:
                                      type: boolean
                                    hidden:
                                      type: boolean
                                    unique:
                                      type: boolean
                                    shared:
                                      type: string
                                      enum:
                                      - view
                                      - edit
                                events:
                                  type: object
                                  properties:
                                    created: &id019
                                      type: object
                                      properties:
                                        at:
                                          type: string
                                          format: datetime
                                        by:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                    updated: *id019
                      marketplace: *id020
                      contract:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
  /requests/{id}/approve:
    post:
      operationId: request_approve_postApproveRequest
      description: Approves a request that is in status pending, this is a terminal
        status
      tags:
      - Assets
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                template_id:
                  type: string
                activation_tile:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                    - purchase
                    - change
                    - suspend
                    - resume
                    - cancel
                  note:
                    type: string
                  reason:
                    type: string
                  created:
                    type: string
                    format: datetime
                  updated:
                    type: string
                    format: datetime
                  answered:
                    type: boolean
                  assignee:
                    type: string
                  activation_key:
                    type: string
                  marketplace: &id025
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      icon:
                        type: string
                  status:
                    type: string
                    enum:
                    - draft
                    - tiers_setup
                    - pending
                    - inquiring
                    - approved
                    - failed
                  asset:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                        - active
                        - new
                        - processing
                        - rejected
                        - suspended
                        - terminated
                      external_id:
                        type: string
                      external_uid:
                        type: string
                      product:
                        type: object
                        properties:
                          id:
                            type: string
                          icon:
                            type: string
                          name:
                            type: string
                          status:
                            type: string
                            enum:
                            - draft
                            - published
                            - endofsale
                      connection:
                        type: object
                        properties:
                          id:
                            type: string
                          provider: &id021
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                          vendor: *id021
                          type:
                            type: string
                            enum:
                            - preview
                            - test
                            - production
                          hub:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      events:
                        type: object
                        properties:
                          created: &id022
                            type: object
                            properties:
                              at:
                                type: string
                                format: datetime
                          updated: *id022
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            global_id:
                              type: string
                            mpn:
                              type: string
                            old_quantity:
                              type: string
                            quantity:
                              type: string
                            type:
                              type: string
                            display_name:
                              type: string
                            period:
                              type: string
                            item_type:
                              type: string
                      params:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                            description:
                              type: string
                            value:
                              type: string
                            value_error:
                              type: string
                            structured_value:
                              type: object
                              oneOf:
                              - type: object
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                required:
                                - address_line1
                                - city
                                - state
                                - postal_code
                                - country
                              - type: object
                                properties:
                                  country_code:
                                    type: string
                                  area_code:
                                    type: string
                                  phone_number:
                                    type: string
                                  extension:
                                    type: string
                                required:
                                - country_code
                                - area_code
                                - phone_number
                                - extension
                            value_choices:
                              type: array
                              items:
                                type: string
                            title:
                              type: string
                      tiers:
                        type: object
                        properties:
                          customer: &id023
                            type: object
                            properties:
                              external_id:
                                type: string
                              external_uid:
                                type: string
                              name:
                                type: string
                              tax_id:
                                type: string
                              contact_info:
                                type: object
                                required:
                                - address_line1
                                - city
                                - postal_code
                                - country
                                - contact
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                  contact:
                                    type: object
                                    required:
                                    - first_name
                                    - last_name
                                    - email
                                    - phone_number
                                    properties:
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                        format: email
                                      phone_number:
                                        type: object
                                        properties:
                                          country_code:
                                            type: string
                                          area_code:
                                            type: string
                                          phone_number:
                                            type: string
                                          extension:
                                            type: string
                          tier1: *id023
                          tier2: *id023
                      configuration:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                title:
                                  type: string
                                description:
                                  type: string
                                value:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                  - text
                                  - dropdown
                                  - password
                                  - email
                                  - checkbox
                                  - subdomain
                                  - domain
                                  - phone
                                  - url
                                  - choice
                                scope:
                                  type: string
                                  enum:
                                  - product
                                  - item
                                  - marketplace
                                  - item_marketplace
                                phase:
                                  type: string
                                  enum:
                                  - configuration
                                contraints:
                                  type: object
                                  properties:
                                    required:
                                      type: boolean
                                    hidden:
                                      type: boolean
                                    unique:
                                      type: boolean
                                    shared:
                                      type: string
                                      enum:
                                      - view
                                      - edit
                                events:
                                  type: object
                                  properties:
                                    created: &id024
                                      type: object
                                      properties:
                                        at:
                                          type: string
                                          format: datetime
                                        by:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                    updated: *id024
                      marketplace: *id025
                      contract:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
          description: ''
  /requests/{id}/assign:
    post:
      operationId: request_assign_postAssignRequest
      description: Assigns a request to a given user
      tags:
      - Assets
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                    - purchase
                    - change
                    - suspend
                    - resume
                    - cancel
                  note:
                    type: string
                  reason:
                    type: string
                  created:
                    type: string
                    format: datetime
                  updated:
                    type: string
                    format: datetime
                  answered:
                    type: boolean
                  assignee:
                    type: string
                  activation_key:
                    type: string
                  marketplace: &id030
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      icon:
                        type: string
                  status:
                    type: string
                    enum:
                    - draft
                    - tiers_setup
                    - pending
                    - inquiring
                    - approved
                    - failed
                  asset:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                        - active
                        - new
                        - processing
                        - rejected
                        - suspended
                        - terminated
                      external_id:
                        type: string
                      external_uid:
                        type: string
                      product:
                        type: object
                        properties:
                          id:
                            type: string
                          icon:
                            type: string
                          name:
                            type: string
                          status:
                            type: string
                            enum:
                            - draft
                            - published
                            - endofsale
                      connection:
                        type: object
                        properties:
                          id:
                            type: string
                          provider: &id026
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                          vendor: *id026
                          type:
                            type: string
                            enum:
                            - preview
                            - test
                            - production
                          hub:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      events:
                        type: object
                        properties:
                          created: &id027
                            type: object
                            properties:
                              at:
                                type: string
                                format: datetime
                          updated: *id027
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            global_id:
                              type: string
                            mpn:
                              type: string
                            old_quantity:
                              type: string
                            quantity:
                              type: string
                            type:
                              type: string
                            display_name:
                              type: string
                            period:
                              type: string
                            item_type:
                              type: string
                      params:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                            description:
                              type: string
                            value:
                              type: string
                            value_error:
                              type: string
                            structured_value:
                              type: object
                              oneOf:
                              - type: object
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                required:
                                - address_line1
                                - city
                                - state
                                - postal_code
                                - country
                              - type: object
                                properties:
                                  country_code:
                                    type: string
                                  area_code:
                                    type: string
                                  phone_number:
                                    type: string
                                  extension:
                                    type: string
                                required:
                                - country_code
                                - area_code
                                - phone_number
                                - extension
                            value_choices:
                              type: array
                              items:
                                type: string
                            title:
                              type: string
                      tiers:
                        type: object
                        properties:
                          customer: &id028
                            type: object
                            properties:
                              external_id:
                                type: string
                              external_uid:
                                type: string
                              name:
                                type: string
                              tax_id:
                                type: string
                              contact_info:
                                type: object
                                required:
                                - address_line1
                                - city
                                - postal_code
                                - country
                                - contact
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                  contact:
                                    type: object
                                    required:
                                    - first_name
                                    - last_name
                                    - email
                                    - phone_number
                                    properties:
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                        format: email
                                      phone_number:
                                        type: object
                                        properties:
                                          country_code:
                                            type: string
                                          area_code:
                                            type: string
                                          phone_number:
                                            type: string
                                          extension:
                                            type: string
                          tier1: *id028
                          tier2: *id028
                      configuration:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                title:
                                  type: string
                                description:
                                  type: string
                                value:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                  - text
                                  - dropdown
                                  - password
                                  - email
                                  - checkbox
                                  - subdomain
                                  - domain
                                  - phone
                                  - url
                                  - choice
                                scope:
                                  type: string
                                  enum:
                                  - product
                                  - item
                                  - marketplace
                                  - item_marketplace
                                phase:
                                  type: string
                                  enum:
                                  - configuration
                                contraints:
                                  type: object
                                  properties:
                                    required:
                                      type: boolean
                                    hidden:
                                      type: boolean
                                    unique:
                                      type: boolean
                                    shared:
                                      type: string
                                      enum:
                                      - view
                                      - edit
                                events:
                                  type: object
                                  properties:
                                    created: &id029
                                      type: object
                                      properties:
                                        at:
                                          type: string
                                          format: datetime
                                        by:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                    updated: *id029
                      marketplace: *id030
                      contract:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
          description: ''
  /requests/{id}/fail:
    post:
      operationId: request_fail_postFailRequest
      description: Fails a request, this is a terminal status
      tags:
      - Assets
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                    - purchase
                    - change
                    - suspend
                    - resume
                    - cancel
                  note:
                    type: string
                  reason:
                    type: string
                  created:
                    type: string
                    format: datetime
                  updated:
                    type: string
                    format: datetime
                  answered:
                    type: boolean
                  assignee:
                    type: string
                  activation_key:
                    type: string
                  marketplace: &id035
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      icon:
                        type: string
                  status:
                    type: string
                    enum:
                    - draft
                    - tiers_setup
                    - pending
                    - inquiring
                    - approved
                    - failed
                  asset:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                        - active
                        - new
                        - processing
                        - rejected
                        - suspended
                        - terminated
                      external_id:
                        type: string
                      external_uid:
                        type: string
                      product:
                        type: object
                        properties:
                          id:
                            type: string
                          icon:
                            type: string
                          name:
                            type: string
                          status:
                            type: string
                            enum:
                            - draft
                            - published
                            - endofsale
                      connection:
                        type: object
                        properties:
                          id:
                            type: string
                          provider: &id031
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                          vendor: *id031
                          type:
                            type: string
                            enum:
                            - preview
                            - test
                            - production
                          hub:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      events:
                        type: object
                        properties:
                          created: &id032
                            type: object
                            properties:
                              at:
                                type: string
                                format: datetime
                          updated: *id032
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            global_id:
                              type: string
                            mpn:
                              type: string
                            old_quantity:
                              type: string
                            quantity:
                              type: string
                            type:
                              type: string
                            display_name:
                              type: string
                            period:
                              type: string
                            item_type:
                              type: string
                      params:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                            description:
                              type: string
                            value:
                              type: string
                            value_error:
                              type: string
                            structured_value:
                              type: object
                              oneOf:
                              - type: object
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                required:
                                - address_line1
                                - city
                                - state
                                - postal_code
                                - country
                              - type: object
                                properties:
                                  country_code:
                                    type: string
                                  area_code:
                                    type: string
                                  phone_number:
                                    type: string
                                  extension:
                                    type: string
                                required:
                                - country_code
                                - area_code
                                - phone_number
                                - extension
                            value_choices:
                              type: array
                              items:
                                type: string
                            title:
                              type: string
                      tiers:
                        type: object
                        properties:
                          customer: &id033
                            type: object
                            properties:
                              external_id:
                                type: string
                              external_uid:
                                type: string
                              name:
                                type: string
                              tax_id:
                                type: string
                              contact_info:
                                type: object
                                required:
                                - address_line1
                                - city
                                - postal_code
                                - country
                                - contact
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                  contact:
                                    type: object
                                    required:
                                    - first_name
                                    - last_name
                                    - email
                                    - phone_number
                                    properties:
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                        format: email
                                      phone_number:
                                        type: object
                                        properties:
                                          country_code:
                                            type: string
                                          area_code:
                                            type: string
                                          phone_number:
                                            type: string
                                          extension:
                                            type: string
                          tier1: *id033
                          tier2: *id033
                      configuration:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                title:
                                  type: string
                                description:
                                  type: string
                                value:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                  - text
                                  - dropdown
                                  - password
                                  - email
                                  - checkbox
                                  - subdomain
                                  - domain
                                  - phone
                                  - url
                                  - choice
                                scope:
                                  type: string
                                  enum:
                                  - product
                                  - item
                                  - marketplace
                                  - item_marketplace
                                phase:
                                  type: string
                                  enum:
                                  - configuration
                                contraints:
                                  type: object
                                  properties:
                                    required:
                                      type: boolean
                                    hidden:
                                      type: boolean
                                    unique:
                                      type: boolean
                                    shared:
                                      type: string
                                      enum:
                                      - view
                                      - edit
                                events:
                                  type: object
                                  properties:
                                    created: &id034
                                      type: object
                                      properties:
                                        at:
                                          type: string
                                          format: datetime
                                        by:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                    updated: *id034
                      marketplace: *id035
                      contract:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
          description: ''
  /requests/{id}/inquire:
    post:
      operationId: request_inquire_postInquireRequest
      description: 'Moves the request to inquire state, allowing technical contact
        to populate parameters

        marked as error'
      tags:
      - Assets
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                template_id:
                  type: string
                activation_tile:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                    - purchase
                    - change
                    - suspend
                    - resume
                    - cancel
                  note:
                    type: string
                  reason:
                    type: string
                  created:
                    type: string
                    format: datetime
                  updated:
                    type: string
                    format: datetime
                  answered:
                    type: boolean
                  assignee:
                    type: string
                  activation_key:
                    type: string
                  marketplace: &id040
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      icon:
                        type: string
                  status:
                    type: string
                    enum:
                    - draft
                    - tiers_setup
                    - pending
                    - inquiring
                    - approved
                    - failed
                  asset:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                        - active
                        - new
                        - processing
                        - rejected
                        - suspended
                        - terminated
                      external_id:
                        type: string
                      external_uid:
                        type: string
                      product:
                        type: object
                        properties:
                          id:
                            type: string
                          icon:
                            type: string
                          name:
                            type: string
                          status:
                            type: string
                            enum:
                            - draft
                            - published
                            - endofsale
                      connection:
                        type: object
                        properties:
                          id:
                            type: string
                          provider: &id036
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                          vendor: *id036
                          type:
                            type: string
                            enum:
                            - preview
                            - test
                            - production
                          hub:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      events:
                        type: object
                        properties:
                          created: &id037
                            type: object
                            properties:
                              at:
                                type: string
                                format: datetime
                          updated: *id037
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            global_id:
                              type: string
                            mpn:
                              type: string
                            old_quantity:
                              type: string
                            quantity:
                              type: string
                            type:
                              type: string
                            display_name:
                              type: string
                            period:
                              type: string
                            item_type:
                              type: string
                      params:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                            description:
                              type: string
                            value:
                              type: string
                            value_error:
                              type: string
                            structured_value:
                              type: object
                              oneOf:
                              - type: object
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                required:
                                - address_line1
                                - city
                                - state
                                - postal_code
                                - country
                              - type: object
                                properties:
                                  country_code:
                                    type: string
                                  area_code:
                                    type: string
                                  phone_number:
                                    type: string
                                  extension:
                                    type: string
                                required:
                                - country_code
                                - area_code
                                - phone_number
                                - extension
                            value_choices:
                              type: array
                              items:
                                type: string
                            title:
                              type: string
                      tiers:
                        type: object
                        properties:
                          customer: &id038
                            type: object
                            properties:
                              external_id:
                                type: string
                              external_uid:
                                type: string
                              name:
                                type: string
                              tax_id:
                                type: string
                              contact_info:
                                type: object
                                required:
                                - address_line1
                                - city
                                - postal_code
                                - country
                                - contact
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                  contact:
                                    type: object
                                    required:
                                    - first_name
                                    - last_name
                                    - email
                                    - phone_number
                                    properties:
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                        format: email
                                      phone_number:
                                        type: object
                                        properties:
                                          country_code:
                                            type: string
                                          area_code:
                                            type: string
                                          phone_number:
                                            type: string
                                          extension:
                                            type: string
                          tier1: *id038
                          tier2: *id038
                      configuration:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                title:
                                  type: string
                                description:
                                  type: string
                                value:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                  - text
                                  - dropdown
                                  - password
                                  - email
                                  - checkbox
                                  - subdomain
                                  - domain
                                  - phone
                                  - url
                                  - choice
                                scope:
                                  type: string
                                  enum:
                                  - product
                                  - item
                                  - marketplace
                                  - item_marketplace
                                phase:
                                  type: string
                                  enum:
                                  - configuration
                                contraints:
                                  type: object
                                  properties:
                                    required:
                                      type: boolean
                                    hidden:
                                      type: boolean
                                    unique:
                                      type: boolean
                                    shared:
                                      type: string
                                      enum:
                                      - view
                                      - edit
                                events:
                                  type: object
                                  properties:
                                    created: &id039
                                      type: object
                                      properties:
                                        at:
                                          type: string
                                          format: datetime
                                        by:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                    updated: *id039
                      marketplace: *id040
                      contract:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
          description: ''
  /requests/{id}/pend:
    post:
      operationId: request_pend_postPendRequest
      description: Sets status pending, only suitable when request is in status inquiring
      tags:
      - Assets
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this request.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                    - purchase
                    - change
                    - suspend
                    - resume
                    - cancel
                  note:
                    type: string
                  reason:
                    type: string
                  created:
                    type: string
                    format: datetime
                  updated:
                    type: string
                    format: datetime
                  answered:
                    type: boolean
                  assignee:
                    type: string
                  activation_key:
                    type: string
                  marketplace: &id045
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      icon:
                        type: string
                  status:
                    type: string
                    enum:
                    - draft
                    - tiers_setup
                    - pending
                    - inquiring
                    - approved
                    - failed
                  asset:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                        - active
                        - new
                        - processing
                        - rejected
                        - suspended
                        - terminated
                      external_id:
                        type: string
                      external_uid:
                        type: string
                      product:
                        type: object
                        properties:
                          id:
                            type: string
                          icon:
                            type: string
                          name:
                            type: string
                          status:
                            type: string
                            enum:
                            - draft
                            - published
                            - endofsale
                      connection:
                        type: object
                        properties:
                          id:
                            type: string
                          provider: &id041
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                          vendor: *id041
                          type:
                            type: string
                            enum:
                            - preview
                            - test
                            - production
                          hub:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      events:
                        type: object
                        properties:
                          created: &id042
                            type: object
                            properties:
                              at:
                                type: string
                                format: datetime
                          updated: *id042
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            global_id:
                              type: string
                            mpn:
                              type: string
                            old_quantity:
                              type: string
                            quantity:
                              type: string
                            type:
                              type: string
                            display_name:
                              type: string
                            period:
                              type: string
                            item_type:
                              type: string
                      params:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                            description:
                              type: string
                            value:
                              type: string
                            value_error:
                              type: string
                            structured_value:
                              type: object
                              oneOf:
                              - type: object
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                required:
                                - address_line1
                                - city
                                - state
                                - postal_code
                                - country
                              - type: object
                                properties:
                                  country_code:
                                    type: string
                                  area_code:
                                    type: string
                                  phone_number:
                                    type: string
                                  extension:
                                    type: string
                                required:
                                - country_code
                                - area_code
                                - phone_number
                                - extension
                            value_choices:
                              type: array
                              items:
                                type: string
                            title:
                              type: string
                      tiers:
                        type: object
                        properties:
                          customer: &id043
                            type: object
                            properties:
                              external_id:
                                type: string
                              external_uid:
                                type: string
                              name:
                                type: string
                              tax_id:
                                type: string
                              contact_info:
                                type: object
                                required:
                                - address_line1
                                - city
                                - postal_code
                                - country
                                - contact
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                  contact:
                                    type: object
                                    required:
                                    - first_name
                                    - last_name
                                    - email
                                    - phone_number
                                    properties:
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                        format: email
                                      phone_number:
                                        type: object
                                        properties:
                                          country_code:
                                            type: string
                                          area_code:
                                            type: string
                                          phone_number:
                                            type: string
                                          extension:
                                            type: string
                          tier1: *id043
                          tier2: *id043
                      configuration:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                title:
                                  type: string
                                description:
                                  type: string
                                value:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                  - text
                                  - dropdown
                                  - password
                                  - email
                                  - checkbox
                                  - subdomain
                                  - domain
                                  - phone
                                  - url
                                  - choice
                                scope:
                                  type: string
                                  enum:
                                  - product
                                  - item
                                  - marketplace
                                  - item_marketplace
                                phase:
                                  type: string
                                  enum:
                                  - configuration
                                contraints:
                                  type: object
                                  properties:
                                    required:
                                      type: boolean
                                    hidden:
                                      type: boolean
                                    unique:
                                      type: boolean
                                    shared:
                                      type: string
                                      enum:
                                      - view
                                      - edit
                                events:
                                  type: object
                                  properties:
                                    created: &id044
                                      type: object
                                      properties:
                                        at:
                                          type: string
                                          format: datetime
                                        by:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                    updated: *id044
                      marketplace: *id045
                      contract:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
          description: ''
  /requests/{id}/purchase:
    post:
      operationId: request_purchase_postPurchaseRequest
      description: Applicable to draft requests to move it to pending status
      tags:
      - Assets
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this request.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                    - purchase
                    - change
                    - suspend
                    - resume
                    - cancel
                  note:
                    type: string
                  reason:
                    type: string
                  created:
                    type: string
                    format: datetime
                  updated:
                    type: string
                    format: datetime
                  answered:
                    type: boolean
                  assignee:
                    type: string
                  activation_key:
                    type: string
                  marketplace: &id050
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      icon:
                        type: string
                  status:
                    type: string
                    enum:
                    - draft
                    - tiers_setup
                    - pending
                    - inquiring
                    - approved
                    - failed
                  asset:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                        - active
                        - new
                        - processing
                        - rejected
                        - suspended
                        - terminated
                      external_id:
                        type: string
                      external_uid:
                        type: string
                      product:
                        type: object
                        properties:
                          id:
                            type: string
                          icon:
                            type: string
                          name:
                            type: string
                          status:
                            type: string
                            enum:
                            - draft
                            - published
                            - endofsale
                      connection:
                        type: object
                        properties:
                          id:
                            type: string
                          provider: &id046
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                          vendor: *id046
                          type:
                            type: string
                            enum:
                            - preview
                            - test
                            - production
                          hub:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      events:
                        type: object
                        properties:
                          created: &id047
                            type: object
                            properties:
                              at:
                                type: string
                                format: datetime
                          updated: *id047
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            global_id:
                              type: string
                            mpn:
                              type: string
                            old_quantity:
                              type: string
                            quantity:
                              type: string
                            type:
                              type: string
                            display_name:
                              type: string
                            period:
                              type: string
                            item_type:
                              type: string
                      params:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                            description:
                              type: string
                            value:
                              type: string
                            value_error:
                              type: string
                            structured_value:
                              type: object
                              oneOf:
                              - type: object
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                required:
                                - address_line1
                                - city
                                - state
                                - postal_code
                                - country
                              - type: object
                                properties:
                                  country_code:
                                    type: string
                                  area_code:
                                    type: string
                                  phone_number:
                                    type: string
                                  extension:
                                    type: string
                                required:
                                - country_code
                                - area_code
                                - phone_number
                                - extension
                            value_choices:
                              type: array
                              items:
                                type: string
                            title:
                              type: string
                      tiers:
                        type: object
                        properties:
                          customer: &id048
                            type: object
                            properties:
                              external_id:
                                type: string
                              external_uid:
                                type: string
                              name:
                                type: string
                              tax_id:
                                type: string
                              contact_info:
                                type: object
                                required:
                                - address_line1
                                - city
                                - postal_code
                                - country
                                - contact
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                  contact:
                                    type: object
                                    required:
                                    - first_name
                                    - last_name
                                    - email
                                    - phone_number
                                    properties:
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                        format: email
                                      phone_number:
                                        type: object
                                        properties:
                                          country_code:
                                            type: string
                                          area_code:
                                            type: string
                                          phone_number:
                                            type: string
                                          extension:
                                            type: string
                          tier1: *id048
                          tier2: *id048
                      configuration:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                title:
                                  type: string
                                description:
                                  type: string
                                value:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                  - text
                                  - dropdown
                                  - password
                                  - email
                                  - checkbox
                                  - subdomain
                                  - domain
                                  - phone
                                  - url
                                  - choice
                                scope:
                                  type: string
                                  enum:
                                  - product
                                  - item
                                  - marketplace
                                  - item_marketplace
                                phase:
                                  type: string
                                  enum:
                                  - configuration
                                contraints:
                                  type: object
                                  properties:
                                    required:
                                      type: boolean
                                    hidden:
                                      type: boolean
                                    unique:
                                      type: boolean
                                    shared:
                                      type: string
                                      enum:
                                      - view
                                      - edit
                                events:
                                  type: object
                                  properties:
                                    created: &id049
                                      type: object
                                      properties:
                                        at:
                                          type: string
                                          format: datetime
                                        by:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                    updated: *id049
                      marketplace: *id050
                      contract:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
          description: ''
  /requests/{id}/unassign:
    post:
      operationId: request_unassign_postUnassignRequest
      description: Unassigns request from assigned user
      tags:
      - Assets
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this request.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    enum:
                    - purchase
                    - change
                    - suspend
                    - resume
                    - cancel
                  note:
                    type: string
                  reason:
                    type: string
                  created:
                    type: string
                    format: datetime
                  updated:
                    type: string
                    format: datetime
                  answered:
                    type: boolean
                  assignee:
                    type: string
                  activation_key:
                    type: string
                  marketplace: &id055
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      icon:
                        type: string
                  status:
                    type: string
                    enum:
                    - draft
                    - tiers_setup
                    - pending
                    - inquiring
                    - approved
                    - failed
                  asset:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                        - active
                        - new
                        - processing
                        - rejected
                        - suspended
                        - terminated
                      external_id:
                        type: string
                      external_uid:
                        type: string
                      product:
                        type: object
                        properties:
                          id:
                            type: string
                          icon:
                            type: string
                          name:
                            type: string
                          status:
                            type: string
                            enum:
                            - draft
                            - published
                            - endofsale
                      connection:
                        type: object
                        properties:
                          id:
                            type: string
                          provider: &id051
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                          vendor: *id051
                          type:
                            type: string
                            enum:
                            - preview
                            - test
                            - production
                          hub:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      events:
                        type: object
                        properties:
                          created: &id052
                            type: object
                            properties:
                              at:
                                type: string
                                format: datetime
                          updated: *id052
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            global_id:
                              type: string
                            mpn:
                              type: string
                            old_quantity:
                              type: string
                            quantity:
                              type: string
                            type:
                              type: string
                            display_name:
                              type: string
                            period:
                              type: string
                            item_type:
                              type: string
                      params:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                            description:
                              type: string
                            value:
                              type: string
                            value_error:
                              type: string
                            structured_value:
                              type: object
                              oneOf:
                              - type: object
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                required:
                                - address_line1
                                - city
                                - state
                                - postal_code
                                - country
                              - type: object
                                properties:
                                  country_code:
                                    type: string
                                  area_code:
                                    type: string
                                  phone_number:
                                    type: string
                                  extension:
                                    type: string
                                required:
                                - country_code
                                - area_code
                                - phone_number
                                - extension
                            value_choices:
                              type: array
                              items:
                                type: string
                            title:
                              type: string
                      tiers:
                        type: object
                        properties:
                          customer: &id053
                            type: object
                            properties:
                              external_id:
                                type: string
                              external_uid:
                                type: string
                              name:
                                type: string
                              tax_id:
                                type: string
                              contact_info:
                                type: object
                                required:
                                - address_line1
                                - city
                                - postal_code
                                - country
                                - contact
                                properties:
                                  address_line1:
                                    type: string
                                  address_line2:
                                    type: string
                                  city:
                                    type: string
                                  state:
                                    type: string
                                  postal_code:
                                    type: string
                                  country:
                                    type: string
                                  contact:
                                    type: object
                                    required:
                                    - first_name
                                    - last_name
                                    - email
                                    - phone_number
                                    properties:
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                        format: email
                                      phone_number:
                                        type: object
                                        properties:
                                          country_code:
                                            type: string
                                          area_code:
                                            type: string
                                          phone_number:
                                            type: string
                                          extension:
                                            type: string
                          tier1: *id053
                          tier2: *id053
                      configuration:
                        type: object
                        properties:
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                title:
                                  type: string
                                description:
                                  type: string
                                value:
                                  type: string
                                type:
                                  type: string
                                  enum:
                                  - text
                                  - dropdown
                                  - password
                                  - email
                                  - checkbox
                                  - subdomain
                                  - domain
                                  - phone
                                  - url
                                  - choice
                                scope:
                                  type: string
                                  enum:
                                  - product
                                  - item
                                  - marketplace
                                  - item_marketplace
                                phase:
                                  type: string
                                  enum:
                                  - configuration
                                contraints:
                                  type: object
                                  properties:
                                    required:
                                      type: boolean
                                    hidden:
                                      type: boolean
                                    unique:
                                      type: boolean
                                    shared:
                                      type: string
                                      enum:
                                      - view
                                      - edit
                                events:
                                  type: object
                                  properties:
                                    created: &id054
                                      type: object
                                      properties:
                                        at:
                                          type: string
                                          format: datetime
                                        by:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                    updated: *id054
                      marketplace: *id055
                      contract:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
          description: ''
  /tier/account-requests:
    get:
      operationId: tier_account_requests_list_listTierAccountRequests
      description: ''
      tags:
      - Customers
      parameters:
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/dp.RQLContentRangeLimitOffsetPagination.offset'
      - name: account.external_id
        description: '**Filter for: account.external_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: account.external_uid
        description: '**Filter for: account.external_uid**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: account.hub.id
        description: '**Filter for: account.hub.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true

          null: HB-0000-0000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: account.hub.name
        description: '**Filter for: account.hub.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: account.id
        description: '**Filter for: account.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: account.name
        description: '**Filter for: account.name**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: account.version
        description: '**Filter for: account.version**


          lookups: eq, ne, ge, gt, le, lt, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - pending
          - accepted
          - ignored
          - unsupported
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.TierAccountRequest'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: tier_account_requests_list_createTierAccountRequest
      description: ''
      tags:
      - Customers
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.TierAccountRequestCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierAccountRequestCreate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /tier/account-requests/{id}:
    get:
      operationId: tier_account_requests_detail_retrieveTierAccountRequest
      description: ''
      tags:
      - Customers
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Tier Account Request.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierAccountRequest'
          description: ''
  /tier/account-requests/{id}/accept:
    post:
      operationId: tier_account_requests_accept_postAcceptTierAccountRequest
      description: ''
      tags:
      - Customers
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Tier Account Request.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierAccountRequest'
          description: ''
  /tier/account-requests/{id}/ignore:
    post:
      operationId: tier_account_requests_ignore_postIgnoreTierAccountRequest
      description: ''
      tags:
      - Customers
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Tier Account Request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierAccountRequest'
          description: ''
  /tier/accounts:
    get:
      operationId: tier_accounts_list_listTierAccountDetails
      description: ''
      tags:
      - Customers
      parameters:
      - $ref: '#/components/parameters/dp.TierAccountPagination.limit'
      - $ref: '#/components/parameters/dp.TierAccountPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: external_id
        description: '**Filter for: external_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: external_uid
        description: '**Filter for: external_uid**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: hub.id
        description: '**Filter for: hub.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true

          null: HB-0000-0000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: hub.name
        description: '**Filter for: hub.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: parent.id
        description: '**Filter for: parent.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: parent.name
        description: '**Filter for: parent.name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: parent.parent.id
        description: '**Filter for: parent.parent.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: scopes
        description: '**Filter for: scopes**


          lookups: eq, like, ilike, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - customer
          - reseller
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.TierAccountDetail'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: tier_accounts_list_createTierAccountCreate
      description: ''
      tags:
      - Customers
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.TierAccountCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierAccountCreate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /tier/accounts/{account_id}/versions:
    get:
      operationId: tier_account_versions_list_listTierAccountVersions
      description: ''
      tags:
      - Customers
      parameters:
      - name: account_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/dp.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.TierAccountVersion'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /tier/accounts/{account_id}/versions/{version}:
    get:
      operationId: tier_account_versions_detail_retrieveTierAccountVersion
      description: ''
      tags:
      - Customers
      parameters:
      - name: account_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: version
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierAccountVersion'
          description: ''
  /tier/accounts/{id}:
    get:
      operationId: tier_accounts_detail_retrieveTierAccountWithOwnerDetail
      description: Get base object or redirect to object version.
      tags:
      - Customers
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierAccountWithOwnerDetail'
          description: ''
    put:
      operationId: tier_accounts_detail_updateTierAccountUpdate
      description: ''
      tags:
      - Customers
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.TierAccountUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierAccountUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
    delete:
      operationId: tier_accounts_detail_destroyTierAccountDetail
      description: ''
      tags:
      - Customers
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /tier/config-requests:
    get:
      operationId: tier_config_request_list_listTierConfigRequestReads
      description: ''
      tags:
      - Settings
      parameters:
      - $ref: '#/components/parameters/dp.TierConfigRequestPagination.limit'
      - $ref: '#/components/parameters/dp.TierConfigRequestPagination.offset'
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: assignee__id
        description: '**Filter for: assignee__id**


          lookups: eq, in

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration.account.hub.id
        description: '**Filter for: configuration.account.hub.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration.account.hub.name
        description: '**Filter for: configuration.account.hub.name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration.account.id
        description: '**Filter for: configuration.account.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration.connection.type
        description: '**Filter for: configuration.connection.type**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - test
          - production
      - name: configuration.id
        description: '**Filter for: configuration.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration.marketplace.id
        description: '**Filter for: configuration.marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration.marketplace.name
        description: '**Filter for: configuration.marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration.product.id
        description: '**Filter for: configuration.product.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration.product.name
        description: '**Filter for: configuration.product.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration.tier_level
        description: '**Filter for: configuration.tier_level**


          lookups: eq, in

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
          enum:
          - 1
          - 2
      - name: configuration__account__id
        description: '**Filter for: configuration__account__id**


          lookups: eq, in

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration__id
        description: '**Filter for: configuration__id**


          lookups: eq, in

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration__product__id
        description: '**Filter for: configuration__product__id**


          lookups: eq, in

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration__product__name
        description: '**Filter for: configuration__product__name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: configuration__tier_level
        description: '**Filter for: configuration__tier_level**


          lookups: eq, in

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
          enum:
          - 1
          - 2
      - name: created
        description: '**Filter for: created**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: environment
        description: '**Filter for: environment**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - test
          - production
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: params.id
        description: '**Filter for: params.id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: params.value
        description: '**Filter for: params.value**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, in

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - tiers_setup
          - pending
          - inquiring
          - approved
          - failed
      - name: type
        description: '**Filter for: type**


          lookups: eq, in

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - setup
          - update
      - name: unassigned
        description: '**Filter for: unassigned**


          lookups: ne, null'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: updated
        description: '**Filter for: updated**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.TierConfigRequestRead'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: tier_config_request_list_createTierConfigSetupRequestCreate
      description: ''
      tags:
      - Settings
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.TierConfigSetupRequestCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierConfigSetupRequestCreate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.create_400'
  /tier/config-requests/{id}:
    get:
      operationId: tier_config_request_detail_retrieveTierConfigRequestRead
      description: ''
      tags:
      - Settings
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierConfigRequestRead'
          description: ''
    put:
      operationId: tier_config_request_detail_updateTierConfigRequestUpdate
      description: ''
      tags:
      - Settings
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dp.TierConfigRequestUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierConfigRequestUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/dp.update_400'
  /tier/config-requests/{id}/approve:
    post:
      operationId: tier_config_request_approve_postApproveTierConfigRequestRead
      description: ''
      tags:
      - Settings
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                template:
                  type: object
                  properties:
                    id:
                      type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  template:
                    type: object
                    properties:
                      id:
                        type: string
                      representation:
                        type: string
  /tier/config-requests/{id}/assign:
    post:
      operationId: tier_config_request_assign_postAssignTierConfigRequestRead
      description: ''
      tags:
      - Settings
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '204':
          description: ''
  /tier/config-requests/{id}/fail:
    post:
      operationId: tier_config_request_fail_postFailTierConfigRequestRead
      description: ''
      tags:
      - Settings
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
      responses:
        '204':
          description: ''
  /tier/config-requests/{id}/inquire:
    post:
      operationId: tier_config_request_inquire_postInquireTierConfigRequestRead
      description: ''
      tags:
      - Settings
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /tier/config-requests/{id}/pend:
    post:
      operationId: tier_config_request_pend_postPendTierConfigRequestRead
      description: ''
      tags:
      - Settings
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /tier/config-requests/{id}/unassign:
    post:
      operationId: tier_config_request_unassign_postUnassignTierConfigRequestRead
      description: ''
      tags:
      - Settings
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /tier/configs:
    get:
      operationId: tier_config_list_listTierConfigurations
      description: ''
      tags:
      - Settings
      parameters:
      - $ref: '#/components/parameters/dp.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/dp.RQL1000Pagination.offset'
      - name: account.company_name
        description: '**Filter for: account.company_name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: account.external_uid
        description: '**Filter for: account.external_uid**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: account.id
        description: '**Filter for: account.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.id
        description: '**Filter for: connection.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: connection.type
        description: '**Filter for: connection.type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - test
          - production
      - name: contract.id
        description: '**Filter for: contract.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true

          null: CRD-00000-00000-00000, null()'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: created
        description: '**Filter for: created**


          lookups: ge, le

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.id
        description: '**Filter for: marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.name
        description: '**Filter for: marketplace.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: params.id
        description: '**Filter for: params.id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: params.value
        description: '**Filter for: params.value**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, in

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - active
          - processing
      - name: tier_level
        description: '**Filter for: tier_level**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
          enum:
          - 1
          - 2
      - name: updated
        description: '**Filter for: updated**


          lookups: ge, le

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dp.TierConfiguration'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
  /tier/configs/{id}:
    get:
      operationId: tier_config_detail_retrieveTierConfiguration
      description: ''
      tags:
      - Settings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Tier Configuration.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dp.TierConfigurationDetail'
          description: ''
  /assets/{asset_pk}/usage/aggregates:
    get:
      operationId: usagerecordaggregate_list_listUsageRecordAggregates
      description: View class for Usage Aggregate API
      tags:
      - Usage Reporting
      parameters:
      - name: asset_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: Content-Range
        in: header
        description: RQL RFC2616 limit offset pagination.
        schema:
          $ref: '#/components/headers/Content-Range'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.offset'
      - name: asset.external_uid
        description: '**Filter for: asset.external_uid**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.id
        description: '**Filter for: asset.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.id
        description: '**Filter for: item.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.local_id
        description: '**Filter for: item.local_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.type
        description: '**Filter for: item.type**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - Reservation
          - PPU
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/usage.UsageRecordAggregate'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /products/{product_pk}/usage/rules:
    get:
      operationId: product_rules_list_listUsageItemRules
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: product_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: Content-Range
        in: header
        description: RQL RFC2616 limit offset pagination.
        schema:
          $ref: '#/components/headers/Content-Range'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.offset'
      - name: action
        description: '**Filter for: action**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - accept
          - reject
          - manual
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.id
        description: '**Filter for: item.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.name
        description: '**Filter for: item.name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: rule
        description: '**Filter for: rule**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: scope
        description: '**Filter for: scope**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - record
          - file
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - active
          - deleted
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/usage.UsageItemRule'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    post:
      operationId: product_rules_list_createUsageItemRule
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: product_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: object
                  properties:
                    id:
                      type: string
                action:
                  type: string
                rule:
                  type: string
                status:
                  type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageItemRule'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /products/{product_pk}/usage/rules/{id}:
    get:
      operationId: product_rules_detail_retrieveUsageItemRule
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: product_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage Item Rule.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageItemRule'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    put:
      operationId: product_rules_detail_updateUsageItemRule
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: product_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage Item Rule.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: object
                  properties:
                    id:
                      type: string
                action:
                  type: string
                rule:
                  type: string
                status:
                  type: string
                gravity:
                  type: object
                  properties:
                    after:
                      type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageItemRule'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    patch:
      operationId: product_rules_detail_partial_updateUsageItemRule
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: product_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage Item Rule.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: object
                  properties:
                    id:
                      type: string
                action:
                  type: string
                rule:
                  type: string
                status:
                  type: string
                gravity:
                  type: object
                  properties:
                    after:
                      type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageItemRule'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    delete:
      operationId: product_rules_detail_destroyUsageItemRule
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: product_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage Item Rule.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /usage/aggregates:
    get:
      operationId: usage_record_aggregate_list_listUsageRecordAggregates
      description: View class for Usage Aggregate API
      tags:
      - Usage Reporting
      parameters:
      - name: Content-Range
        in: header
        description: RQL RFC2616 limit offset pagination.
        schema:
          $ref: '#/components/headers/Content-Range'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.offset'
      - name: asset.external_uid
        description: '**Filter for: asset.external_uid**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.id
        description: '**Filter for: asset.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.id
        description: '**Filter for: item.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.local_id
        description: '**Filter for: item.local_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.type
        description: '**Filter for: item.type**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - Reservation
          - PPU
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/usage.UsageRecordAggregate'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/chunks:
    get:
      operationId: part_usage_file_list_listPartUsageFiles
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: Content-Range
        in: header
        description: RQL RFC2616 limit offset pagination.
        schema:
          $ref: '#/components/headers/Content-Range'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.offset'
      - name: binding.hub.id
        description: '**Filter for: binding.hub.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: provider.id
        description: '**Filter for: provider.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - ready
          - closed
          - failed
      - name: usagefile.id
        description: '**Filter for: usagefile.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/usage.PartUsageFile'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/chunks/{id}:
    get:
      operationId: part_usage_file_detail_retrievePartUsageFile
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File Chunk.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.PartUsageFile'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    put:
      operationId: part_usage_file_detail_updatePartUsageFile
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File Chunk.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                external_id:
                  type: string
              required:
              - external_id
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.PartUsageFile'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    patch:
      operationId: part_usage_file_detail_partial_updatePartUsageFile
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File Chunk.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                external_id:
                  type: string
              required:
              - external_id
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.PartUsageFile'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/chunks/{id}/close:
    post:
      operationId: part_usage_file_close_part_usage_file_postClose_part_usage_filePartUsageFile
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File Chunk.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                external_billing_id:
                  type: string
                external_billing_note:
                  type: string
              required:
              - external_billing_id
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.PartUsageFile'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/chunks/{id}/download:
    get:
      operationId: part_usage_file_download_getDownloadPartUsageFile
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File Chunk.
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
          description: ''
  /usage/chunks/{id}/regenerate:
    post:
      operationId: part_usage_file_regenerate_part_usage_file_postRegenerate_part_usage_filePartUsageFile
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File Chunk.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.PartUsageFile'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files:
    get:
      operationId: usage_file_list_listUsageFiles
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: Content-Range
        in: header
        description: RQL RFC2616 limit offset pagination.
        schema:
          $ref: '#/components/headers/Content-Range'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.offset'
      - name: contract.id
        description: '**Filter for: contract.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: contract.name
        description: '**Filter for: contract.name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: created.at
        description: '**Filter for: created.at**


          lookups: ge, gt, le, lt

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: distribution_contract_id
        description: '**Filter for: distribution_contract_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: environment
        description: '**Filter for: environment**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - test
          - preview
          - production
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.id
        description: '**Filter for: marketplace.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace.name
        description: '**Filter for: marketplace.name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: marketplace_id
        description: '**Filter for: marketplace_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product_id
        description: '**Filter for: product_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: provider.id
        description: '**Filter for: provider.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: provider.name
        description: '**Filter for: provider.name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: provider_id
        description: '**Filter for: provider_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: schema
        description: '**Filter for: schema**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - tr
          - pr
          - qt
          - cr
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - uploading
          - uploaded
          - invalid
          - processing
          - ready
          - rejected
          - pending
          - accepted
          - closed
          - deleted
      - name: vendor.id
        description: '**Filter for: vendor.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: vendor.name
        description: '**Filter for: vendor.name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: vendor_id
        description: '**Filter for: vendor_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/usage.UsageFileList'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    post:
      operationId: usage_file_list_createUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                note:
                  type: string
                period:
                  type: object
                  properties:
                    from:
                      type: string
                      format: date
                    to:
                      type: string
                      format: date
                currency:
                  type: string
                product:
                  type: object
                  properties:
                    id:
                      type: string
                contract:
                  type: object
                  properties:
                    id:
                      type: string
                external_id:
                  type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileCreate'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files/{file_pk}/categories:
    get:
      operationId: categories_list_listCategories
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: file_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: Content-Range
        in: header
        description: RQL RFC2616 limit offset pagination.
        schema:
          $ref: '#/components/headers/Content-Range'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/usage.Categories'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files/{id}:
    get:
      operationId: usage_file_detail_retrieveUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    put:
      operationId: usage_file_detail_updateUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                note:
                  type: string
                period:
                  type: object
                  properties:
                    from:
                      type: string
                      format: date
                    to:
                      type: string
                      format: date
                currency:
                  type: string
                external_id:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    patch:
      operationId: usage_file_detail_partial_updateUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                note:
                  type: string
                period:
                  type: object
                  properties:
                    from:
                      type: string
                      format: date
                    to:
                      type: string
                      format: date
                currency:
                  type: string
                external_id:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files/{id}/accept:
    post:
      operationId: usage_file_accept_usage_file_postAccept_usage_fileUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                acceptance_note:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files/{id}/approve-all:
    put:
      operationId: usage_file_approve_all_record_putApprove_all_recordUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files/{id}/close:
    post:
      operationId: usage_file_close_usage_file_postClose_usage_fileUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files/{id}/delete:
    post:
      operationId: usage_file_delete_usage_file_postDelete_usage_fileUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files/{id}/reconciliation:
    post:
      operationId: usage_file_upload_file_provider_postUpload_file_providerUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                recon_file:
                  type: string
                  format: binary
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files/{id}/reject:
    post:
      operationId: usage_file_reject_usage_file_postReject_usage_fileUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rejection_note:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files/{id}/reprocess:
    post:
      operationId: usage_file_reprocess_processed_file_postReprocess_processed_fileUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files/{id}/submit:
    post:
      operationId: usage_file_submit_usage_file_postSubmit_usage_fileUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/files/{id}/upload:
    post:
      operationId: usage_file_upload_usage_file_postUpload_usage_fileUsageFile
      description: 'UsageFile collection contains APIs which can used used to create

        Usage report, upload normalized file

        and other actions available for vendors and providers.'
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage File.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                usage_file:
                  type: string
                  format: binary
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageFileDetail'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/products/{id}/template:
    get:
      operationId: products_get_product_template_file_getGet_product_template_fileProduct
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  template_link:
                    type: string
          description: Download normalized template file. This file can be used to
            populate usage record info and then upload for usage reporting.
  /usage/reconciliations:
    get:
      operationId: reconciliation_list_listReconciliations
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: Content-Range
        in: header
        description: RQL RFC2616 limit offset pagination.
        schema:
          $ref: '#/components/headers/Content-Range'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.offset'
      - name: binding.hub.id
        description: '**Filter for: binding.hub.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: partusagefile.id
        description: '**Filter for: partusagefile.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: partusagefile.provider.id
        description: '**Filter for: partusagefile.provider.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: usagefile.id
        description: '**Filter for: usagefile.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/usage.Reconciliation'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    post:
      operationId: reconciliation_list_createReconciliation
      description: ''
      tags:
      - Usage Reporting
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                recon_file:
                  type: string
                  format: binary
                upload_note:
                  type: string
              required:
              - recon_file
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.Reconciliation'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/reconciliations/{id}:
    get:
      operationId: reconciliation_detail_retrieveReconciliation
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Reconciliation.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.Reconciliation'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/reconciliations/{id}/processedfile:
    get:
      operationId: reconciliation_get_processed_getGet_processedReconciliation
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Reconciliation.
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
          description: ''
  /usage/reconciliations/{id}/uploadedfile:
    get:
      operationId: reconciliation_get_uploaded_getGet_uploadedReconciliation
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Reconciliation.
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
          description: ''
  /usage/records:
    get:
      operationId: usage_records_list_listUsageRecords
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: Content-Range
        in: header
        description: RQL RFC2616 limit offset pagination.
        schema:
          $ref: '#/components/headers/Content-Range'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/usage.RQL1000Pagination.offset'
      - name: asset.external_id
        description: '**Filter for: asset.external_id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.external_uid
        description: '**Filter for: asset.external_uid**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset.id
        description: '**Filter for: asset.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset_external_id
        description: '**Filter for: asset_external_id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset_external_uid
        description: '**Filter for: asset_external_uid**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: asset_id
        description: '**Filter for: asset_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: created_time
        description: '**Filter for: created_time**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: end_date
        description: '**Filter for: end_date**


          lookups: eq, ne, ge, gt, le, lt, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: hub.id
        description: '**Filter for: hub.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.id
        description: '**Filter for: item.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item_id
        description: '**Filter for: item_id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: part_usage_file__hub__id
        description: '**Filter for: part_usage_file__hub__id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product_id
        description: '**Filter for: product_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: start_date
        description: '**Filter for: start_date**


          lookups: eq, ne, ge, gt, le, lt, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - valid
          - invalid
          - approved
          - rejected
          - closed
      - name: usage_file
        description: '**Filter for: usage_file**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: usage_start_time
        description: '**Filter for: usage_start_time**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: usagefile.id
        description: '**Filter for: usagefile.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: usagefile.schema
        description: '**Filter for: usagefile.schema**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - tr
          - pr
          - qt
          - cr
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/usage.UsageRecord'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/records/close-records:
    post:
      operationId: usage_records_close_usage_record_bulk_list_postClose_usage_record_bulk_listUsageRecord
      description: ''
      tags:
      - Usage Reporting
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  external_billing_id:
                    type: string
                  external_billing_note:
                    type: string
      responses:
        '206':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    error_details:
                      type: string
                    error_codes:
                      type: string
                    status:
                      type: string
                      enum:
                      - valid
                      - invalid
                      - approved
                      - rejected
                      - closed
          description: ''
  /usage/records/{id}:
    get:
      operationId: usage_records_detail_retrieveUsageRecord
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage Record.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageRecord'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    put:
      operationId: usage_records_detail_updateUsageRecord
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage Record.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                  - valid
                  - invalid
                  - approved
                  - rejected
                  - closed
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageRecord'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
    patch:
      operationId: usage_records_detail_partial_updateUsageRecord
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage Record.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                  - valid
                  - invalid
                  - approved
                  - rejected
                  - closed
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageRecord'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /usage/records/{id}/close:
    post:
      operationId: usage_records_close_usage_record_postClose_usage_recordUsageRecord
      description: ''
      tags:
      - Usage Reporting
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Usage Record.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                external_billing_id:
                  type: string
                external_billing_note:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage.UsageRecord'
          description: ''
        '400':
          $ref: '#/components/responses/usage.any_400'
  /notifications/webhooks:
    get:
      operationId: webhook_list_listWebhooks
      description: ''
      tags:
      - Extensions
      parameters:
      - $ref: '#/components/parameters/ns.LimitOffsetContentRangePagination.limit'
      - $ref: '#/components/parameters/ns.LimitOffsetContentRangePagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ns.Webhook'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
    post:
      operationId: webhook_list_createWebhook
      description: ''
      tags:
      - Extensions
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                  - validator
                  - inquiring_validator
                  - event
                object_class:
                  type: string
                  enum:
                  - listing_request
                  - tier_account_request
                  - fulfillment_request
                  - tier_config_request
                  - usage_file
                  - billing_request
                label:
                  type: string
                product_id:
                  type: string
                external_url:
                  type: string
                jwt_secret:
                  type: string
                active:
                  type: boolean
                description:
                  type: string
                http_method:
                  type: string
                  enum:
                  - POST
                data:
                  type: object
                headers:
                  type: object
              required:
              - object_class
              - label
              - product_id
              - description
              - external_url
              - jwt_secret
              - active
              - http_method
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ns.Webhook'
          description: ''
        '400':
          $ref: '#/components/responses/ns.create_400'
  /notifications/webhooks/{id}:
    get:
      operationId: webhook_detail_retrieveWebhook
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ns.Webhook'
          description: ''
    put:
      operationId: webhook_detail_updateWebhook
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                  - validator
                  - inquiring_validator
                  - event
                object_class:
                  type: string
                  enum:
                  - listing_request
                  - tier_account_request
                  - fulfillment_request
                  - tier_config_request
                  - usage_file
                  - billing_request
                label:
                  type: string
                product_id:
                  type: string
                external_url:
                  type: string
                jwt_secret:
                  type: string
                active:
                  type: boolean
                description:
                  type: string
                http_method:
                  type: string
                  enum:
                  - POST
                data:
                  type: object
                headers:
                  type: object
              required:
              - object_class
              - label
              - product_id
              - description
              - external_url
              - jwt_secret
              - active
              - http_method
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ns.Webhook'
          description: ''
        '400':
          $ref: '#/components/responses/ns.update_400'
    delete:
      operationId: webhook_detail_destroyWebhook
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /notifications/webhooks/{id}/trigger:
    post:
      operationId: webhook_trigger_postTriggerWebhook
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: ''
  /pricing/lists:
    get:
      operationId: lists_list_listPriceLists
      description: '# Create and manage PriceLists.


        First PriceListVersion is created with PriceList creation.


        PricePoints are created for each Item of each PriceList Product.'
      tags:
      - Pricing
      parameters:
      - $ref: '#/components/parameters/pricing.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/pricing.RQLContentRangeLimitOffsetPagination.offset'
      - name: currency
        description: '**Filter for: currency**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - SSP
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.id
        description: '**Filter for: owner.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: owner.name
        description: '**Filter for: owner.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: stats.listings
        description: '**Filter for: stats.listings**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: stats.products
        description: '**Filter for: stats.products**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - scheduled
          - active
          - terminated
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pricing.PriceList'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/pricing.any_400'
    post:
      operationId: lists_list_createPriceList
      description: '# Create and manage PriceLists.


        First PriceListVersion is created with PriceList creation.


        PricePoints are created for each Item of each PriceList Product.'
      tags:
      - Pricing
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pricing.PriceList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.PriceList'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
  /pricing/lists/{id}:
    get:
      operationId: lists_detail_retrievePriceList
      description: '# Create and manage PriceLists.


        First PriceListVersion is created with PriceList creation.


        PricePoints are created for each Item of each PriceList Product.'
      tags:
      - Pricing
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Price List.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.PriceList'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
    put:
      operationId: lists_detail_updatePriceList
      description: '# Create and manage PriceLists.


        First PriceListVersion is created with PriceList creation.


        PricePoints are created for each Item of each PriceList Product.'
      tags:
      - Pricing
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Price List.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  maxLength: 512
                description:
                  type: string
                  maxLength: 2048
                attributes:
                  items:
                    type: object
                  minItems: 1
                  type: array
                  uniqueItems: true
                  description: PriceList attributes (columns). This is a array of
                    objects. Each object must contain 'name' properties. Property
                    'description' is optional. Property 'id' is allowed for update
                    only. Property 'name' must match pattern '^(Price|Suggested T0
                    Price|Suggested T1 Price|Suggested T2 Price|v\..{1:98})$'. At
                    least one attribute must be specified. If specified 'name' and/or
                    'description' properties for predefined attributes then they will
                    be redefined. Custom attributes 'name' property must start with
                    'v.'. Attributes order is equal to XLSX representation column
                    order.
              type: object
              description: PriceList representation. Field 'stats.listings' is accessed
                only by Vendor.
              required:
              - name
              - description
              - attributes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.PriceList'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
    delete:
      operationId: lists_detail_destroyPriceList
      description: '# Create and manage PriceLists.


        First PriceListVersion is created with PriceList creation.


        PricePoints are created for each Item of each PriceList Product.'
      tags:
      - Pricing
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Price List.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /pricing/lists/{id}/terminate:
    post:
      operationId: lists_terminate_postTerminatePriceList
      description: 'Terminate PriceList. Active PriceListVersions of this PriceList
        will be set to ''expired'' status.

        Scheduled one will be set to ''draft'' status.'
      tags:
      - Pricing
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Price List.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.Action'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
  /pricing/versions:
    get:
      operationId: versions_list_listPriceListVersions
      description: '# Create and manage PriceListVersions.


        PricePoints will be created for each Item of each PriceList Product.


        PriceListVersion XLSX representation will be fixed for Provider after schedule/activate.


        After one of these actions any changes will not affect on XLSX representation
        for Provider.


        For bulk update XLSX file download is needed to set:


        * HTTP Content-Type header: application/vnd.openxmlformats-officedocument.spreadsheetml.template


        * or add format=''xlsx'' param to query string (?format=xlsx)'
      tags:
      - Pricing
      parameters:
      - $ref: '#/components/parameters/pricing.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/pricing.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pricelist.currency
        description: '**Filter for: pricelist.currency**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - SSP
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
      - name: pricelist.id
        description: '**Filter for: pricelist.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pricelist.name
        description: '**Filter for: pricelist.name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pricelist.owner.id
        description: '**Filter for: pricelist.owner.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pricelist.owner.name
        description: '**Filter for: pricelist.owner.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pricelist.product.id
        description: '**Filter for: pricelist.product.id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pricelist.product.name
        description: '**Filter for: pricelist.product.name**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pricelist.stats.listings
        description: '**Filter for: pricelist.stats.listings**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: pricelist.stats.products
        description: '**Filter for: pricelist.stats.products**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: start_at
        description: '**Filter for: start_at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - processing
          - draft
          - scheduled
          - active
          - expired
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pricing.PriceListVersion'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/pricing.any_400'
    post:
      operationId: versions_list_createPriceListVersion
      description: '# Create and manage PriceListVersions.


        PricePoints will be created for each Item of each PriceList Product.


        PriceListVersion XLSX representation will be fixed for Provider after schedule/activate.


        After one of these actions any changes will not affect on XLSX representation
        for Provider.


        For bulk update XLSX file download is needed to set:


        * HTTP Content-Type header: application/vnd.openxmlformats-officedocument.spreadsheetml.template


        * or add format=''xlsx'' param to query string (?format=xlsx)'
      tags:
      - Pricing
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  type: string
                  maxLength: 2048
                base:
                  type: string
                  description: Base PriceListVersion (PricePoints are got from that
                    PriceListVersion).
                start_at:
                  type: string
                  format: date-time
                  description: Time when this PriceListVersion is activated (in case
                    of scheduling activation in future). PriceListVersions are being
                    activated at begin of specified hour.
              type: object
              description: PriceListVersion representation.
              required:
              - description
              - base
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.PriceListVersion'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
  /pricing/versions/{id}:
    get:
      operationId: versions_detail_retrievePriceListVersion
      description: '# Create and manage PriceListVersions.


        PricePoints will be created for each Item of each PriceList Product.


        PriceListVersion XLSX representation will be fixed for Provider after schedule/activate.


        After one of these actions any changes will not affect on XLSX representation
        for Provider.


        For bulk update XLSX file download is needed to set:


        * HTTP Content-Type header: application/vnd.openxmlformats-officedocument.spreadsheetml.template


        * or add format=''xlsx'' param to query string (?format=xlsx)'
      tags:
      - Pricing
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Price List Version.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.PriceListVersion'
            application/vnd.openxmlformats-officedocument.spreadsheetml.template:
              schema:
                type: string
                format: binary
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
    put:
      operationId: versions_detail_updatePriceListVersion
      description: '# Create and manage PriceListVersions.


        PricePoints will be created for each Item of each PriceList Product.


        PriceListVersion XLSX representation will be fixed for Provider after schedule/activate.


        After one of these actions any changes will not affect on XLSX representation
        for Provider.


        For bulk update XLSX file download is needed to set:


        * HTTP Content-Type header: application/vnd.openxmlformats-officedocument.spreadsheetml.template


        * or add format=''xlsx'' param to query string (?format=xlsx)'
      tags:
      - Pricing
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Price List Version.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  type: string
                  maxLength: 2048
                start_at:
                  type: string
                  format: date-time
                  description: Time when this PriceListVersion is activated (in case
                    of scheduling activation in future). PriceListVersions are being
                    activated at begin of specified hour.
              type: object
              description: PriceListVersion representation.
              required:
              - description
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.PriceListVersion'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
    delete:
      operationId: versions_detail_destroyPriceListVersion
      description: '# Create and manage PriceListVersions.


        PricePoints will be created for each Item of each PriceList Product.


        PriceListVersion XLSX representation will be fixed for Provider after schedule/activate.


        After one of these actions any changes will not affect on XLSX representation
        for Provider.


        For bulk update XLSX file download is needed to set:


        * HTTP Content-Type header: application/vnd.openxmlformats-officedocument.spreadsheetml.template


        * or add format=''xlsx'' param to query string (?format=xlsx)'
      tags:
      - Pricing
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Price List Version.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /pricing/versions/{id}/activate:
    post:
      operationId: versions_activate_postActivatePriceListVersion
      description: Immediately activate PriceListVersion. Previous active one will
        be set to 'expired' status.
      tags:
      - Pricing
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Price List Version.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.Action'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
  /pricing/versions/{id}/cancel:
    post:
      operationId: versions_cancel_postCancelPriceListVersion
      description: Returns scheduled PriceListVersion into 'draft' status.
      tags:
      - Pricing
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Price List Version.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.Action'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
  /pricing/versions/{id}/schedule:
    post:
      operationId: versions_schedule_postSchedulePriceListVersion
      description: Schedule PriceListVersion activation on specified in property 'start_at'
        time.
      tags:
      - Pricing
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this Price List Version.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                start_at:
                  type: string
                  format: date-time
                  description: Time when this PriceListVersion is activated (in case
                    of scheduling activation in future). PriceListVersions are being
                    activated at begin of specified hour.
              type: object
              description: PriceListVersion representation.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.PriceListVersion'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
  /pricing/versions/{version_pk}/adjustments:
    get:
      operationId: versions_adjustments_list_listPriceAdjustments
      description: '# Upload and manage PriceAdjustments.


        This is PricePoint bulk update ability through downloading

        current PriceListVersion XLSX representation and uploading XLSX file.'
      tags:
      - Pricing
      parameters:
      - name: version_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/pricing.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/pricing.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - processing
          - success
          - partial
          - failed
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pricing.PriceAdjustment'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/pricing.any_400'
    post:
      operationId: versions_adjustments_list_createPriceAdjustment
      description: '# Upload and manage PriceAdjustments.


        This is PricePoint bulk update ability through downloading

        current PriceListVersion XLSX representation and uploading XLSX file.'
      tags:
      - Pricing
      parameters:
      - name: version_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                uploaded_file:
                  type: string
                  format: binary
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.PriceAdjustment'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
  /pricing/versions/{version_pk}/adjustments/{id}:
    get:
      operationId: versions_adjustments_detail_retrievePriceAdjustment
      description: '# Upload and manage PriceAdjustments.


        This is PricePoint bulk update ability through downloading

        current PriceListVersion XLSX representation and uploading XLSX file.'
      tags:
      - Pricing
      parameters:
      - name: version_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.PriceAdjustment'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
  /pricing/versions/{version_pk}/points:
    get:
      operationId: versions_points_list_listPricePoints
      description: '# View and manage PricePoints.


        These are set of price attribute values for each Item.


        PricePoints are automatically created for each PriceListVersion.'
      tags:
      - Pricing
      parameters:
      - name: version_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/pricing.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/pricing.RQLContentRangeLimitOffsetPagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.display_name
        description: '**Filter for: item.display_name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.global_id
        description: '**Filter for: item.global_id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.product.id
        description: '**Filter for: item.product.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: item.product.name
        description: '**Filter for: item.product.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - filled
          - empty
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pricing.PricePoint'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/pricing.any_400'
  /pricing/versions/{version_pk}/points/{id}:
    get:
      operationId: versions_points_detail_retrievePricePoint
      description: '# View and manage PricePoints.


        These are set of price attribute values for each Item.


        PricePoints are automatically created for each PriceListVersion.'
      tags:
      - Pricing
      parameters:
      - name: version_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.PricePoint'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
    put:
      operationId: versions_points_detail_updatePricePoint
      description: '# View and manage PricePoints.


        These are set of price attribute values for each Item.


        PricePoints are automatically created for each PriceListVersion.'
      tags:
      - Pricing
      parameters:
      - name: version_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                attributes:
                  type: object
              type: object
              description: PricePoint representation.
              required:
              - attributes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing.PricePoint'
          description: ''
        '400':
          $ref: '#/components/responses/pricing.any_400'
  /accounts:
    get:
      operationId: accounts_list_listAccounts
      description: ''
      tags:
      - Accounts
      parameters:
      - $ref: '#/components/parameters/RQL1000Pagination.limit'
      - $ref: '#/components/parameters/RQL1000Pagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: external_id
        description: '**Filter for: external_id**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: public
        description: '**Filter for: public**


          lookups: eq, ne, null'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - Vendor
          - Provider
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
    post:
      operationId: accounts_list_createAccountCreate
      description: ''
      tags:
      - Accounts
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCreate'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /accounts/{account_pk}/groups:
    get:
      operationId: groups_list_listGroups
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.offset'
      - name: description
        description: '**Filter for: description**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: external_id
        description: '**Filter for: external_id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: permissions.id
        description: '**Filter for: permissions.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: permissions.object.id
        description: '**Filter for: permissions.object.id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: stats.users
        description: '**Filter for: stats.users**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true

          default: **hidden**'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
    post:
      operationId: groups_list_createGroupCreate
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCreate'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /accounts/{account_pk}/groups/{group_pk}/permissions:
    get:
      operationId: group_permissions_list_listGroupPermissions
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: group_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: object.id
        description: '**Filter for: object.id**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    object:
                      type: object
                      properties:
                        id:
                          type: string
                    events:
                      type: object
                      properties:
                        granted:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                            by:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
    post:
      operationId: group_permissions_list_createPermissionMerge
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: group_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionMerge'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionMerge'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    delete:
      operationId: group_permissions_list_destroyPermissionMerge
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: group_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /accounts/{account_pk}/groups/{group_pk}/users:
    get:
      operationId: group_users_list_listGroupUsers
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: group_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.offset'
      - name: email
        description: '**Filter for: email**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.added.at
        description: '**Filter for: events.added.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                      format: email
                    active:
                      type: boolean
                    notifications:
                      type: boolean
                    announcements:
                      type: boolean
                    region:
                      type: string
                    timeformat:
                      type: string
                    timezone:
                      type: string
                    events:
                      type: object
                      properties:
                        created:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                        signed:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                        invited:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                            by:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                        activated:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                        added:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                            by:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                    status:
                      type: string
                    activation_code:
                      type: string
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
    post:
      operationId: group_users_list_createGroupUserChangeMembership
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: group_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUserChangeMembership'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserChangeMembership'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    delete:
      operationId: group_users_list_destroyGroupUserChangeMembership
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: group_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /accounts/{account_pk}/groups/{id}:
    get:
      operationId: groups_detail_retrieveGroup
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    put:
      operationId: groups_detail_updateGroupUpdate
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    delete:
      operationId: groups_detail_destroyGroup
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /accounts/{account_pk}/media:
    get:
      operationId: account_media_list_listSerializerCl
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - image
          - video
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerializerCls'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
    post:
      operationId: account_media_list_createSerializerCls
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializerCls'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerializerCls'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /accounts/{account_pk}/media/{id}:
    get:
      operationId: account_media_detail_retrieveSerializerCls
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerializerCls'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    put:
      operationId: account_media_detail_updateSerializerCls
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializerCls'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerializerCls'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    delete:
      operationId: account_media_detail_destroySerializerCls
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /accounts/{account_pk}/users:
    get:
      operationId: account_users_list_listAccountUsers
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/RQL1000Pagination.limit'
      - $ref: '#/components/parameters/RQL1000Pagination.offset'
      - name: email
        description: '**Filter for: email**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.activated.at
        description: '**Filter for: events.activated.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.invited.at
        description: '**Filter for: events.invited.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.signed.at
        description: '**Filter for: events.signed.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: groups.id
        description: '**Filter for: groups.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: groups.name
        description: '**Filter for: groups.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: notifications
        description: '**Filter for: notifications**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: permissions
        description: "**Filter for: permissions**\n\nlookups: \ndefault: **hidden**"
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: tags.id
        description: '**Filter for: tags.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: tags.name
        description: '**Filter for: tags.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                      format: email
                    active:
                      type: boolean
                    notifications:
                      type: boolean
                    announcements:
                      type: boolean
                    region:
                      type: string
                    timeformat:
                      type: string
                    timezone:
                      type: string
                    events:
                      type: object
                      properties:
                        created:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                        signed:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                        invited:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                            by:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                        activated:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                    status:
                      type: string
                    activation_code:
                      type: string
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
    post:
      operationId: account_users_list_createAccountUserCreate
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserCreate'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /accounts/{account_pk}/users/{user__id}:
    get:
      operationId: account_users_detail_retrieveAccountUser
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user__id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                    format: email
                  active:
                    type: boolean
                  notifications:
                    type: boolean
                  announcements:
                    type: boolean
                  region:
                    type: string
                  timeformat:
                    type: string
                  timezone:
                    type: string
                  events:
                    type: object
                    properties:
                      created:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                      signed:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                      invited:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                          by:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      activated:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                  status:
                    type: string
                  activation_code:
                    type: string
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    put:
      operationId: account_users_detail_updateAccountUserUpdate
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user__id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUserUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    delete:
      operationId: account_users_detail_destroyAccountUser
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user__id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /accounts/{account_pk}/users/{user__id}/activate:
    post:
      operationId: account_users_activate_postActivateAccountUser
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user__id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                    format: email
                  active:
                    type: boolean
                  notifications:
                    type: boolean
                  announcements:
                    type: boolean
                  region:
                    type: string
                  timeformat:
                    type: string
                  timezone:
                    type: string
                  events:
                    type: object
                    properties:
                      created:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                      signed:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                      invited:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                          by:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      activated:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                  status:
                    type: string
                  activation_code:
                    type: string
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /accounts/{account_pk}/users/{user__id}/reinvite:
    post:
      operationId: account_users_reinvite_postReinviteAccountUser
      description: ''
      tags:
      - Accounts
      parameters:
      - name: account_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: user__id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                    format: email
                  active:
                    type: boolean
                  notifications:
                    type: boolean
                  announcements:
                    type: boolean
                  region:
                    type: string
                  timeformat:
                    type: string
                  timezone:
                    type: string
                  events:
                    type: object
                    properties:
                      created:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                      signed:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                      invited:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                          by:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      activated:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                  status:
                    type: string
                  activation_code:
                    type: string
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /accounts/{id}:
    get:
      operationId: accounts_detail_retrieveAccount
      description: ''
      tags:
      - Accounts
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    put:
      operationId: accounts_detail_updateAccountUpdate
      description: ''
      tags:
      - Accounts
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    delete:
      operationId: accounts_detail_destroyAccount
      description: ''
      tags:
      - Accounts
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /auth/context:
    get:
      operationId: context_list_listContextWrites
      description: ''
      tags:
      - Auth
      parameters: []
      responses:
        200:
          headers: &id059
            Set-Cookie:
              schema:
                type: string
              description: Cookie for User Authentication
          content: &id056
            application/json:
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      icon:
                        type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
          description: ''
        401: &id058
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
          description: ''
    post:
      operationId: context_list_createContextWrite
      description: ''
      tags:
      - Auth
      parameters: []
      requestBody: &id057
        content: *id056
        description: ''
      responses:
        201: *id057
        400: *id058
        401: *id058
  /auth/login:
    post:
      operationId: login_list_createAuthLogin
      description: ''
      tags:
      - Auth
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                recaptcha:
                  type: string
      responses:
        201:
          headers: *id059
          content: *id056
          description: ''
        401: *id058
  /auth/logout:
    post:
      operationId: logout_list_createAuthLogout
      description: ''
      tags:
      - Auth
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers:
            Set-Cookie:
              schema:
                type: string
              description: User Authentication Cookie is deleted
          description: ''
        401: *id058
  /auth/password/change:
    post:
      operationId: password_change_list_createPasswordChange
      description: ''
      tags:
      - Auth
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /auth/password/restore:
    post:
      operationId: password_restore_list_createAuthPasswordRestore
      description: ''
      tags:
      - Auth
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                recaptcha:
                  type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
          description: ''
        401: *id058
  /auth/password/set:
    post:
      operationId: password_set_list_createAuthPasswordSet
      description: ''
      tags:
      - Auth
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                recaptcha:
                  type: string
      responses:
        201:
          headers: *id059
          content: *id056
          description: ''
        401: *id058
  /auth/recaptcha:
    get:
      operationId: recaptcha_list_listAuthRecaptchas
      description: ''
      tags:
      - Auth
      parameters: []
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  sitekey:
                    type: string
          description: ''
  /auth/tokens:
    get:
      operationId: tokens_list_listTokens
      description: ''
      tags:
      - Extensions
      parameters:
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.created.by.id
        description: '**Filter for: events.created.by.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.by.name
        description: '**Filter for: events.created.by.name**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: extension.id
        description: '**Filter for: extension.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: extension.name
        description: '**Filter for: extension.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: external_id
        description: '**Filter for: external_id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - pending
          - active
          - inactive
          - deleted
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
    post:
      operationId: tokens_list_createTokenWrite
      description: ''
      tags:
      - Extensions
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenWrite'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenWrite'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /auth/tokens/{id}:
    get:
      operationId: tokens_detail_retrieveToken
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    put:
      operationId: tokens_detail_updateTokenUpdate
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    delete:
      operationId: tokens_detail_destroyToken
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /auth/tokens/{id}/activate:
    post:
      operationId: tokens_activate_postActivateToken
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /auth/tokens/{id}/deactivate:
    post:
      operationId: tokens_deactivate_postDeactivateToken
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /auth/user/check:
    post:
      operationId: user_check_list_createAuthUserCheck
      description: ''
      tags:
      - Auth
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                recaptcha:
                  type: string
        description: ''
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties: {}
          description: ''
        401: *id058
        404: *id058
  /dictionary/extensions/categories:
    get:
      operationId: extension_categories_list_listExtensionCategories
      description: ''
      tags:
      - Extensions
      parameters:
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtensionCategory'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
  /dictionary/extensions/categories/{id}:
    get:
      operationId: extension_categories_detail_retrieveExtensionCategory
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this extension category.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionCategory'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /extensions:
    get:
      operationId: extensions_list_listExtensions
      description: ''
      tags:
      - Extensions
      parameters:
      - $ref: '#/components/parameters/RQL1000Pagination.limit'
      - $ref: '#/components/parameters/RQL1000Pagination.offset'
      - name: categories.id
        description: '**Filter for: categories.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: constraints.account.tokens
        description: '**Filter for: constraints.account.tokens**


          lookups: eq, ne, ge, gt, le, lt, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: featured
        description: '**Filter for: featured**


          lookups: eq, ne

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: industries.id
        description: '**Filter for: industries.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: portal
        description: '**Filter for: portal**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - any
          - provider
          - vendor
      - name: priority
        description: '**Filter for: priority**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - draft
          - published
          - unrestricted
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Extension'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
    post:
      operationId: extensions_list_createExtensionCreate
      description: ''
      tags:
      - Extensions
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionCreate'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /extensions/{extension_id}/media:
    get:
      operationId: extension_media_list_listSerializerCl
      description: ''
      tags:
      - Extensions
      parameters:
      - name: extension_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - image
          - video
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerializerCls'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
    post:
      operationId: extension_media_list_createSerializerCls
      description: ''
      tags:
      - Extensions
      parameters:
      - name: extension_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializerCls'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerializerCls'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /extensions/{extension_id}/media/{id}:
    get:
      operationId: extension_media_detail_retrieveSerializerCls
      description: ''
      tags:
      - Extensions
      parameters:
      - name: extension_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerializerCls'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    put:
      operationId: extension_media_detail_updateSerializerCls
      description: ''
      tags:
      - Extensions
      parameters:
      - name: extension_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializerCls'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerializerCls'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    delete:
      operationId: extension_media_detail_destroySerializerCls
      description: ''
      tags:
      - Extensions
      parameters:
      - name: extension_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /extensions/{id}:
    get:
      operationId: extensions_detail_retrieveExtension
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    put:
      operationId: extensions_detail_updateExtensionUpdate
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    delete:
      operationId: extensions_detail_destroyExtension
      description: ''
      tags:
      - Extensions
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /industries:
    get:
      operationId: industries_list_listIndustries
      description: ''
      tags:
      - General Collections
      parameters:
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Industry'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
  /industries/{id}:
    get:
      operationId: industries_detail_retrieveIndustry
      description: ''
      tags:
      - General Collections
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this industry.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Industry'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /modules:
    get:
      operationId: modules_list_listModules
      description: ''
      tags:
      - General Collections
      parameters:
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/RQLContentRangeLimitOffsetPagination.offset'
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Module'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
  /modules/{id}:
    get:
      operationId: modules_detail_retrieveModule
      description: ''
      tags:
      - General Collections
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this module.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /users:
    get:
      operationId: users_list_listAccountUsers
      description: ''
      tags:
      - Accounts
      parameters:
      - $ref: '#/components/parameters/RQL1000Pagination.limit'
      - $ref: '#/components/parameters/RQL1000Pagination.offset'
      - name: email
        description: '**Filter for: email**


          lookups: eq, ne, like, ilike, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.activated.at
        description: '**Filter for: events.activated.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.invited.at
        description: '**Filter for: events.invited.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.signed.at
        description: '**Filter for: events.signed.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: groups.id
        description: '**Filter for: groups.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: groups.name
        description: '**Filter for: groups.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, null, in, out

          search: true

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: notifications
        description: '**Filter for: notifications**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: permissions
        description: '**Filter for: permissions**


          lookups: eq, ne, like, ilike, in, out

          default: **hidden**'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: tags.id
        description: '**Filter for: tags.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: tags.name
        description: '**Filter for: tags.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                      format: email
                    active:
                      type: boolean
                    notifications:
                      type: boolean
                    announcements:
                      type: boolean
                    region:
                      type: string
                    timeformat:
                      type: string
                    timezone:
                      type: string
                    events:
                      type: object
                      properties:
                        created:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                        signed:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                        invited:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                            by:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                        activated:
                          type: object
                          properties:
                            at:
                              type: string
                              format: date-time
                    status:
                      type: string
                    activation_code:
                      type: string
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/any_400'
    post:
      operationId: users_list_createUserCreate
      description: ''
      tags:
      - Accounts
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
  /users/{user__id}:
    get:
      operationId: users_detail_retrieveAccountUser
      description: ''
      tags:
      - Accounts
      parameters:
      - name: user__id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                    format: email
                  active:
                    type: boolean
                  notifications:
                    type: boolean
                  announcements:
                    type: boolean
                  region:
                    type: string
                  timeformat:
                    type: string
                  timezone:
                    type: string
                  events:
                    type: object
                    properties:
                      created:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                      signed:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                      invited:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                          by:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      activated:
                        type: object
                        properties:
                          at:
                            type: string
                            format: date-time
                  status:
                    type: string
                  activation_code:
                    type: string
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    put:
      operationId: users_detail_updateUserUpdate
      description: ''
      tags:
      - Accounts
      parameters:
      - name: user__id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/any_400'
    delete:
      operationId: users_detail_destroyAccountUser
      description: ''
      tags:
      - Accounts
      parameters:
      - name: user__id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /reporting/reports:
    get:
      operationId: reports_list_listReports
      description: Get the reports available in the collection.
      tags:
      - Reports
      parameters:
      - $ref: '#/components/parameters/reporting.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/reporting.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.started.at
        description: '**Filter for: events.started.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.terminated.at
        description: '**Filter for: events.terminated.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: schedule.id
        description: '**Filter for: schedule.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - pending
          - deploying
          - running
          - succeeded
          - failed
      - name: template.id
        description: '**Filter for: template.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: template.name
        description: '**Filter for: template.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: template.type
        description: '**Filter for: template.type**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - system
          - custom
      - name: timeout
        description: '**Filter for: timeout**


          lookups: eq, ne

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reporting.Report'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/reporting.any_400'
    post:
      operationId: reports_list_createReportCreate
      description: Create a new report and execute it.
      tags:
      - Reports
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting.ReportCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.Report'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /reporting/reports/{id}:
    get:
      operationId: reports_detail_retrieveReport
      description: Get a concrete report given it's id.
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.Report'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
    delete:
      operationId: reports_detail_destroyReport
      description: Delete a concrete report execution given it's id.
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /reporting/reports/{id}/download:
    get:
      operationId: reports_download_getDownloadReport
      description: 'Download the result of the report execution, by default an Excel
        file.

        Report download is only possible for successfully executed reports.'
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
  /reporting/reports/{id}/fail:
    post:
      operationId: reports_fail_postFailReportFail
      description: 'Mark the report as failed, method only available to concrete execution
        run.

        If `block` is set to `True`, the templates associated with the report will
        be blocked as well.'
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting.ReportFail'
      responses:
        '204':
          description: ''
  /reporting/reports/{id}/progress:
    post:
      operationId: reports_progress_postProgressReportUpdateProgress
      description: 'Update report execution progress. Available only for concrete
        execution and

        while is not in a final state, in other words must be either running or deploying.'
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting.ReportUpdateProgress'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.Report'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /reporting/reports/{id}/upload:
    post:
      operationId: reports_upload_postUploadReport
      description: 'Upload report execution result (i.e. Excel file) for a given report
        id.

        Report upload is only possible for running report, after upload action the

        execution is marked as successful.'
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
      responses:
        '204':
          description: ''
  /reporting/repositories:
    get:
      operationId: repositories_list_listReportsRepositories
      description: Get the report repositories available in the collection.
      tags:
      - Reports
      parameters:
      - $ref: '#/components/parameters/reporting.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/reporting.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: repository_type
        description: '**Filter for: repository_type**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - system
          - custom
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - configuring
          - ready
          - failed
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reporting.ReportsRepository'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/reporting.any_400'
    post:
      operationId: repositories_list_createReportsRepositoryCreate
      description: 'Create new reports repository resource.

        The newly created reports repository will be set to the

        `configuring` status till the validation of the contained templates is finalized.

        An asynchronous task will be started to validate and configure the report
        templates contained

        within the reports git repository.'
      tags:
      - Reports
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting.ReportsRepositoryCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.ReportsRepository'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /reporting/repositories/tags:
    post:
      operationId: repositories_tags_postAnonymous_tagsRepositoryTagsRequest
      description: 'Get a list of tags created on the remote git

        repository received as input.'
      tags:
      - Reports
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting.RepositoryTagsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.RepositoryTags'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /reporting/repositories/{id}:
    get:
      operationId: repositories_detail_retrieveReportsRepository
      description: Get a concrete report repository object given it's id.
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.ReportsRepository'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
    put:
      operationId: repositories_detail_updateReportsRepositoryCreate
      description: 'Updates a reports repository resource.

        The report templates associated to the reports repository

        that is being updated will be blocked and no longer can be

        used to generate reports. The reports repository will be

        switched to the `configuring` status till the validation of the contained
        templates is finalized

        and an asynchronous task will be started to validate and configure the report

        templates contained within the reports git repository based

        on the updated git information.'
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting.ReportsRepositoryCreate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.ReportsRepository'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
    delete:
      operationId: repositories_detail_destroyReportsRepository
      description: 'Delete repository object based on the provided repository id.

        Repositories in `configuring` status cannot be deleted.'
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /reporting/repositories/{id}/tags:
    get:
      operationId: repositories_existing_tags_getTagsReportsRepository
      description: 'Get a list of tags created on the remote git repository.

        Unlike `/tags` endpoint, this one returns tags not for the repository received
        as

        an input, but for the repository previously saved in the system.'
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.RepositoryTags'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /reporting/schedules:
    get:
      operationId: schedules_list_listReportSchedules
      description: Get the report schedules available in the collection.
      tags:
      - Reports
      parameters:
      - $ref: '#/components/parameters/reporting.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/reporting.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.last_execution.at
        description: '**Filter for: events.last_execution.at**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.next_execution.at
        description: '**Filter for: events.next_execution.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - enabled
          - disabled
      - name: template.id
        description: '**Filter for: template.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: template.local_id
        description: '**Filter for: template.local_id**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: template.name
        description: '**Filter for: template.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: template.type
        description: '**Filter for: template.type**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - system
          - custom
      - name: trigger.frequency
        description: '**Filter for: trigger.frequency**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - daily
          - weekly
          - monthly
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reporting.ReportSchedule'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/reporting.any_400'
    post:
      operationId: schedules_list_createReportScheduleCreate
      description: Create a new schedule object for reports.
      tags:
      - Reports
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting.ReportScheduleCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.ReportScheduleCreate'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /reporting/schedules/{id}:
    get:
      operationId: schedules_detail_retrieveReportSchedule
      description: Get a concrete report schedule given it's id.
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.ReportSchedule'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
    put:
      operationId: schedules_detail_updateReportScheduleUpdate
      description: Update a schedule object for reports.
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting.ReportSchedule'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.ReportScheduleUpdate'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
    delete:
      operationId: schedules_detail_destroyReportSchedule
      description: Delete a concrete schedule given it's id.
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /reporting/schedules/{id}/disable:
    post:
      operationId: schedules_disable_postDisableReportSchedule
      description: 'Disable report schedule, with a given reason, to account users.

        Schedule must be in status `enabled` to perform this call'
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting.ReportScheduleDisable'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.ReportSchedule'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /reporting/schedules/{id}/enable:
    post:
      operationId: schedules_enable_postEnableReportSchedule
      description: 'Enable report schedule.

        Schedule must be in status `disabled` and associated template not blocked

        to perform this call'
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.ReportSchedule'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /reporting/schedules/{id}/trigger:
    post:
      operationId: schedules_trigger_postTriggerReportSchedule
      description: Create new report based on this schedule's configuration.
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /reporting/templates:
    get:
      operationId: templates_list_listReportTemplates
      description: Get the report templates available in the collection.
      tags:
      - Reports
      parameters:
      - $ref: '#/components/parameters/reporting.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/reporting.RQLContentRangeLimitOffsetPagination.offset'
      - name: audience.provider
        description: '**Filter for: audience.provider**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: audience.vendor
        description: '**Filter for: audience.vendor**


          lookups: eq, ne'
        in: query
        required: false
        deprecated: false
        schema:
          type: boolean
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: local_id
        description: '**Filter for: local_id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: repository.id
        description: '**Filter for: repository.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: repository.name
        description: '**Filter for: repository.name**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - enabled
          - disabled
          - blocked
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - system
          - custom
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reporting.ReportTemplate'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /reporting/templates/{id}:
    get:
      operationId: templates_detail_retrieveReportTemplate
      description: Get a concrete report template given it's id.
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.ReportTemplate'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /reporting/templates/{id}/disable:
    post:
      operationId: templates_disable_postDisableReportTemplate
      description: 'Disable report templates, with a given reason, to account users.

        Template must be in status `enabled` to perform this call'
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reporting.ReportTemplateNotes'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.ReportTemplate'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /reporting/templates/{id}/enable:
    post:
      operationId: templates_enable_postEnableReportTemplate
      description: 'Enable report template.

        Template must be in status `disabled` to perform this call'
      tags:
      - Reports
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reporting.ReportTemplate'
          description: ''
        '400':
          $ref: '#/components/responses/reporting.any_400'
  /conversations/conversations:
    get:
      operationId: conversations_list_listConversations
      description: Get a list of available Conversations.
      tags:
      - Conversations
      parameters:
      - $ref: '#/components/parameters/conversations.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/conversations.RQL1000Pagination.offset'
      - name: created
        description: '**Filter for: created**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: instance_id
        description: '**Filter for: instance_id**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/conversations.Conversation'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/conversations.any_400'
    post:
      operationId: conversations_list_createConversation
      description: Create a new Conversation.
      tags:
      - Conversations
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conversations.Conversation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversations.Conversation'
          description: ''
        '400':
          $ref: '#/components/responses/conversations.any_400'
  /conversations/conversations/{conversation_id}/messages:
    get:
      operationId: conversation_messages_list_listMessages
      description: Get a list of available Messages.
      tags:
      - Conversations
      parameters:
      - name: conversation_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/conversations.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/conversations.RQL1000Pagination.offset'
      - name: created
        description: '**Filter for: created**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.created.by.id
        description: '**Filter for: events.created.by.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: text
        description: '**Filter for: text**


          lookups: eq, ne, like, ilike, in, out

          search: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/conversations.Message'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/conversations.any_400'
    post:
      operationId: conversation_messages_list_createMessage
      description: Create a new Message.
      tags:
      - Conversations
      parameters:
      - name: conversation_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conversations.Message'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversations.Message'
          description: ''
        '400':
          $ref: '#/components/responses/conversations.any_400'
  /conversations/conversations/{conversation_id}/messages/{id}:
    put:
      operationId: conversation_messages_detail_updateMessage
      description: API to create and manage Messages.
      tags:
      - Conversations
      parameters:
      - name: conversation_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique value identifying this message.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conversations.Message'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversations.Message'
          description: ''
        '400':
          $ref: '#/components/responses/conversations.any_400'
  /conversations/conversations/{id}:
    get:
      operationId: conversations_detail_retrieveConversation
      description: Get a specific Conversation by id or instance_id
      tags:
      - Conversations
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this conversation.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversations.Conversation'
          description: ''
        '400':
          $ref: '#/components/responses/conversations.any_400'
    delete:
      operationId: conversations_detail_destroyConversation
      description: API to create and manage Conversations.
      tags:
      - Conversations
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this conversation.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /conversations/conversations/{id}/close:
    post:
      operationId: conversations_close_postCloseConversation
      description: Close conversation. New messages can't be added to a "closed" conversation.
      tags:
      - Conversations
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this conversation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conversations.Conversation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversations.Conversation'
          description: ''
        '400':
          $ref: '#/components/responses/conversations.any_400'
  /offers/offers:
    get:
      operationId: offers_list_listOfferVersions
      description: '# Create and manage Offers.


        First Offer version is created with Offer creation.'
      tags:
      - Offers
      parameters:
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: stats.listings
        description: '**Filter for: stats.listings**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: stats.versions
        description: '**Filter for: stats.versions**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - private
          - ready
          - listed
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offers.Offer'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/offers.any_400'
    post:
      operationId: offers_list_createOfferVersion
      description: '# Create and manage Offers.


        First Offer version is created with Offer creation.'
      tags:
      - Offers
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.Offer'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Offer'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/-/versions:
    get:
      operationId: offers_versions_all_list_listOfferVersions
      description: '# List all Offer versions.'
      tags:
      - Offers
      parameters:
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: stats.listings
        description: '**Filter for: stats.listings**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: stats.versions
        description: '**Filter for: stats.versions**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - private
          - ready
          - listed
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offers.OfferVersion'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{id}:
    get:
      operationId: offers_detail_retrieveOfferVersion
      description: '# Create and manage Offers.


        First Offer version is created with Offer creation.'
      tags:
      - Offers
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this offer version.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Offer'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
    put:
      operationId: offers_detail_updateOfferVersion
      description: '# Create and manage Offers.


        First Offer version is created with Offer creation.'
      tags:
      - Offers
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this offer version.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.Offer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Offer'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
    delete:
      operationId: offers_detail_destroyOfferVersion
      description: '# Create and manage Offers.


        First Offer version is created with Offer creation.'
      tags:
      - Offers
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this offer version.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /offers/offers/{id}/clone:
    post:
      operationId: offers_clone_postCloneOfferVersion
      description: '# Create and manage Offers.


        First Offer version is created with Offer creation.'
      tags:
      - Offers
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this offer version.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.Offer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Offer'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/features:
    get:
      operationId: offers_features_list_listFeatureVersions
      description: '# Create and manage Features.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: group.id
        description: '**Filter for: group.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: group.name
        description: '**Filter for: group.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: group.position
        description: '**Filter for: group.position**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offers.Feature'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/offers.any_400'
    post:
      operationId: offers_features_list_createFeatureVersion
      description: '# Create and manage Features.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.Feature'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Feature'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/features-groups:
    get:
      operationId: offers_featuresgroups_list_listFeaturesGroupVersions
      description: '# Create and manage Feature groups.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offers.FeaturesGroup'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/offers.any_400'
    post:
      operationId: offers_featuresgroups_list_createFeaturesGroupVersion
      description: '# Create and manage Feature groups.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.FeaturesGroup'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.FeaturesGroup'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/features-groups/{id}:
    get:
      operationId: offers_featuresgroups_detail_retrieveFeaturesGroupVersion
      description: '# Create and manage Feature groups.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this features group version.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.FeaturesGroup'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
    put:
      operationId: offers_featuresgroups_detail_updateFeaturesGroupVersion
      description: '# Create and manage Feature groups.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this features group version.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.FeaturesGroup'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.FeaturesGroup'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
    delete:
      operationId: offers_featuresgroups_detail_destroyFeaturesGroupVersion
      description: '# Create and manage Feature groups.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this features group version.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /offers/offers/{offer_id}/features/{id}:
    get:
      operationId: offers_features_detail_retrieveFeatureVersion
      description: '# Create and manage Features.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature version.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Feature'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
    put:
      operationId: offers_features_detail_updateFeatureVersion
      description: '# Create and manage Features.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature version.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.Feature'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Feature'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
    delete:
      operationId: offers_features_detail_destroyFeatureVersion
      description: '# Create and manage Features.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature version.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /offers/offers/{offer_id}/items:
    get:
      operationId: offers_items_list_listOfferItemVersions
      description: '# Create and manage Offer items.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.created.by.id
        description: '**Filter for: events.created.by.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.by.name
        description: '**Filter for: events.created.by.name**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.by.id
        description: '**Filter for: events.updated.by.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.updated.by.name
        description: '**Filter for: events.updated.by.name**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offers.OfferItem'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/offers.any_400'
    post:
      operationId: offers_items_list_createOfferItemVersion
      description: '# Create and manage Offer items.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.OfferItem'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.OfferItem'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/items/{id}:
    get:
      operationId: offers_items_detail_retrieveOfferItemVersion
      description: '# Create and manage Offer items.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this offer item version.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.OfferItem'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
    put:
      operationId: offers_items_detail_updateOfferItemVersion
      description: '# Create and manage Offer items.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this offer item version.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.OfferItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.OfferItem'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
    delete:
      operationId: offers_items_detail_destroyOfferItemVersion
      description: '# Create and manage Offer items.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this offer item version.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /offers/offers/{offer_id}/plans:
    get:
      operationId: offers_plans_list_listPlanVersions
      description: '# Create and manage Plans.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.offset'
      - name: color
        description: '**Filter for: color**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: description
        description: '**Filter for: description**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: periods
        description: '**Filter for: periods**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offers.Plan'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/offers.any_400'
    post:
      operationId: offers_plans_list_createPlanVersion
      description: '# Create and manage Plans.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.Plan'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Plan'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/plans/{id}:
    get:
      operationId: offers_plans_detail_retrievePlanVersion
      description: '# Create and manage Plans.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this plan version.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Plan'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
    put:
      operationId: offers_plans_detail_updatePlanVersion
      description: '# Create and manage Plans.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this plan version.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.Plan'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Plan'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
    delete:
      operationId: offers_plans_detail_destroyPlanVersion
      description: '# Create and manage Plans.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this plan version.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /offers/offers/{offer_id}/versions:
    get:
      operationId: offers_versions_list_listOfferVersions
      description: '# Create and manage Offer versions.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.id
        description: '**Filter for: product.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: product.name
        description: '**Filter for: product.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: stats.listings
        description: '**Filter for: stats.listings**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: stats.versions
        description: '**Filter for: stats.versions**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: status
        description: '**Filter for: status**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - private
          - ready
          - listed
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offers.OfferVersion'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/offers.any_400'
    post:
      operationId: offers_versions_list_createOfferVersion
      description: '# Create and manage Offer versions.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.OfferVersion'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.OfferVersion'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/versions/{id}:
    get:
      operationId: offers_versions_detail_retrieveOfferVersion
      description: '# Create and manage Offer versions.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this offer version.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.OfferVersion'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
    put:
      operationId: offers_versions_detail_updateOfferVersion
      description: '# Create and manage Offer versions.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this offer version.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offers.OfferVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.OfferVersion'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/versions/{offerversion_id}/features:
    get:
      operationId: offerversion_features_list_listFeatureVersions
      description: '# List Features for specified Offer version.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: offerversion_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: group.id
        description: '**Filter for: group.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: group.name
        description: '**Filter for: group.name**


          lookups: eq, ne, like, ilike, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: group.position
        description: '**Filter for: group.position**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offers.Feature'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/versions/{offerversion_id}/features-groups:
    get:
      operationId: offerversion_featuresgroups_list_listFeaturesGroupVersions
      description: '# List Feature groups for specified Offer version.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: offerversion_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offers.FeaturesGroup'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/versions/{offerversion_id}/features-groups/{id}:
    get:
      operationId: offerversion_featuresgroups_detail_retrieveFeaturesGroupVersion
      description: '# List Feature groups for specified Offer version.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: offerversion_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this features group version.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.FeaturesGroup'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/versions/{offerversion_id}/features/{id}:
    get:
      operationId: offerversion_features_detail_retrieveFeatureVersion
      description: '# List Features for specified Offer version.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: offerversion_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this feature version.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Feature'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/versions/{offerversion_id}/items:
    get:
      operationId: offerversion_items_list_listOfferItemVersions
      description: '# List Offer items for specified Offer version.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: offerversion_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.offset'
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.created.by.id
        description: '**Filter for: events.created.by.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.by.name
        description: '**Filter for: events.created.by.name**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.by.id
        description: '**Filter for: events.updated.by.id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.updated.by.name
        description: '**Filter for: events.updated.by.name**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offers.OfferItem'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/versions/{offerversion_id}/items/{id}:
    get:
      operationId: offerversion_items_detail_retrieveOfferItemVersion
      description: '# List Offer items for specified Offer version.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: offerversion_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this offer item version.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.OfferItem'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/versions/{offerversion_id}/plans:
    get:
      operationId: offerversion_plans_list_listPlanVersions
      description: '# List Plans for specified Offer version.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: offerversion_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.limit'
      - $ref: '#/components/parameters/offers.RQLContentRangeLimitOffsetPagination.offset'
      - name: color
        description: '**Filter for: color**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: description
        description: '**Filter for: description**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          format: date-time
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: name
        description: '**Filter for: name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: periods
        description: '**Filter for: periods**


          lookups: eq, in'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: position
        description: '**Filter for: position**


          lookups: eq, ne, ge, gt, le, lt, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offers.Plan'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/offers.any_400'
  /offers/offers/{offer_id}/versions/{offerversion_id}/plans/{id}:
    get:
      operationId: offerversion_plans_detail_retrievePlanVersion
      description: '# List Plans for specified Offer version.'
      tags:
      - Offers
      parameters:
      - name: offer_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: offerversion_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this plan version.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers.Plan'
          description: ''
        '400':
          $ref: '#/components/responses/offers.any_400'
  /accounts/{account}/statistics:
    get:
      operationId: account_statistics_retrieveStat
      description: Retrieve Account Statistics.
      tags:
      - Statistics
      parameters:
      - name: account
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statistics.Statistics'
          description: ''
        '400':
          $ref: '#/components/responses/statistics.any_400'
    post:
      operationId: account_statistics_postCalculateStat
      description: Calculate/recalculate Statistics for an Account.
      tags:
      - Statistics
      parameters:
      - name: account
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/statistics.Statistics'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statistics.Statistics'
          description: ''
        '400':
          $ref: '#/components/responses/statistics.any_400'
  /helpdesk/helpdesk/cases:
    get:
      operationId: cases_list_listCases
      description: API to create and manage Cases.
      tags:
      - Helpdesk
      parameters:
      - $ref: '#/components/parameters/helpdesk.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/helpdesk.RQL1000Pagination.offset'
      - name: events.closed.at
        description: '**Filter for: events.closed.at**


          lookups: eq, ne, ge, gt, le, lt

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.closed.by.id
        description: '**Filter for: events.closed.by.id**


          lookups: eq, ne, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.at
        description: '**Filter for: events.created.at**


          lookups: eq, ne, ge, gt, le, lt

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.created.by.id
        description: '**Filter for: events.created.by.id**


          lookups: eq, ne, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.inquiring.at
        description: '**Filter for: events.inquiring.at**


          lookups: eq, ne, ge, gt, le, lt

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.inquiring.by.id
        description: '**Filter for: events.inquiring.by.id**


          lookups: eq, ne, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.pending.at
        description: '**Filter for: events.pending.at**


          lookups: eq, ne, ge, gt, le, lt

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.pending.by.id
        description: '**Filter for: events.pending.by.id**


          lookups: eq, ne, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.resolved.at
        description: '**Filter for: events.resolved.at**


          lookups: eq, ne, ge, gt, le, lt

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.resolved.by.id
        description: '**Filter for: events.resolved.by.id**


          lookups: eq, ne, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.updated.at
        description: '**Filter for: events.updated.at**


          lookups: eq, ne, ge, gt, le, lt

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: events.updated.by.id
        description: '**Filter for: events.updated.by.id**


          lookups: eq, ne, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: id
        description: '**Filter for: id**


          lookups: eq, ne, like, ilike, null, in, out'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: issuer.account.id
        description: '**Filter for: issuer.account.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: issuer.account.name
        description: '**Filter for: issuer.account.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: issuer.agent.id
        description: '**Filter for: issuer.agent.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: issuer.agent.name
        description: '**Filter for: issuer.agent.name**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: priority
        description: '**Filter for: priority**


          lookups: eq, ne, ge, gt, le, lt, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
      - name: receiver.account.id
        description: '**Filter for: receiver.account.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: receiver.account.name
        description: '**Filter for: receiver.account.name**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: receiver.agent.id
        description: '**Filter for: receiver.agent.id**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: receiver.agent.name
        description: '**Filter for: receiver.agent.name**


          lookups: eq, ne, like, ilike, null, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: state
        description: '**Filter for: state**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - pending
          - inquiring
          - resolved
          - closed
      - name: subject
        description: '**Filter for: subject**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
      - name: type
        description: '**Filter for: type**


          lookups: eq, ne, like, ilike, in, out

          ordering: true'
        in: query
        required: false
        deprecated: false
        schema:
          type: string
          enum:
          - technical
          - business
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/helpdesk.Case'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
    post:
      operationId: cases_list_createCase
      description: API to create and manage Cases.
      tags:
      - Helpdesk
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
                  readOnly: true
                product:
                  $ref: '#/components/schemas/helpdesk.Product'
                subject:
                  type: string
                  maxLength: 300
                description:
                  type: string
                  maxLength: 10000
                priority:
                  type: string
                  enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  minimum: -2147483648
                  maximum: 2147483647
                state:
                  type: string
                  enum:
                  - pending
                  - inquiring
                  - resolved
                  - closed
                type:
                  type: string
                  enum:
                  - technical
                  - business
                issuer:
                  properties:
                    recipients:
                      type: array
                      items:
                        $ref: '#/components/schemas/helpdesk.Actor'
                  type: object
                receiver:
                  $ref: '#/components/schemas/helpdesk.Receiver'
                events:
                  type: string
                  readOnly: true
                rating:
                  type: string
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  readOnly: true
                feedback:
                  type: string
                  readOnly: true
              type: object
              description: Description of the *Case* model.
              required:
              - subject
              - description
              - type
              - receiver
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.Case'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
  /helpdesk/helpdesk/cases/{cases_id}/attachments:
    get:
      operationId: cases_attachments_list_listAttachments
      description: API to create Attachments.
      tags:
      - Helpdesk
      parameters:
      - name: cases_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - $ref: '#/components/parameters/helpdesk.RQL1000Pagination.limit'
      - $ref: '#/components/parameters/helpdesk.RQL1000Pagination.offset'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/helpdesk.Attachment'
          description: ''
          headers:
            Content-Range:
              $ref: '#/components/headers/Content-Range'
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
    post:
      operationId: cases_attachments_list_createAttachment
      description: API to create Attachments.
      tags:
      - Helpdesk
      parameters:
      - name: cases_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/helpdesk.Attachment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.Attachment'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
  /helpdesk/helpdesk/cases/{cases_id}/attachments/{id}:
    get:
      operationId: cases_attachments_detail_retrieveAttachment
      description: API to create Attachments.
      tags:
      - Helpdesk
      parameters:
      - name: cases_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique value identifying this attachment.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.Attachment'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
    delete:
      operationId: cases_attachments_detail_destroyAttachment
      description: API to create Attachments.
      tags:
      - Helpdesk
      parameters:
      - name: cases_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique value identifying this attachment.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /helpdesk/helpdesk/cases/{id}:
    get:
      operationId: cases_detail_retrieveCase
      description: API to create and manage Cases.
      tags:
      - Helpdesk
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this case.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.Case'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
    put:
      operationId: cases_detail_updateCase
      description: API to create and manage Cases.
      tags:
      - Helpdesk
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this case.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/helpdesk.Case'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.Case'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
  /helpdesk/helpdesk/cases/{id}/close:
    post:
      operationId: cases_close_postCloseCase
      description: API to create and manage Cases.
      tags:
      - Helpdesk
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this case.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                rating:
                  type: string
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                feedback:
                  type: string
              type: object
              description: Description of the *Case* model.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.Case'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
  /helpdesk/helpdesk/cases/{id}/inquire:
    post:
      operationId: cases_inquire_postInquireCase
      description: API to create and manage Cases.
      tags:
      - Helpdesk
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this case.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.Case'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
  /helpdesk/helpdesk/cases/{id}/pend:
    post:
      operationId: cases_pend_postPendCase
      description: API to create and manage Cases.
      tags:
      - Helpdesk
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this case.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.Case'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
  /helpdesk/helpdesk/cases/{id}/resolve:
    post:
      operationId: cases_resolve_postResolveCase
      description: API to create and manage Cases.
      tags:
      - Helpdesk
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this case.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.Case'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
  /helpdesk/modules/MD-0023/accounts/{account_id}/settings:
    get:
      operationId: MD_0023_account_retrieve_settings_getRetrieve_settingsAccountSettings
      description: API to create and manage Helpdesk Account Settings.
      tags:
      - Helpdesk
      parameters:
      - name: account_id
        in: path
        required: true
        description: A unique value identifying this Account Settings.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.AccountSettings'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
    put:
      operationId: MD_0023_account_retrieve_settings_putChange_settingsAccountSettings
      description: API to create and manage Helpdesk Account Settings.
      tags:
      - Helpdesk
      parameters:
      - name: account_id
        in: path
        required: true
        description: A unique value identifying this Account Settings.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/helpdesk.AccountSettings'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.AccountSettings'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
  /helpdesk/modules/helpdesk/accounts/{account_id}/settings:
    get:
      operationId: helpdesk_account_retrieve_settings_getRetrieve_settingsAccountSettings
      description: API to create and manage Helpdesk Account Settings.
      tags:
      - Helpdesk
      parameters:
      - name: account_id
        in: path
        required: true
        description: A unique value identifying this Account Settings.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.AccountSettings'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
    put:
      operationId: helpdesk_account_retrieve_settings_putChange_settingsAccountSettings
      description: API to create and manage Helpdesk Account Settings.
      tags:
      - Helpdesk
      parameters:
      - name: account_id
        in: path
        required: true
        description: A unique value identifying this Account Settings.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/helpdesk.AccountSettings'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helpdesk.AccountSettings'
          description: ''
        '400':
          $ref: '#/components/responses/helpdesk.any_400'
components:
  schemas:
    Account:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 64
        icon:
          type: string
          format: binary
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 512
        overview:
          type: string
          nullable: true
        headquarters:
          type: string
          nullable: true
          maxLength: 256
        type:
          type: string
          enum:
          - vendor
          - provider
        brand:
          type: string
          maxLength: 6
        external_id:
          type: string
          maxLength: 100
        sourcing:
          type: boolean
          description: This flag enables sourcing to other providers through catalog
        countries:
          type: array
          items: {}
          nullable: true
          description: 'Template (ISO 3166 Alpha 2: <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">List
            of codes</a>):<br>[<br>"GB",<br>"RU"<br>]'
        languages:
          type: array
          items:
            type: string
          nullable: true
          description: 'Template (ISO 639-3: <a href="https://en.wikipedia.org/wiki/Wikipedia:WikiProject_Languages/List_of_ISO_639-3_language_codes_(2019)">List
            of codes</a>):<br>[<br>"eng",<br>"rus"<br>]'
        websites:
          type: array
          items:
            type: string
          nullable: true
          description: Template:<br>[<br>"https://example.com",<br>"http://cloudblue.com/"<br>]
        industries:
          type: array
          items:
            $ref: '#/components/schemas/Industry'
        public:
          type: string
          nullable: true
          description: Flag to show Account data in public CB catalog.
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        permissions:
          type: object
          readOnly: true
      type: object
      required:
      - name
    AccountCreate:
      properties:
        id:
          type: string
          maxLength: 100
        name:
          type: string
          maxLength: 64
        icon:
          type: string
          format: binary
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 512
        overview:
          type: string
          nullable: true
        headquarters:
          type: string
          nullable: true
          maxLength: 256
        external_id:
          type: string
          maxLength: 100
        countries:
          type: array
          items: {}
          nullable: true
          description: 'Template (ISO 3166 Alpha 2: <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">List
            of codes</a>):<br>[<br>"GB",<br>"RU"<br>]'
        languages:
          type: array
          items:
            type: string
          nullable: true
          description: 'Template (ISO 639-3: <a href="https://en.wikipedia.org/wiki/Wikipedia:WikiProject_Languages/List_of_ISO_639-3_language_codes_(2019)">List
            of codes</a>):<br>[<br>"eng",<br>"rus"<br>]'
        websites:
          type: array
          items:
            type: string
          nullable: true
          description: Template:<br>[<br>"https://example.com",<br>"http://cloudblue.com/"<br>]
        industries:
          type: array
          items:
            $ref: '#/components/schemas/IdWrite'
        users:
          type: array
          items:
            $ref: '#/components/schemas/IdWrite'
      type: object
      required:
      - name
    AccountReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 64
        icon:
          type: string
          format: binary
          nullable: true
      type: object
      required:
      - name
    AccountUpdate:
      properties:
        id:
          type: string
          maxLength: 100
        name:
          type: string
          maxLength: 64
        icon:
          type: string
          format: binary
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 512
        overview:
          type: string
          nullable: true
        headquarters:
          type: string
          nullable: true
          maxLength: 256
        external_id:
          type: string
          maxLength: 100
        countries:
          type: array
          items: {}
          nullable: true
          description: 'Template (ISO 3166 Alpha 2: <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">List
            of codes</a>):<br>[<br>"GB",<br>"RU"<br>]'
        languages:
          type: array
          items:
            type: string
          nullable: true
          description: 'Template (ISO 639-3: <a href="https://en.wikipedia.org/wiki/Wikipedia:WikiProject_Languages/List_of_ISO_639-3_language_codes_(2019)">List
            of codes</a>):<br>[<br>"eng",<br>"rus"<br>]'
        websites:
          type: array
          items:
            type: string
          nullable: true
          description: Template:<br>[<br>"https://example.com",<br>"http://cloudblue.com/"<br>]
        industries:
          type: array
          items:
            $ref: '#/components/schemas/IdWrite'
        users:
          type: array
          items:
            $ref: '#/components/schemas/IdWrite'
        permissions:
          $ref: '#/components/schemas/_AccountPermissionsWrite'
      type: object
    AccountUser:
      properties:
        user:
          $ref: '#/components/schemas/User'
        status:
          type: string
        activation_code:
          type: string
          readOnly: true
        events:
          type: object
          properties:
            invited:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            activated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            signed:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupBase'
          readOnly: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/UserPermission'
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
      type: object
      description: Serializer for user representation in accounts.
      required:
      - user
      - status
    AccountUserCreate:
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupShortReference'
          minItems: 1
        tags:
          type: array
          items:
            $ref: '#/components/schemas/GroupShortReference'
      type: object
      required:
      - groups
    AccountUserUpdate:
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupShortReference'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/GroupShortReference'
      type: object
    Extension:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          description: 'Extension type (f.e. "zapier"): should be lowercase, without
            whitespace.'
          maxLength: 50
        icon:
          type: string
          format: binary
          nullable: true
        revision:
          type: integer
          readOnly: true
        subtitle:
          type: string
          nullable: true
          maxLength: 128
        description:
          type: string
          description: Extension type description (f.e. "Zapier Integration")
          maxLength: 255
        overview:
          type: string
          nullable: true
        constraints:
          type: object
          properties:
            account:
              type: object
              properties:
                tokens:
                  type: integer
          readOnly: true
        portal:
          type: string
          enum:
          - any
          - provider
          - vendor
          description: Extension applicability in Connect scope
        featured:
          type: boolean
        status:
          type: string
          enum:
          - draft
          - published
          - unrestricted
          description: Draft - private extension stub, Published - potentially supported
            public extension, Unrestricted - already developed public extension (f.e.
            Zapier)
        priority:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        websites:
          type: array
          items:
            type: string
          nullable: true
          description: Template:<br>[<br>"https://example.com",<br>"http://cloudblue.com/"<br>]
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionCategory'
        industries:
          type: array
          items:
            $ref: '#/components/schemas/Industry'
      type: object
      required:
      - name
      - description
    ExtensionCategory:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
      type: object
      required:
      - name
    ExtensionCreate:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          description: 'Extension type (f.e. "zapier"): should be lowercase, without
            whitespace.'
          maxLength: 50
        icon:
          type: string
          format: binary
          nullable: true
        revision:
          type: integer
          readOnly: true
        subtitle:
          type: string
          nullable: true
          maxLength: 128
        description:
          type: string
          description: Extension type description (f.e. "Zapier Integration")
          maxLength: 255
        overview:
          type: string
          nullable: true
        constraints:
          $ref: '#/components/schemas/_ExtensionConstraints'
        portal:
          type: string
          enum:
          - any
          - provider
          - vendor
          description: Extension applicability in Connect scope
        featured:
          type: boolean
        status:
          type: string
          enum:
          - draft
          - published
          - unrestricted
          description: Draft - private extension stub, Published - potentially supported
            public extension, Unrestricted - already developed public extension (f.e.
            Zapier)
        priority:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        websites:
          type: array
          items:
            type: string
          nullable: true
          description: Template:<br>[<br>"https://example.com",<br>"http://cloudblue.com/"<br>]
        categories:
          type: array
          items:
            $ref: '#/components/schemas/IdWrite'
        industries:
          type: array
          items:
            $ref: '#/components/schemas/IdWrite'
      type: object
      required:
      - name
      - description
    ExtensionReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          description: 'Extension type (f.e. "zapier"): should be lowercase, without
            whitespace.'
          maxLength: 50
        icon:
          type: string
          format: binary
          nullable: true
        revision:
          type: integer
          readOnly: true
      type: object
      required:
      - name
    ExtensionUpdate:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          description: 'Extension type (f.e. "zapier"): should be lowercase, without
            whitespace.'
          maxLength: 50
        icon:
          type: string
          format: binary
          nullable: true
        revision:
          type: integer
          readOnly: true
        subtitle:
          type: string
          nullable: true
          maxLength: 128
        description:
          type: string
          description: Extension type description (f.e. "Zapier Integration")
          maxLength: 255
        overview:
          type: string
          nullable: true
        constraints:
          $ref: '#/components/schemas/_ExtensionConstraints'
        portal:
          type: string
          enum:
          - any
          - provider
          - vendor
          description: Extension applicability in Connect scope
        featured:
          type: boolean
        status:
          type: string
          enum:
          - draft
          - published
          - unrestricted
          description: Draft - private extension stub, Published - potentially supported
            public extension, Unrestricted - already developed public extension (f.e.
            Zapier)
        priority:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        websites:
          type: array
          items:
            type: string
          nullable: true
          description: Template:<br>[<br>"https://example.com",<br>"http://cloudblue.com/"<br>]
        categories:
          type: array
          items:
            $ref: '#/components/schemas/IdWrite'
        industries:
          type: array
          items:
            $ref: '#/components/schemas/IdWrite'
      type: object
    Group:
      properties:
        id:
          type: string
        name:
          type: string
          maxLength: 32
        description:
          type: string
          maxLength: 512
        color:
          type: string
          nullable: true
          maxLength: 32
        external_id:
          type: string
          nullable: true
          maxLength: 64
        revision:
          type: integer
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            decommissioned:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        permissions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              object:
                type: object
                properties:
                  id:
                    type: string
              events:
                type: object
                properties:
                  granted:
                    type: object
                    properties:
                      at:
                        type: string
                        format: date-time
                      by:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
        stats:
          $ref: '#/components/schemas/GroupStats'
          readOnly: true
      type: object
      required:
      - id
      - name
      - description
      - revision
      - permissions
    GroupBase:
      properties:
        id:
          type: string
        name:
          type: string
          maxLength: 32
        description:
          type: string
          maxLength: 512
        color:
          type: string
          nullable: true
          maxLength: 32
        external_id:
          type: string
          nullable: true
          maxLength: 64
        revision:
          type: integer
      type: object
      required:
      - id
      - name
      - description
      - revision
    GroupCreate:
      properties:
        name:
          type: string
          maxLength: 32
        description:
          type: string
          maxLength: 512
        color:
          type: string
          nullable: true
          maxLength: 32
        external_id:
          type: string
          nullable: true
          maxLength: 64
      type: object
      required:
      - name
      - description
    GroupShortReference:
      properties:
        id:
          type: string
      type: object
      required:
      - id
    GroupStats:
      properties:
        users:
          type: integer
      type: object
      required:
      - users
    GroupUpdate:
      properties:
        name:
          type: string
          maxLength: 32
        description:
          type: string
          maxLength: 512
        color:
          type: string
          maxLength: 32
        external_id:
          type: string
          nullable: true
          maxLength: 64
      type: object
    GroupUserChangeMembership:
      properties:
        id:
          type: string
      type: object
      required:
      - id
    IdWrite:
      properties:
        id:
          type: string
          writeOnly: true
      type: object
      required:
      - id
    Industry:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
      type: object
      required:
      - name
    Module:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 32
      type: object
      required:
      - name
    PasswordChange:
      properties:
        old_password:
          type: string
          writeOnly: true
          maxLength: 64
        password:
          type: string
          writeOnly: true
          maxLength: 64
      type: object
      required:
      - old_password
      - password
    PermissionMerge:
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/PermissionObjectMerge'
      type: object
    PermissionObjectMerge:
      properties:
        id:
          type: string
      type: object
      required:
      - id
    SerializerCls:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 50
        position:
          type: integer
          maximum: 8
          minimum: 1
        type:
          type: string
          enum:
          - image
          - video
        thumbnail:
          type: string
          format: binary
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 500
        description:
          type: string
          nullable: true
          maxLength: 255
      type: object
      required:
      - position
      - thumbnail
    Tag:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 32
      type: object
      required:
      - name
    Token:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 128
        description:
          type: string
          nullable: true
          maxLength: 255
        external_id:
          type: string
          nullable: true
          maxLength: 128
        owner:
          $ref: '#/components/schemas/AccountReference'
        status:
          type: string
          enum:
          - pending
          - active
          - inactive
          - deleted
        extension:
          $ref: '#/components/schemas/ExtensionReference'
        handle:
          type: string
          readOnly: true
        token:
          type: string
          readOnly: true
        events:
          type: object
          properties: {}
          readOnly: true
      type: object
      required:
      - owner
      - extension
    TokenUpdate:
      properties:
        name:
          type: string
          maxLength: 128
        external_id:
          type: string
          nullable: true
          maxLength: 128
        description:
          type: string
          maxLength: 255
      type: object
    TokenWrite:
      properties:
        name:
          type: string
          maxLength: 128
        external_id:
          type: string
          nullable: true
          maxLength: 128
        extension:
          $ref: '#/components/schemas/_ExtensionWrite'
        description:
          type: string
          nullable: true
          maxLength: 255
        owner:
          $ref: '#/components/schemas/IdWrite'
      type: object
      required:
      - name
      - extension
    User:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 128
        active:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        notifications:
          type: boolean
        announcements:
          type: boolean
          description: Receive marketing news and announcements
        region:
          type: string
          enum:
          - af
          - af_NA
          - af_ZA
          - agq
          - agq_CM
          - ak
          - ak_GH
          - am
          - am_ET
          - ar
          - ar_001
          - ar_AE
          - ar_BH
          - ar_DJ
          - ar_DZ
          - ar_EG
          - ar_EH
          - ar_ER
          - ar_IL
          - ar_IQ
          - ar_JO
          - ar_KM
          - ar_KW
          - ar_LB
          - ar_LY
          - ar_MA
          - ar_MR
          - ar_OM
          - ar_PS
          - ar_QA
          - ar_SA
          - ar_SD
          - ar_SO
          - ar_SS
          - ar_SY
          - ar_TD
          - ar_TN
          - ar_YE
          - as
          - as_IN
          - asa
          - asa_TZ
          - ast
          - ast_ES
          - az
          - az_Cyrl
          - az_Cyrl_AZ
          - az_Latn
          - az_Latn_AZ
          - bas
          - bas_CM
          - be
          - be_BY
          - bem
          - bem_ZM
          - bez
          - bez_TZ
          - bg
          - bg_BG
          - bm
          - bm_ML
          - bn
          - bn_BD
          - bn_IN
          - bo
          - bo_CN
          - bo_IN
          - br
          - br_FR
          - brx
          - brx_IN
          - bs
          - bs_Cyrl
          - bs_Cyrl_BA
          - bs_Latn
          - bs_Latn_BA
          - ca
          - ca_AD
          - ca_ES
          - ca_ES_VALENCIA
          - ca_FR
          - ca_IT
          - ccp
          - ccp_BD
          - ccp_IN
          - ce
          - ce_RU
          - ceb
          - ceb_PH
          - cgg
          - cgg_UG
          - chr
          - chr_US
          - ckb
          - ckb_IQ
          - ckb_IR
          - cs
          - cs_CZ
          - cu
          - cu_RU
          - cy
          - cy_GB
          - da
          - da_DK
          - da_GL
          - dav
          - dav_KE
          - de
          - de_AT
          - de_BE
          - de_CH
          - de_DE
          - de_IT
          - de_LI
          - de_LU
          - dje
          - dje_NE
          - dsb
          - dsb_DE
          - dua
          - dua_CM
          - dyo
          - dyo_SN
          - dz
          - dz_BT
          - ebu
          - ebu_KE
          - ee
          - ee_GH
          - ee_TG
          - el
          - el_CY
          - el_GR
          - en
          - en_001
          - en_150
          - en_AE
          - en_AG
          - en_AI
          - en_AS
          - en_AT
          - en_AU
          - en_BB
          - en_BE
          - en_BI
          - en_BM
          - en_BS
          - en_BW
          - en_BZ
          - en_CA
          - en_CC
          - en_CH
          - en_CK
          - en_CM
          - en_CX
          - en_CY
          - en_DE
          - en_DG
          - en_DK
          - en_DM
          - en_ER
          - en_FI
          - en_FJ
          - en_FK
          - en_FM
          - en_GB
          - en_GD
          - en_GG
          - en_GH
          - en_GI
          - en_GM
          - en_GU
          - en_GY
          - en_HK
          - en_IE
          - en_IL
          - en_IM
          - en_IN
          - en_IO
          - en_JE
          - en_JM
          - en_KE
          - en_KI
          - en_KN
          - en_KY
          - en_LC
          - en_LR
          - en_LS
          - en_MG
          - en_MH
          - en_MO
          - en_MP
          - en_MS
          - en_MT
          - en_MU
          - en_MW
          - en_MY
          - en_NA
          - en_NF
          - en_NG
          - en_NL
          - en_NR
          - en_NU
          - en_NZ
          - en_PG
          - en_PH
          - en_PK
          - en_PN
          - en_PR
          - en_PW
          - en_RW
          - en_SB
          - en_SC
          - en_SD
          - en_SE
          - en_SG
          - en_SH
          - en_SI
          - en_SL
          - en_SS
          - en_SX
          - en_SZ
          - en_TC
          - en_TK
          - en_TO
          - en_TT
          - en_TV
          - en_TZ
          - en_UG
          - en_UM
          - en_US
          - en_US_POSIX
          - en_VC
          - en_VG
          - en_VI
          - en_VU
          - en_WS
          - en_ZA
          - en_ZM
          - en_ZW
          - eo
          - eo_001
          - es
          - es_419
          - es_AR
          - es_BO
          - es_BR
          - es_BZ
          - es_CL
          - es_CO
          - es_CR
          - es_CU
          - es_DO
          - es_EA
          - es_EC
          - es_ES
          - es_GQ
          - es_GT
          - es_HN
          - es_IC
          - es_MX
          - es_NI
          - es_PA
          - es_PE
          - es_PH
          - es_PR
          - es_PY
          - es_SV
          - es_US
          - es_UY
          - es_VE
          - et
          - et_EE
          - eu
          - eu_ES
          - ewo
          - ewo_CM
          - fa
          - fa_AF
          - fa_IR
          - ff
          - ff_Adlm
          - ff_Adlm_BF
          - ff_Adlm_CM
          - ff_Adlm_GH
          - ff_Adlm_GM
          - ff_Adlm_GN
          - ff_Adlm_GW
          - ff_Adlm_LR
          - ff_Adlm_MR
          - ff_Adlm_NE
          - ff_Adlm_NG
          - ff_Adlm_SL
          - ff_Adlm_SN
          - ff_Latn
          - ff_Latn_BF
          - ff_Latn_CM
          - ff_Latn_GH
          - ff_Latn_GM
          - ff_Latn_GN
          - ff_Latn_GW
          - ff_Latn_LR
          - ff_Latn_MR
          - ff_Latn_NE
          - ff_Latn_NG
          - ff_Latn_SL
          - ff_Latn_SN
          - fi
          - fi_FI
          - fil
          - fil_PH
          - fo
          - fo_DK
          - fo_FO
          - fr
          - fr_BE
          - fr_BF
          - fr_BI
          - fr_BJ
          - fr_BL
          - fr_CA
          - fr_CD
          - fr_CF
          - fr_CG
          - fr_CH
          - fr_CI
          - fr_CM
          - fr_DJ
          - fr_DZ
          - fr_FR
          - fr_GA
          - fr_GF
          - fr_GN
          - fr_GP
          - fr_GQ
          - fr_HT
          - fr_KM
          - fr_LU
          - fr_MA
          - fr_MC
          - fr_MF
          - fr_MG
          - fr_ML
          - fr_MQ
          - fr_MR
          - fr_MU
          - fr_NC
          - fr_NE
          - fr_PF
          - fr_PM
          - fr_RE
          - fr_RW
          - fr_SC
          - fr_SN
          - fr_SY
          - fr_TD
          - fr_TG
          - fr_TN
          - fr_VU
          - fr_WF
          - fr_YT
          - fur
          - fur_IT
          - fy
          - fy_NL
          - ga
          - ga_GB
          - ga_IE
          - gd
          - gd_GB
          - gl
          - gl_ES
          - gsw
          - gsw_CH
          - gsw_FR
          - gsw_LI
          - gu
          - gu_IN
          - guz
          - guz_KE
          - gv
          - gv_IM
          - ha
          - ha_GH
          - ha_NE
          - ha_NG
          - haw
          - haw_US
          - he
          - he_IL
          - hi
          - hi_IN
          - hr
          - hr_BA
          - hr_HR
          - hsb
          - hsb_DE
          - hu
          - hu_HU
          - hy
          - hy_AM
          - ia
          - ia_001
          - id
          - id_ID
          - ig
          - ig_NG
          - ii
          - ii_CN
          - is
          - is_IS
          - it
          - it_CH
          - it_IT
          - it_SM
          - it_VA
          - ja
          - ja_JP
          - jgo
          - jgo_CM
          - jmc
          - jmc_TZ
          - jv
          - jv_ID
          - ka
          - ka_GE
          - kab
          - kab_DZ
          - kam
          - kam_KE
          - kde
          - kde_TZ
          - kea
          - kea_CV
          - khq
          - khq_ML
          - ki
          - ki_KE
          - kk
          - kk_KZ
          - kkj
          - kkj_CM
          - kl
          - kl_GL
          - kln
          - kln_KE
          - km
          - km_KH
          - kn
          - kn_IN
          - ko
          - ko_KP
          - ko_KR
          - kok
          - kok_IN
          - ks
          - ks_Arab
          - ks_Arab_IN
          - ksb
          - ksb_TZ
          - ksf
          - ksf_CM
          - ksh
          - ksh_DE
          - ku
          - ku_TR
          - kw
          - kw_GB
          - ky
          - ky_KG
          - lag
          - lag_TZ
          - lb
          - lb_LU
          - lg
          - lg_UG
          - lkt
          - lkt_US
          - ln
          - ln_AO
          - ln_CD
          - ln_CF
          - ln_CG
          - lo
          - lo_LA
          - lrc
          - lrc_IQ
          - lrc_IR
          - lt
          - lt_LT
          - lu
          - lu_CD
          - luo
          - luo_KE
          - luy
          - luy_KE
          - lv
          - lv_LV
          - mai
          - mai_IN
          - mas
          - mas_KE
          - mas_TZ
          - mer
          - mer_KE
          - mfe
          - mfe_MU
          - mg
          - mg_MG
          - mgh
          - mgh_MZ
          - mgo
          - mgo_CM
          - mi
          - mi_NZ
          - mk
          - mk_MK
          - ml
          - ml_IN
          - mn
          - mn_MN
          - mni
          - mni_Beng
          - mni_Beng_IN
          - mr
          - mr_IN
          - ms
          - ms_BN
          - ms_ID
          - ms_MY
          - ms_SG
          - mt
          - mt_MT
          - mua
          - mua_CM
          - my
          - my_MM
          - mzn
          - mzn_IR
          - naq
          - naq_NA
          - nb
          - nb_NO
          - nb_SJ
          - nd
          - nd_ZW
          - nds
          - nds_DE
          - nds_NL
          - ne
          - ne_IN
          - ne_NP
          - nl
          - nl_AW
          - nl_BE
          - nl_BQ
          - nl_CW
          - nl_NL
          - nl_SR
          - nl_SX
          - nmg
          - nmg_CM
          - nn
          - nn_NO
          - nnh
          - nnh_CM
          - nus
          - nus_SS
          - nyn
          - nyn_UG
          - om
          - om_ET
          - om_KE
          - or
          - or_IN
          - os
          - os_GE
          - os_RU
          - pa
          - pa_Arab
          - pa_Arab_PK
          - pa_Guru
          - pa_Guru_IN
          - pcm
          - pcm_NG
          - pl
          - pl_PL
          - prg
          - prg_001
          - ps
          - ps_AF
          - ps_PK
          - pt
          - pt_AO
          - pt_BR
          - pt_CH
          - pt_CV
          - pt_GQ
          - pt_GW
          - pt_LU
          - pt_MO
          - pt_MZ
          - pt_PT
          - pt_ST
          - pt_TL
          - qu
          - qu_BO
          - qu_EC
          - qu_PE
          - rm
          - rm_CH
          - rn
          - rn_BI
          - ro
          - ro_MD
          - ro_RO
          - rof
          - rof_TZ
          - ru
          - ru_BY
          - ru_KG
          - ru_KZ
          - ru_MD
          - ru_RU
          - ru_UA
          - rw
          - rw_RW
          - rwk
          - rwk_TZ
          - sah
          - sah_RU
          - saq
          - saq_KE
          - sat
          - sat_Olck
          - sat_Olck_IN
          - sbp
          - sbp_TZ
          - sd
          - sd_Arab
          - sd_Arab_PK
          - sd_Deva
          - sd_Deva_IN
          - se
          - se_FI
          - se_NO
          - se_SE
          - seh
          - seh_MZ
          - ses
          - ses_ML
          - sg
          - sg_CF
          - shi
          - shi_Latn
          - shi_Latn_MA
          - shi_Tfng
          - shi_Tfng_MA
          - si
          - si_LK
          - sk
          - sk_SK
          - sl
          - sl_SI
          - smn
          - smn_FI
          - sn
          - sn_ZW
          - so
          - so_DJ
          - so_ET
          - so_KE
          - so_SO
          - sq
          - sq_AL
          - sq_MK
          - sq_XK
          - sr
          - sr_Cyrl
          - sr_Cyrl_BA
          - sr_Cyrl_ME
          - sr_Cyrl_RS
          - sr_Cyrl_XK
          - sr_Latn
          - sr_Latn_BA
          - sr_Latn_ME
          - sr_Latn_RS
          - sr_Latn_XK
          - su
          - su_Latn
          - su_Latn_ID
          - sv
          - sv_AX
          - sv_FI
          - sv_SE
          - sw
          - sw_CD
          - sw_KE
          - sw_TZ
          - sw_UG
          - ta
          - ta_IN
          - ta_LK
          - ta_MY
          - ta_SG
          - te
          - te_IN
          - teo
          - teo_KE
          - teo_UG
          - tg
          - tg_TJ
          - th
          - th_TH
          - ti
          - ti_ER
          - ti_ET
          - tk
          - tk_TM
          - to
          - to_TO
          - tr
          - tr_CY
          - tr_TR
          - tt
          - tt_RU
          - twq
          - twq_NE
          - tzm
          - tzm_MA
          - ug
          - ug_CN
          - uk
          - uk_UA
          - ur
          - ur_IN
          - ur_PK
          - uz
          - uz_Arab
          - uz_Arab_AF
          - uz_Cyrl
          - uz_Cyrl_UZ
          - uz_Latn
          - uz_Latn_UZ
          - vai
          - vai_Latn
          - vai_Latn_LR
          - vai_Vaii
          - vai_Vaii_LR
          - vi
          - vi_VN
          - vo
          - vo_001
          - vun
          - vun_TZ
          - wae
          - wae_CH
          - wo
          - wo_SN
          - xh
          - xh_ZA
          - xog
          - xog_UG
          - yav
          - yav_CM
          - yi
          - yi_001
          - yo
          - yo_BJ
          - yo_NG
          - yue
          - yue_Hans
          - yue_Hans_CN
          - yue_Hant
          - yue_Hant_HK
          - zgh
          - zgh_MA
          - zh
          - zh_Hans
          - zh_Hans_CN
          - zh_Hans_HK
          - zh_Hans_MO
          - zh_Hans_SG
          - zh_Hant
          - zh_Hant_HK
          - zh_Hant_MO
          - zh_Hant_TW
          - zu
          - zu_ZA
        timeformat:
          type: string
          readOnly: true
        timezone:
          type: string
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            signed:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
      description: Serializer for full user representation with custom 'events'
      required:
      - email
      - notifications
      - timezone
    UserCreate:
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        name:
          type: string
          maxLength: 128
        region:
          type: string
          enum:
          - af
          - af_NA
          - af_ZA
          - agq
          - agq_CM
          - ak
          - ak_GH
          - am
          - am_ET
          - ar
          - ar_001
          - ar_AE
          - ar_BH
          - ar_DJ
          - ar_DZ
          - ar_EG
          - ar_EH
          - ar_ER
          - ar_IL
          - ar_IQ
          - ar_JO
          - ar_KM
          - ar_KW
          - ar_LB
          - ar_LY
          - ar_MA
          - ar_MR
          - ar_OM
          - ar_PS
          - ar_QA
          - ar_SA
          - ar_SD
          - ar_SO
          - ar_SS
          - ar_SY
          - ar_TD
          - ar_TN
          - ar_YE
          - as
          - as_IN
          - asa
          - asa_TZ
          - ast
          - ast_ES
          - az
          - az_Cyrl
          - az_Cyrl_AZ
          - az_Latn
          - az_Latn_AZ
          - bas
          - bas_CM
          - be
          - be_BY
          - bem
          - bem_ZM
          - bez
          - bez_TZ
          - bg
          - bg_BG
          - bm
          - bm_ML
          - bn
          - bn_BD
          - bn_IN
          - bo
          - bo_CN
          - bo_IN
          - br
          - br_FR
          - brx
          - brx_IN
          - bs
          - bs_Cyrl
          - bs_Cyrl_BA
          - bs_Latn
          - bs_Latn_BA
          - ca
          - ca_AD
          - ca_ES
          - ca_ES_VALENCIA
          - ca_FR
          - ca_IT
          - ccp
          - ccp_BD
          - ccp_IN
          - ce
          - ce_RU
          - ceb
          - ceb_PH
          - cgg
          - cgg_UG
          - chr
          - chr_US
          - ckb
          - ckb_IQ
          - ckb_IR
          - cs
          - cs_CZ
          - cu
          - cu_RU
          - cy
          - cy_GB
          - da
          - da_DK
          - da_GL
          - dav
          - dav_KE
          - de
          - de_AT
          - de_BE
          - de_CH
          - de_DE
          - de_IT
          - de_LI
          - de_LU
          - dje
          - dje_NE
          - dsb
          - dsb_DE
          - dua
          - dua_CM
          - dyo
          - dyo_SN
          - dz
          - dz_BT
          - ebu
          - ebu_KE
          - ee
          - ee_GH
          - ee_TG
          - el
          - el_CY
          - el_GR
          - en
          - en_001
          - en_150
          - en_AE
          - en_AG
          - en_AI
          - en_AS
          - en_AT
          - en_AU
          - en_BB
          - en_BE
          - en_BI
          - en_BM
          - en_BS
          - en_BW
          - en_BZ
          - en_CA
          - en_CC
          - en_CH
          - en_CK
          - en_CM
          - en_CX
          - en_CY
          - en_DE
          - en_DG
          - en_DK
          - en_DM
          - en_ER
          - en_FI
          - en_FJ
          - en_FK
          - en_FM
          - en_GB
          - en_GD
          - en_GG
          - en_GH
          - en_GI
          - en_GM
          - en_GU
          - en_GY
          - en_HK
          - en_IE
          - en_IL
          - en_IM
          - en_IN
          - en_IO
          - en_JE
          - en_JM
          - en_KE
          - en_KI
          - en_KN
          - en_KY
          - en_LC
          - en_LR
          - en_LS
          - en_MG
          - en_MH
          - en_MO
          - en_MP
          - en_MS
          - en_MT
          - en_MU
          - en_MW
          - en_MY
          - en_NA
          - en_NF
          - en_NG
          - en_NL
          - en_NR
          - en_NU
          - en_NZ
          - en_PG
          - en_PH
          - en_PK
          - en_PN
          - en_PR
          - en_PW
          - en_RW
          - en_SB
          - en_SC
          - en_SD
          - en_SE
          - en_SG
          - en_SH
          - en_SI
          - en_SL
          - en_SS
          - en_SX
          - en_SZ
          - en_TC
          - en_TK
          - en_TO
          - en_TT
          - en_TV
          - en_TZ
          - en_UG
          - en_UM
          - en_US
          - en_US_POSIX
          - en_VC
          - en_VG
          - en_VI
          - en_VU
          - en_WS
          - en_ZA
          - en_ZM
          - en_ZW
          - eo
          - eo_001
          - es
          - es_419
          - es_AR
          - es_BO
          - es_BR
          - es_BZ
          - es_CL
          - es_CO
          - es_CR
          - es_CU
          - es_DO
          - es_EA
          - es_EC
          - es_ES
          - es_GQ
          - es_GT
          - es_HN
          - es_IC
          - es_MX
          - es_NI
          - es_PA
          - es_PE
          - es_PH
          - es_PR
          - es_PY
          - es_SV
          - es_US
          - es_UY
          - es_VE
          - et
          - et_EE
          - eu
          - eu_ES
          - ewo
          - ewo_CM
          - fa
          - fa_AF
          - fa_IR
          - ff
          - ff_Adlm
          - ff_Adlm_BF
          - ff_Adlm_CM
          - ff_Adlm_GH
          - ff_Adlm_GM
          - ff_Adlm_GN
          - ff_Adlm_GW
          - ff_Adlm_LR
          - ff_Adlm_MR
          - ff_Adlm_NE
          - ff_Adlm_NG
          - ff_Adlm_SL
          - ff_Adlm_SN
          - ff_Latn
          - ff_Latn_BF
          - ff_Latn_CM
          - ff_Latn_GH
          - ff_Latn_GM
          - ff_Latn_GN
          - ff_Latn_GW
          - ff_Latn_LR
          - ff_Latn_MR
          - ff_Latn_NE
          - ff_Latn_NG
          - ff_Latn_SL
          - ff_Latn_SN
          - fi
          - fi_FI
          - fil
          - fil_PH
          - fo
          - fo_DK
          - fo_FO
          - fr
          - fr_BE
          - fr_BF
          - fr_BI
          - fr_BJ
          - fr_BL
          - fr_CA
          - fr_CD
          - fr_CF
          - fr_CG
          - fr_CH
          - fr_CI
          - fr_CM
          - fr_DJ
          - fr_DZ
          - fr_FR
          - fr_GA
          - fr_GF
          - fr_GN
          - fr_GP
          - fr_GQ
          - fr_HT
          - fr_KM
          - fr_LU
          - fr_MA
          - fr_MC
          - fr_MF
          - fr_MG
          - fr_ML
          - fr_MQ
          - fr_MR
          - fr_MU
          - fr_NC
          - fr_NE
          - fr_PF
          - fr_PM
          - fr_RE
          - fr_RW
          - fr_SC
          - fr_SN
          - fr_SY
          - fr_TD
          - fr_TG
          - fr_TN
          - fr_VU
          - fr_WF
          - fr_YT
          - fur
          - fur_IT
          - fy
          - fy_NL
          - ga
          - ga_GB
          - ga_IE
          - gd
          - gd_GB
          - gl
          - gl_ES
          - gsw
          - gsw_CH
          - gsw_FR
          - gsw_LI
          - gu
          - gu_IN
          - guz
          - guz_KE
          - gv
          - gv_IM
          - ha
          - ha_GH
          - ha_NE
          - ha_NG
          - haw
          - haw_US
          - he
          - he_IL
          - hi
          - hi_IN
          - hr
          - hr_BA
          - hr_HR
          - hsb
          - hsb_DE
          - hu
          - hu_HU
          - hy
          - hy_AM
          - ia
          - ia_001
          - id
          - id_ID
          - ig
          - ig_NG
          - ii
          - ii_CN
          - is
          - is_IS
          - it
          - it_CH
          - it_IT
          - it_SM
          - it_VA
          - ja
          - ja_JP
          - jgo
          - jgo_CM
          - jmc
          - jmc_TZ
          - jv
          - jv_ID
          - ka
          - ka_GE
          - kab
          - kab_DZ
          - kam
          - kam_KE
          - kde
          - kde_TZ
          - kea
          - kea_CV
          - khq
          - khq_ML
          - ki
          - ki_KE
          - kk
          - kk_KZ
          - kkj
          - kkj_CM
          - kl
          - kl_GL
          - kln
          - kln_KE
          - km
          - km_KH
          - kn
          - kn_IN
          - ko
          - ko_KP
          - ko_KR
          - kok
          - kok_IN
          - ks
          - ks_Arab
          - ks_Arab_IN
          - ksb
          - ksb_TZ
          - ksf
          - ksf_CM
          - ksh
          - ksh_DE
          - ku
          - ku_TR
          - kw
          - kw_GB
          - ky
          - ky_KG
          - lag
          - lag_TZ
          - lb
          - lb_LU
          - lg
          - lg_UG
          - lkt
          - lkt_US
          - ln
          - ln_AO
          - ln_CD
          - ln_CF
          - ln_CG
          - lo
          - lo_LA
          - lrc
          - lrc_IQ
          - lrc_IR
          - lt
          - lt_LT
          - lu
          - lu_CD
          - luo
          - luo_KE
          - luy
          - luy_KE
          - lv
          - lv_LV
          - mai
          - mai_IN
          - mas
          - mas_KE
          - mas_TZ
          - mer
          - mer_KE
          - mfe
          - mfe_MU
          - mg
          - mg_MG
          - mgh
          - mgh_MZ
          - mgo
          - mgo_CM
          - mi
          - mi_NZ
          - mk
          - mk_MK
          - ml
          - ml_IN
          - mn
          - mn_MN
          - mni
          - mni_Beng
          - mni_Beng_IN
          - mr
          - mr_IN
          - ms
          - ms_BN
          - ms_ID
          - ms_MY
          - ms_SG
          - mt
          - mt_MT
          - mua
          - mua_CM
          - my
          - my_MM
          - mzn
          - mzn_IR
          - naq
          - naq_NA
          - nb
          - nb_NO
          - nb_SJ
          - nd
          - nd_ZW
          - nds
          - nds_DE
          - nds_NL
          - ne
          - ne_IN
          - ne_NP
          - nl
          - nl_AW
          - nl_BE
          - nl_BQ
          - nl_CW
          - nl_NL
          - nl_SR
          - nl_SX
          - nmg
          - nmg_CM
          - nn
          - nn_NO
          - nnh
          - nnh_CM
          - nus
          - nus_SS
          - nyn
          - nyn_UG
          - om
          - om_ET
          - om_KE
          - or
          - or_IN
          - os
          - os_GE
          - os_RU
          - pa
          - pa_Arab
          - pa_Arab_PK
          - pa_Guru
          - pa_Guru_IN
          - pcm
          - pcm_NG
          - pl
          - pl_PL
          - prg
          - prg_001
          - ps
          - ps_AF
          - ps_PK
          - pt
          - pt_AO
          - pt_BR
          - pt_CH
          - pt_CV
          - pt_GQ
          - pt_GW
          - pt_LU
          - pt_MO
          - pt_MZ
          - pt_PT
          - pt_ST
          - pt_TL
          - qu
          - qu_BO
          - qu_EC
          - qu_PE
          - rm
          - rm_CH
          - rn
          - rn_BI
          - ro
          - ro_MD
          - ro_RO
          - rof
          - rof_TZ
          - ru
          - ru_BY
          - ru_KG
          - ru_KZ
          - ru_MD
          - ru_RU
          - ru_UA
          - rw
          - rw_RW
          - rwk
          - rwk_TZ
          - sah
          - sah_RU
          - saq
          - saq_KE
          - sat
          - sat_Olck
          - sat_Olck_IN
          - sbp
          - sbp_TZ
          - sd
          - sd_Arab
          - sd_Arab_PK
          - sd_Deva
          - sd_Deva_IN
          - se
          - se_FI
          - se_NO
          - se_SE
          - seh
          - seh_MZ
          - ses
          - ses_ML
          - sg
          - sg_CF
          - shi
          - shi_Latn
          - shi_Latn_MA
          - shi_Tfng
          - shi_Tfng_MA
          - si
          - si_LK
          - sk
          - sk_SK
          - sl
          - sl_SI
          - smn
          - smn_FI
          - sn
          - sn_ZW
          - so
          - so_DJ
          - so_ET
          - so_KE
          - so_SO
          - sq
          - sq_AL
          - sq_MK
          - sq_XK
          - sr
          - sr_Cyrl
          - sr_Cyrl_BA
          - sr_Cyrl_ME
          - sr_Cyrl_RS
          - sr_Cyrl_XK
          - sr_Latn
          - sr_Latn_BA
          - sr_Latn_ME
          - sr_Latn_RS
          - sr_Latn_XK
          - su
          - su_Latn
          - su_Latn_ID
          - sv
          - sv_AX
          - sv_FI
          - sv_SE
          - sw
          - sw_CD
          - sw_KE
          - sw_TZ
          - sw_UG
          - ta
          - ta_IN
          - ta_LK
          - ta_MY
          - ta_SG
          - te
          - te_IN
          - teo
          - teo_KE
          - teo_UG
          - tg
          - tg_TJ
          - th
          - th_TH
          - ti
          - ti_ER
          - ti_ET
          - tk
          - tk_TM
          - to
          - to_TO
          - tr
          - tr_CY
          - tr_TR
          - tt
          - tt_RU
          - twq
          - twq_NE
          - tzm
          - tzm_MA
          - ug
          - ug_CN
          - uk
          - uk_UA
          - ur
          - ur_IN
          - ur_PK
          - uz
          - uz_Arab
          - uz_Arab_AF
          - uz_Cyrl
          - uz_Cyrl_UZ
          - uz_Latn
          - uz_Latn_UZ
          - vai
          - vai_Latn
          - vai_Latn_LR
          - vai_Vaii
          - vai_Vaii_LR
          - vi
          - vi_VN
          - vo
          - vo_001
          - vun
          - vun_TZ
          - wae
          - wae_CH
          - wo
          - wo_SN
          - xh
          - xh_ZA
          - xog
          - xog_UG
          - yav
          - yav_CM
          - yi
          - yi_001
          - yo
          - yo_BJ
          - yo_NG
          - yue
          - yue_Hans
          - yue_Hans_CN
          - yue_Hant
          - yue_Hant_HK
          - zgh
          - zgh_MA
          - zh
          - zh_Hans
          - zh_Hans_CN
          - zh_Hans_HK
          - zh_Hans_MO
          - zh_Hans_SG
          - zh_Hant
          - zh_Hant_HK
          - zh_Hant_MO
          - zh_Hant_TW
          - zu
          - zu_ZA
        timezone:
          type: string
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GMT
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - US/Alaska
          - US/Arizona
          - US/Central
          - US/Eastern
          - US/Hawaii
          - US/Mountain
          - US/Pacific
          - UTC
        timeformat:
          type: string
        notifications:
          type: boolean
        announcements:
          type: boolean
          description: Receive marketing news and announcements
      type: object
      required:
      - email
      - name
    UserPermission:
      properties:
        id:
          type: string
        object:
          $ref: '#/components/schemas/UserPermissionObject'
      type: object
      required:
      - id
      - object
    UserPermissionObject:
      properties:
        id:
          type: string
      type: object
      required:
      - id
    UserUpdate:
      properties:
        name:
          type: string
          nullable: true
          maxLength: 128
        region:
          type: string
          enum:
          - af
          - af_NA
          - af_ZA
          - agq
          - agq_CM
          - ak
          - ak_GH
          - am
          - am_ET
          - ar
          - ar_001
          - ar_AE
          - ar_BH
          - ar_DJ
          - ar_DZ
          - ar_EG
          - ar_EH
          - ar_ER
          - ar_IL
          - ar_IQ
          - ar_JO
          - ar_KM
          - ar_KW
          - ar_LB
          - ar_LY
          - ar_MA
          - ar_MR
          - ar_OM
          - ar_PS
          - ar_QA
          - ar_SA
          - ar_SD
          - ar_SO
          - ar_SS
          - ar_SY
          - ar_TD
          - ar_TN
          - ar_YE
          - as
          - as_IN
          - asa
          - asa_TZ
          - ast
          - ast_ES
          - az
          - az_Cyrl
          - az_Cyrl_AZ
          - az_Latn
          - az_Latn_AZ
          - bas
          - bas_CM
          - be
          - be_BY
          - bem
          - bem_ZM
          - bez
          - bez_TZ
          - bg
          - bg_BG
          - bm
          - bm_ML
          - bn
          - bn_BD
          - bn_IN
          - bo
          - bo_CN
          - bo_IN
          - br
          - br_FR
          - brx
          - brx_IN
          - bs
          - bs_Cyrl
          - bs_Cyrl_BA
          - bs_Latn
          - bs_Latn_BA
          - ca
          - ca_AD
          - ca_ES
          - ca_ES_VALENCIA
          - ca_FR
          - ca_IT
          - ccp
          - ccp_BD
          - ccp_IN
          - ce
          - ce_RU
          - ceb
          - ceb_PH
          - cgg
          - cgg_UG
          - chr
          - chr_US
          - ckb
          - ckb_IQ
          - ckb_IR
          - cs
          - cs_CZ
          - cu
          - cu_RU
          - cy
          - cy_GB
          - da
          - da_DK
          - da_GL
          - dav
          - dav_KE
          - de
          - de_AT
          - de_BE
          - de_CH
          - de_DE
          - de_IT
          - de_LI
          - de_LU
          - dje
          - dje_NE
          - dsb
          - dsb_DE
          - dua
          - dua_CM
          - dyo
          - dyo_SN
          - dz
          - dz_BT
          - ebu
          - ebu_KE
          - ee
          - ee_GH
          - ee_TG
          - el
          - el_CY
          - el_GR
          - en
          - en_001
          - en_150
          - en_AE
          - en_AG
          - en_AI
          - en_AS
          - en_AT
          - en_AU
          - en_BB
          - en_BE
          - en_BI
          - en_BM
          - en_BS
          - en_BW
          - en_BZ
          - en_CA
          - en_CC
          - en_CH
          - en_CK
          - en_CM
          - en_CX
          - en_CY
          - en_DE
          - en_DG
          - en_DK
          - en_DM
          - en_ER
          - en_FI
          - en_FJ
          - en_FK
          - en_FM
          - en_GB
          - en_GD
          - en_GG
          - en_GH
          - en_GI
          - en_GM
          - en_GU
          - en_GY
          - en_HK
          - en_IE
          - en_IL
          - en_IM
          - en_IN
          - en_IO
          - en_JE
          - en_JM
          - en_KE
          - en_KI
          - en_KN
          - en_KY
          - en_LC
          - en_LR
          - en_LS
          - en_MG
          - en_MH
          - en_MO
          - en_MP
          - en_MS
          - en_MT
          - en_MU
          - en_MW
          - en_MY
          - en_NA
          - en_NF
          - en_NG
          - en_NL
          - en_NR
          - en_NU
          - en_NZ
          - en_PG
          - en_PH
          - en_PK
          - en_PN
          - en_PR
          - en_PW
          - en_RW
          - en_SB
          - en_SC
          - en_SD
          - en_SE
          - en_SG
          - en_SH
          - en_SI
          - en_SL
          - en_SS
          - en_SX
          - en_SZ
          - en_TC
          - en_TK
          - en_TO
          - en_TT
          - en_TV
          - en_TZ
          - en_UG
          - en_UM
          - en_US
          - en_US_POSIX
          - en_VC
          - en_VG
          - en_VI
          - en_VU
          - en_WS
          - en_ZA
          - en_ZM
          - en_ZW
          - eo
          - eo_001
          - es
          - es_419
          - es_AR
          - es_BO
          - es_BR
          - es_BZ
          - es_CL
          - es_CO
          - es_CR
          - es_CU
          - es_DO
          - es_EA
          - es_EC
          - es_ES
          - es_GQ
          - es_GT
          - es_HN
          - es_IC
          - es_MX
          - es_NI
          - es_PA
          - es_PE
          - es_PH
          - es_PR
          - es_PY
          - es_SV
          - es_US
          - es_UY
          - es_VE
          - et
          - et_EE
          - eu
          - eu_ES
          - ewo
          - ewo_CM
          - fa
          - fa_AF
          - fa_IR
          - ff
          - ff_Adlm
          - ff_Adlm_BF
          - ff_Adlm_CM
          - ff_Adlm_GH
          - ff_Adlm_GM
          - ff_Adlm_GN
          - ff_Adlm_GW
          - ff_Adlm_LR
          - ff_Adlm_MR
          - ff_Adlm_NE
          - ff_Adlm_NG
          - ff_Adlm_SL
          - ff_Adlm_SN
          - ff_Latn
          - ff_Latn_BF
          - ff_Latn_CM
          - ff_Latn_GH
          - ff_Latn_GM
          - ff_Latn_GN
          - ff_Latn_GW
          - ff_Latn_LR
          - ff_Latn_MR
          - ff_Latn_NE
          - ff_Latn_NG
          - ff_Latn_SL
          - ff_Latn_SN
          - fi
          - fi_FI
          - fil
          - fil_PH
          - fo
          - fo_DK
          - fo_FO
          - fr
          - fr_BE
          - fr_BF
          - fr_BI
          - fr_BJ
          - fr_BL
          - fr_CA
          - fr_CD
          - fr_CF
          - fr_CG
          - fr_CH
          - fr_CI
          - fr_CM
          - fr_DJ
          - fr_DZ
          - fr_FR
          - fr_GA
          - fr_GF
          - fr_GN
          - fr_GP
          - fr_GQ
          - fr_HT
          - fr_KM
          - fr_LU
          - fr_MA
          - fr_MC
          - fr_MF
          - fr_MG
          - fr_ML
          - fr_MQ
          - fr_MR
          - fr_MU
          - fr_NC
          - fr_NE
          - fr_PF
          - fr_PM
          - fr_RE
          - fr_RW
          - fr_SC
          - fr_SN
          - fr_SY
          - fr_TD
          - fr_TG
          - fr_TN
          - fr_VU
          - fr_WF
          - fr_YT
          - fur
          - fur_IT
          - fy
          - fy_NL
          - ga
          - ga_GB
          - ga_IE
          - gd
          - gd_GB
          - gl
          - gl_ES
          - gsw
          - gsw_CH
          - gsw_FR
          - gsw_LI
          - gu
          - gu_IN
          - guz
          - guz_KE
          - gv
          - gv_IM
          - ha
          - ha_GH
          - ha_NE
          - ha_NG
          - haw
          - haw_US
          - he
          - he_IL
          - hi
          - hi_IN
          - hr
          - hr_BA
          - hr_HR
          - hsb
          - hsb_DE
          - hu
          - hu_HU
          - hy
          - hy_AM
          - ia
          - ia_001
          - id
          - id_ID
          - ig
          - ig_NG
          - ii
          - ii_CN
          - is
          - is_IS
          - it
          - it_CH
          - it_IT
          - it_SM
          - it_VA
          - ja
          - ja_JP
          - jgo
          - jgo_CM
          - jmc
          - jmc_TZ
          - jv
          - jv_ID
          - ka
          - ka_GE
          - kab
          - kab_DZ
          - kam
          - kam_KE
          - kde
          - kde_TZ
          - kea
          - kea_CV
          - khq
          - khq_ML
          - ki
          - ki_KE
          - kk
          - kk_KZ
          - kkj
          - kkj_CM
          - kl
          - kl_GL
          - kln
          - kln_KE
          - km
          - km_KH
          - kn
          - kn_IN
          - ko
          - ko_KP
          - ko_KR
          - kok
          - kok_IN
          - ks
          - ks_Arab
          - ks_Arab_IN
          - ksb
          - ksb_TZ
          - ksf
          - ksf_CM
          - ksh
          - ksh_DE
          - ku
          - ku_TR
          - kw
          - kw_GB
          - ky
          - ky_KG
          - lag
          - lag_TZ
          - lb
          - lb_LU
          - lg
          - lg_UG
          - lkt
          - lkt_US
          - ln
          - ln_AO
          - ln_CD
          - ln_CF
          - ln_CG
          - lo
          - lo_LA
          - lrc
          - lrc_IQ
          - lrc_IR
          - lt
          - lt_LT
          - lu
          - lu_CD
          - luo
          - luo_KE
          - luy
          - luy_KE
          - lv
          - lv_LV
          - mai
          - mai_IN
          - mas
          - mas_KE
          - mas_TZ
          - mer
          - mer_KE
          - mfe
          - mfe_MU
          - mg
          - mg_MG
          - mgh
          - mgh_MZ
          - mgo
          - mgo_CM
          - mi
          - mi_NZ
          - mk
          - mk_MK
          - ml
          - ml_IN
          - mn
          - mn_MN
          - mni
          - mni_Beng
          - mni_Beng_IN
          - mr
          - mr_IN
          - ms
          - ms_BN
          - ms_ID
          - ms_MY
          - ms_SG
          - mt
          - mt_MT
          - mua
          - mua_CM
          - my
          - my_MM
          - mzn
          - mzn_IR
          - naq
          - naq_NA
          - nb
          - nb_NO
          - nb_SJ
          - nd
          - nd_ZW
          - nds
          - nds_DE
          - nds_NL
          - ne
          - ne_IN
          - ne_NP
          - nl
          - nl_AW
          - nl_BE
          - nl_BQ
          - nl_CW
          - nl_NL
          - nl_SR
          - nl_SX
          - nmg
          - nmg_CM
          - nn
          - nn_NO
          - nnh
          - nnh_CM
          - nus
          - nus_SS
          - nyn
          - nyn_UG
          - om
          - om_ET
          - om_KE
          - or
          - or_IN
          - os
          - os_GE
          - os_RU
          - pa
          - pa_Arab
          - pa_Arab_PK
          - pa_Guru
          - pa_Guru_IN
          - pcm
          - pcm_NG
          - pl
          - pl_PL
          - prg
          - prg_001
          - ps
          - ps_AF
          - ps_PK
          - pt
          - pt_AO
          - pt_BR
          - pt_CH
          - pt_CV
          - pt_GQ
          - pt_GW
          - pt_LU
          - pt_MO
          - pt_MZ
          - pt_PT
          - pt_ST
          - pt_TL
          - qu
          - qu_BO
          - qu_EC
          - qu_PE
          - rm
          - rm_CH
          - rn
          - rn_BI
          - ro
          - ro_MD
          - ro_RO
          - rof
          - rof_TZ
          - ru
          - ru_BY
          - ru_KG
          - ru_KZ
          - ru_MD
          - ru_RU
          - ru_UA
          - rw
          - rw_RW
          - rwk
          - rwk_TZ
          - sah
          - sah_RU
          - saq
          - saq_KE
          - sat
          - sat_Olck
          - sat_Olck_IN
          - sbp
          - sbp_TZ
          - sd
          - sd_Arab
          - sd_Arab_PK
          - sd_Deva
          - sd_Deva_IN
          - se
          - se_FI
          - se_NO
          - se_SE
          - seh
          - seh_MZ
          - ses
          - ses_ML
          - sg
          - sg_CF
          - shi
          - shi_Latn
          - shi_Latn_MA
          - shi_Tfng
          - shi_Tfng_MA
          - si
          - si_LK
          - sk
          - sk_SK
          - sl
          - sl_SI
          - smn
          - smn_FI
          - sn
          - sn_ZW
          - so
          - so_DJ
          - so_ET
          - so_KE
          - so_SO
          - sq
          - sq_AL
          - sq_MK
          - sq_XK
          - sr
          - sr_Cyrl
          - sr_Cyrl_BA
          - sr_Cyrl_ME
          - sr_Cyrl_RS
          - sr_Cyrl_XK
          - sr_Latn
          - sr_Latn_BA
          - sr_Latn_ME
          - sr_Latn_RS
          - sr_Latn_XK
          - su
          - su_Latn
          - su_Latn_ID
          - sv
          - sv_AX
          - sv_FI
          - sv_SE
          - sw
          - sw_CD
          - sw_KE
          - sw_TZ
          - sw_UG
          - ta
          - ta_IN
          - ta_LK
          - ta_MY
          - ta_SG
          - te
          - te_IN
          - teo
          - teo_KE
          - teo_UG
          - tg
          - tg_TJ
          - th
          - th_TH
          - ti
          - ti_ER
          - ti_ET
          - tk
          - tk_TM
          - to
          - to_TO
          - tr
          - tr_CY
          - tr_TR
          - tt
          - tt_RU
          - twq
          - twq_NE
          - tzm
          - tzm_MA
          - ug
          - ug_CN
          - uk
          - uk_UA
          - ur
          - ur_IN
          - ur_PK
          - uz
          - uz_Arab
          - uz_Arab_AF
          - uz_Cyrl
          - uz_Cyrl_UZ
          - uz_Latn
          - uz_Latn_UZ
          - vai
          - vai_Latn
          - vai_Latn_LR
          - vai_Vaii
          - vai_Vaii_LR
          - vi
          - vi_VN
          - vo
          - vo_001
          - vun
          - vun_TZ
          - wae
          - wae_CH
          - wo
          - wo_SN
          - xh
          - xh_ZA
          - xog
          - xog_UG
          - yav
          - yav_CM
          - yi
          - yi_001
          - yo
          - yo_BJ
          - yo_NG
          - yue
          - yue_Hans
          - yue_Hans_CN
          - yue_Hant
          - yue_Hant_HK
          - zgh
          - zgh_MA
          - zh
          - zh_Hans
          - zh_Hans_CN
          - zh_Hans_HK
          - zh_Hans_MO
          - zh_Hans_SG
          - zh_Hant
          - zh_Hant_HK
          - zh_Hant_MO
          - zh_Hant_TW
          - zu
          - zu_ZA
        timezone:
          type: string
          enum:
          - Africa/Abidjan
          - Africa/Accra
          - Africa/Addis_Ababa
          - Africa/Algiers
          - Africa/Asmara
          - Africa/Bamako
          - Africa/Bangui
          - Africa/Banjul
          - Africa/Bissau
          - Africa/Blantyre
          - Africa/Brazzaville
          - Africa/Bujumbura
          - Africa/Cairo
          - Africa/Casablanca
          - Africa/Ceuta
          - Africa/Conakry
          - Africa/Dakar
          - Africa/Dar_es_Salaam
          - Africa/Djibouti
          - Africa/Douala
          - Africa/El_Aaiun
          - Africa/Freetown
          - Africa/Gaborone
          - Africa/Harare
          - Africa/Johannesburg
          - Africa/Juba
          - Africa/Kampala
          - Africa/Khartoum
          - Africa/Kigali
          - Africa/Kinshasa
          - Africa/Lagos
          - Africa/Libreville
          - Africa/Lome
          - Africa/Luanda
          - Africa/Lubumbashi
          - Africa/Lusaka
          - Africa/Malabo
          - Africa/Maputo
          - Africa/Maseru
          - Africa/Mbabane
          - Africa/Mogadishu
          - Africa/Monrovia
          - Africa/Nairobi
          - Africa/Ndjamena
          - Africa/Niamey
          - Africa/Nouakchott
          - Africa/Ouagadougou
          - Africa/Porto-Novo
          - Africa/Sao_Tome
          - Africa/Tripoli
          - Africa/Tunis
          - Africa/Windhoek
          - America/Adak
          - America/Anchorage
          - America/Anguilla
          - America/Antigua
          - America/Araguaina
          - America/Argentina/Buenos_Aires
          - America/Argentina/Catamarca
          - America/Argentina/Cordoba
          - America/Argentina/Jujuy
          - America/Argentina/La_Rioja
          - America/Argentina/Mendoza
          - America/Argentina/Rio_Gallegos
          - America/Argentina/Salta
          - America/Argentina/San_Juan
          - America/Argentina/San_Luis
          - America/Argentina/Tucuman
          - America/Argentina/Ushuaia
          - America/Aruba
          - America/Asuncion
          - America/Atikokan
          - America/Bahia
          - America/Bahia_Banderas
          - America/Barbados
          - America/Belem
          - America/Belize
          - America/Blanc-Sablon
          - America/Boa_Vista
          - America/Bogota
          - America/Boise
          - America/Cambridge_Bay
          - America/Campo_Grande
          - America/Cancun
          - America/Caracas
          - America/Cayenne
          - America/Cayman
          - America/Chicago
          - America/Chihuahua
          - America/Costa_Rica
          - America/Creston
          - America/Cuiaba
          - America/Curacao
          - America/Danmarkshavn
          - America/Dawson
          - America/Dawson_Creek
          - America/Denver
          - America/Detroit
          - America/Dominica
          - America/Edmonton
          - America/Eirunepe
          - America/El_Salvador
          - America/Fort_Nelson
          - America/Fortaleza
          - America/Glace_Bay
          - America/Goose_Bay
          - America/Grand_Turk
          - America/Grenada
          - America/Guadeloupe
          - America/Guatemala
          - America/Guayaquil
          - America/Guyana
          - America/Halifax
          - America/Havana
          - America/Hermosillo
          - America/Indiana/Indianapolis
          - America/Indiana/Knox
          - America/Indiana/Marengo
          - America/Indiana/Petersburg
          - America/Indiana/Tell_City
          - America/Indiana/Vevay
          - America/Indiana/Vincennes
          - America/Indiana/Winamac
          - America/Inuvik
          - America/Iqaluit
          - America/Jamaica
          - America/Juneau
          - America/Kentucky/Louisville
          - America/Kentucky/Monticello
          - America/Kralendijk
          - America/La_Paz
          - America/Lima
          - America/Los_Angeles
          - America/Lower_Princes
          - America/Maceio
          - America/Managua
          - America/Manaus
          - America/Marigot
          - America/Martinique
          - America/Matamoros
          - America/Mazatlan
          - America/Menominee
          - America/Merida
          - America/Metlakatla
          - America/Mexico_City
          - America/Miquelon
          - America/Moncton
          - America/Monterrey
          - America/Montevideo
          - America/Montserrat
          - America/Nassau
          - America/New_York
          - America/Nipigon
          - America/Nome
          - America/Noronha
          - America/North_Dakota/Beulah
          - America/North_Dakota/Center
          - America/North_Dakota/New_Salem
          - America/Nuuk
          - America/Ojinaga
          - America/Panama
          - America/Pangnirtung
          - America/Paramaribo
          - America/Phoenix
          - America/Port-au-Prince
          - America/Port_of_Spain
          - America/Porto_Velho
          - America/Puerto_Rico
          - America/Punta_Arenas
          - America/Rainy_River
          - America/Rankin_Inlet
          - America/Recife
          - America/Regina
          - America/Resolute
          - America/Rio_Branco
          - America/Santarem
          - America/Santiago
          - America/Santo_Domingo
          - America/Sao_Paulo
          - America/Scoresbysund
          - America/Sitka
          - America/St_Barthelemy
          - America/St_Johns
          - America/St_Kitts
          - America/St_Lucia
          - America/St_Thomas
          - America/St_Vincent
          - America/Swift_Current
          - America/Tegucigalpa
          - America/Thule
          - America/Thunder_Bay
          - America/Tijuana
          - America/Toronto
          - America/Tortola
          - America/Vancouver
          - America/Whitehorse
          - America/Winnipeg
          - America/Yakutat
          - America/Yellowknife
          - Antarctica/Casey
          - Antarctica/Davis
          - Antarctica/DumontDUrville
          - Antarctica/Macquarie
          - Antarctica/Mawson
          - Antarctica/McMurdo
          - Antarctica/Palmer
          - Antarctica/Rothera
          - Antarctica/Syowa
          - Antarctica/Troll
          - Antarctica/Vostok
          - Arctic/Longyearbyen
          - Asia/Aden
          - Asia/Almaty
          - Asia/Amman
          - Asia/Anadyr
          - Asia/Aqtau
          - Asia/Aqtobe
          - Asia/Ashgabat
          - Asia/Atyrau
          - Asia/Baghdad
          - Asia/Bahrain
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Barnaul
          - Asia/Beirut
          - Asia/Bishkek
          - Asia/Brunei
          - Asia/Chita
          - Asia/Choibalsan
          - Asia/Colombo
          - Asia/Damascus
          - Asia/Dhaka
          - Asia/Dili
          - Asia/Dubai
          - Asia/Dushanbe
          - Asia/Famagusta
          - Asia/Gaza
          - Asia/Hebron
          - Asia/Ho_Chi_Minh
          - Asia/Hong_Kong
          - Asia/Hovd
          - Asia/Irkutsk
          - Asia/Jakarta
          - Asia/Jayapura
          - Asia/Jerusalem
          - Asia/Kabul
          - Asia/Kamchatka
          - Asia/Karachi
          - Asia/Kathmandu
          - Asia/Khandyga
          - Asia/Kolkata
          - Asia/Krasnoyarsk
          - Asia/Kuala_Lumpur
          - Asia/Kuching
          - Asia/Kuwait
          - Asia/Macau
          - Asia/Magadan
          - Asia/Makassar
          - Asia/Manila
          - Asia/Muscat
          - Asia/Nicosia
          - Asia/Novokuznetsk
          - Asia/Novosibirsk
          - Asia/Omsk
          - Asia/Oral
          - Asia/Phnom_Penh
          - Asia/Pontianak
          - Asia/Pyongyang
          - Asia/Qatar
          - Asia/Qostanay
          - Asia/Qyzylorda
          - Asia/Riyadh
          - Asia/Sakhalin
          - Asia/Samarkand
          - Asia/Seoul
          - Asia/Shanghai
          - Asia/Singapore
          - Asia/Srednekolymsk
          - Asia/Taipei
          - Asia/Tashkent
          - Asia/Tbilisi
          - Asia/Tehran
          - Asia/Thimphu
          - Asia/Tokyo
          - Asia/Tomsk
          - Asia/Ulaanbaatar
          - Asia/Urumqi
          - Asia/Ust-Nera
          - Asia/Vientiane
          - Asia/Vladivostok
          - Asia/Yakutsk
          - Asia/Yangon
          - Asia/Yekaterinburg
          - Asia/Yerevan
          - Atlantic/Azores
          - Atlantic/Bermuda
          - Atlantic/Canary
          - Atlantic/Cape_Verde
          - Atlantic/Faroe
          - Atlantic/Madeira
          - Atlantic/Reykjavik
          - Atlantic/South_Georgia
          - Atlantic/St_Helena
          - Atlantic/Stanley
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Broken_Hill
          - Australia/Darwin
          - Australia/Eucla
          - Australia/Hobart
          - Australia/Lindeman
          - Australia/Lord_Howe
          - Australia/Melbourne
          - Australia/Perth
          - Australia/Sydney
          - Canada/Atlantic
          - Canada/Central
          - Canada/Eastern
          - Canada/Mountain
          - Canada/Newfoundland
          - Canada/Pacific
          - Europe/Amsterdam
          - Europe/Andorra
          - Europe/Astrakhan
          - Europe/Athens
          - Europe/Belgrade
          - Europe/Berlin
          - Europe/Bratislava
          - Europe/Brussels
          - Europe/Bucharest
          - Europe/Budapest
          - Europe/Busingen
          - Europe/Chisinau
          - Europe/Copenhagen
          - Europe/Dublin
          - Europe/Gibraltar
          - Europe/Guernsey
          - Europe/Helsinki
          - Europe/Isle_of_Man
          - Europe/Istanbul
          - Europe/Jersey
          - Europe/Kaliningrad
          - Europe/Kiev
          - Europe/Kirov
          - Europe/Lisbon
          - Europe/Ljubljana
          - Europe/London
          - Europe/Luxembourg
          - Europe/Madrid
          - Europe/Malta
          - Europe/Mariehamn
          - Europe/Minsk
          - Europe/Monaco
          - Europe/Moscow
          - Europe/Oslo
          - Europe/Paris
          - Europe/Podgorica
          - Europe/Prague
          - Europe/Riga
          - Europe/Rome
          - Europe/Samara
          - Europe/San_Marino
          - Europe/Sarajevo
          - Europe/Saratov
          - Europe/Simferopol
          - Europe/Skopje
          - Europe/Sofia
          - Europe/Stockholm
          - Europe/Tallinn
          - Europe/Tirane
          - Europe/Ulyanovsk
          - Europe/Uzhgorod
          - Europe/Vaduz
          - Europe/Vatican
          - Europe/Vienna
          - Europe/Vilnius
          - Europe/Volgograd
          - Europe/Warsaw
          - Europe/Zagreb
          - Europe/Zaporozhye
          - Europe/Zurich
          - GMT
          - Indian/Antananarivo
          - Indian/Chagos
          - Indian/Christmas
          - Indian/Cocos
          - Indian/Comoro
          - Indian/Kerguelen
          - Indian/Mahe
          - Indian/Maldives
          - Indian/Mauritius
          - Indian/Mayotte
          - Indian/Reunion
          - Pacific/Apia
          - Pacific/Auckland
          - Pacific/Bougainville
          - Pacific/Chatham
          - Pacific/Chuuk
          - Pacific/Easter
          - Pacific/Efate
          - Pacific/Enderbury
          - Pacific/Fakaofo
          - Pacific/Fiji
          - Pacific/Funafuti
          - Pacific/Galapagos
          - Pacific/Gambier
          - Pacific/Guadalcanal
          - Pacific/Guam
          - Pacific/Honolulu
          - Pacific/Kiritimati
          - Pacific/Kosrae
          - Pacific/Kwajalein
          - Pacific/Majuro
          - Pacific/Marquesas
          - Pacific/Midway
          - Pacific/Nauru
          - Pacific/Niue
          - Pacific/Norfolk
          - Pacific/Noumea
          - Pacific/Pago_Pago
          - Pacific/Palau
          - Pacific/Pitcairn
          - Pacific/Pohnpei
          - Pacific/Port_Moresby
          - Pacific/Rarotonga
          - Pacific/Saipan
          - Pacific/Tahiti
          - Pacific/Tarawa
          - Pacific/Tongatapu
          - Pacific/Wake
          - Pacific/Wallis
          - US/Alaska
          - US/Arizona
          - US/Central
          - US/Eastern
          - US/Hawaii
          - US/Mountain
          - US/Pacific
          - UTC
        timeformat:
          type: string
        notifications:
          type: boolean
        announcements:
          type: boolean
          description: Receive marketing news and announcements
      type: object
    _AccountExtensionConstraints:
      properties:
        tokens:
          type: integer
          maximum: 32
          minimum: 0
      type: object
      required:
      - tokens
    _AccountPermissionsWrite:
      properties:
        agreement:
          $ref: '#/components/schemas/_AgreementPermissionsWrite'
      type: object
      required:
      - agreement
    _AgreementPermissionsWrite:
      properties:
        program:
          $ref: '#/components/schemas/_ProgramAgreementPermissionsWrite'
        service:
          $ref: '#/components/schemas/_ServiceAgreementPermissionsWrite'
      type: object
      required:
      - program
      - service
    _ExtensionConstraints:
      properties:
        account:
          $ref: '#/components/schemas/_AccountExtensionConstraints'
      type: object
    _ExtensionWrite:
      properties:
        id:
          type: string
          writeOnly: true
        name:
          type: string
          writeOnly: true
      type: object
    _ProgramAgreementPermissionsWrite:
      properties:
        create:
          type: boolean
      type: object
      required:
      - create
    _ServiceAgreementPermissionsWrite:
      properties:
        create:
          type: boolean
        delegate:
          type: boolean
      type: object
      required:
      - create
      - delegate
    conversations.Account:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
        icon:
          type: string
          nullable: true
          maxLength: 2000
      type: object
      description: Description of the *Account* model.
      required:
      - id
    conversations.Actor:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
      type: object
      description: Description of the *Actor* model.
    conversations.Conversation:
      properties:
        id:
          type: string
          readOnly: true
        instance_id:
          type: string
          maxLength: 30
        topic:
          type: string
          maxLength: 100
        type:
          type: string
          enum:
          - conversation
          - notes
        status:
          type: string
          enum:
          - open
          - closed
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/conversations.Account'
        creator:
          $ref: '#/components/schemas/conversations.Actor'
        created:
          type: string
          format: date-time
          readOnly: true
      type: object
      description: Description of the *Conversation* model.
      required:
      - instance_id
      - topic
      - accounts
    conversations.Message:
      properties:
        id:
          type: string
          readOnly: true
        conversation:
          type: string
          readOnly: true
        account:
          $ref: '#/components/schemas/conversations.Account'
        created:
          type: string
          format: date-time
          readOnly: true
        creator:
          $ref: '#/components/schemas/conversations.Actor'
        text:
          type: string
        type:
          type: string
          enum:
          - message
          - state_change
          - private
          default: message
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
      description: Description of the *Message* model.
      required:
      - text
    dp.AVersion:
      properties:
        author:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          readOnly: true
        version:
          type: integer
          readOnly: true
        active:
          type: boolean
        link:
          type: string
          readOnly: true
        version_created:
          type: string
          format: date-time
          readOnly: true
        version_contracts:
          type: integer
          readOnly: true
      type: object
    dp.ActivationField:
      properties:
        code:
          type: string
          readOnly: true
          maxLength: 100
        message:
          type: string
          maxLength: 200
        note:
          type: string
          maxLength: 100
      type: object
      required:
      - message
    dp.Agreement:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - program
          - service
          - syndication
          - referral
        title:
          type: string
          maxLength: 100
        description:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        owner:
          $ref: '#/components/schemas/dp.CompanyReference'
        stats:
          type: object
          properties:
            contracts:
              type: integer
            versions:
              type: integer
          readOnly: true
        link:
          type: string
          format: uri
          writeOnly: true
        active:
          type: boolean
          writeOnly: true
        parent:
          $ref: '#/components/schemas/dp.AgreementReference'
        marketplace:
          $ref: '#/components/schemas/dp.MarketplaceReference'
        version:
          $ref: '#/components/schemas/dp.AVersion'
        forms:
          type: array
          items:
            $ref: '#/components/schemas/dp.AgreementFormsReference'
        auto_accept:
          type: boolean
        agreements:
          type: array
          items:
            $ref: '#/components/schemas/dp.AgreementRead'
      type: object
      required:
      - type
      - title
      - description
      - link
    dp.AgreementCreate:
      properties:
        type:
          type: string
          enum:
          - distribution
          - program
          - service
          - syndication
          - referral
        title:
          type: string
          maxLength: 100
        description:
          type: string
        active:
          type: boolean
          writeOnly: true
        parent:
          $ref: '#/components/schemas/dp.AgreementReference'
        marketplace:
          type: object
          writeOnly: true
        document_type:
          type: string
          enum:
          - external
          - uploaded
          - none
        file:
          type: string
          format: binary
          nullable: true
        link:
          type: string
          format: uri
          writeOnly: true
          maxLength: 200
        auto_accept:
          type: boolean
      type: object
      required:
      - type
      - title
      - description
      - document_type
    dp.AgreementFormVersionReference:
      properties:
        id:
          type: string
      type: object
      required:
      - id
    dp.AgreementFormsReference:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - enroll
          - product
          - item
      type: object
    dp.AgreementRead:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - program
          - service
          - syndication
          - referral
        title:
          type: string
          maxLength: 100
        description:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        owner:
          $ref: '#/components/schemas/dp.CompanyReference'
        stats:
          type: object
          properties:
            contracts:
              type: integer
            versions:
              type: integer
          readOnly: true
        link:
          type: string
          format: uri
          writeOnly: true
        active:
          type: boolean
          writeOnly: true
        parent:
          $ref: '#/components/schemas/dp.AgreementReference'
        marketplace:
          $ref: '#/components/schemas/dp.MarketplaceReference'
        version:
          $ref: '#/components/schemas/dp.AVersion'
        forms:
          type: array
          items:
            $ref: '#/components/schemas/dp.AgreementFormsReference'
        auto_accept:
          type: boolean
      type: object
      required:
      - type
      - title
      - description
      - link
    dp.AgreementReference:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
      type: object
      required:
      - id
    dp.AgreementVersion:
      properties:
        agreement:
          $ref: '#/components/schemas/dp.AgreementRead'
          readOnly: true
        author:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          readOnly: true
        version:
          type: integer
          readOnly: true
        active:
          type: boolean
        link:
          type: string
          readOnly: true
        version_created:
          type: string
          format: date-time
          readOnly: true
        version_contracts:
          type: integer
          readOnly: true
      type: object
    dp.AgreementVersionCreate:
      properties:
        document_type:
          type: string
          enum:
          - external
          - uploaded
          - none
        link:
          type: string
          format: uri
          nullable: true
        file:
          type: string
          format: binary
          nullable: true
        active:
          type: boolean
      type: object
      required:
      - document_type
    dp.ApplicationUI:
      properties:
        description:
          type: string
          nullable: true
          maxLength: 255
        getting_started:
          type: string
          nullable: true
          maxLength: 4096
        download_links:
          type: array
          items:
            $ref: '#/components/schemas/dp.UIAppMeta'
          readOnly: true
        documents:
          type: array
          items:
            $ref: '#/components/schemas/dp.UIAppMeta'
          readOnly: true
        languages:
          type: array
          items:
            $ref: '#/components/schemas/dp.UILocale'
        provisioning_message:
          type: string
          nullable: true
      type: object
    dp.Asset:
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - draft
          - processing
          - active
          - terminating
          - suspended
          - terminated
        external_id:
          type: string
          nullable: true
          maxLength: 100
        external_uid:
          type: string
          nullable: true
          maxLength: 100
        product:
          $ref: '#/components/schemas/dp.ProductReference'
        connection:
          type: object
          properties:
            id:
              type: string
            provider:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
            vendor:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
            type:
              type: string
              enum:
              - preview
              - test
              - production
            hub:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
          readOnly: true
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              quantity:
                type: number
          readOnly: true
        params:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              description:
                type: string
              value:
                type: string
              value_error:
                type: string
              type:
                type: string
                enum:
                - text
                - dropdown
                - password
                - email
                - checkbox
                - subdomain
                - domain
                - phone
                - url
                - choice
              scope:
                type: string
                enum:
                - asset
                - tier1
                - tier2
              phase:
                type: string
                enum:
                - fulfillment
                - ordering
              contraints:
                type: object
                properties:
                  required:
                    type: boolean
                  hidden:
                    type: boolean
                  unique:
                    type: boolean
                  reconciliation:
                    type: boolean
                  shared:
                    type: string
                    enum:
                    - view
                    - edit
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
          readOnly: true
        tiers:
          type: object
          properties:
            customer:
              type: object
              properties:
                external_id:
                  type: string
                external_uid:
                  type: string
                name:
                  type: string
                tax_id:
                  type: string
                contact_info:
                  type: object
                  required: &id060
                  - address_line1
                  - city
                  - postal_code
                  - country
                  - contact
                  properties:
                    address_line1:
                      type: string
                    address_line2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    postal_code:
                      type: string
                    country:
                      type: string
                    contact:
                      type: object
                      required: &id061
                      - first_name
                      - last_name
                      - email
                      - phone_number
                      properties:
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                          format: email
                        phone_number:
                          type: object
                          properties:
                            country_code:
                              type: string
                            area_code:
                              type: string
                            phone_number:
                              type: string
                            extension:
                              type: string
            tier1:
              type: object
              properties:
                external_id:
                  type: string
                external_uid:
                  type: string
                name:
                  type: string
                tax_id:
                  type: string
                contact_info:
                  type: object
                  required: *id060
                  properties:
                    address_line1:
                      type: string
                    address_line2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    postal_code:
                      type: string
                    country:
                      type: string
                    contact:
                      type: object
                      required: *id061
                      properties:
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                          format: email
                        phone_number:
                          type: object
                          properties:
                            country_code:
                              type: string
                            area_code:
                              type: string
                            phone_number:
                              type: string
                            extension:
                              type: string
            tier2:
              type: object
              properties:
                external_id:
                  type: string
                external_uid:
                  type: string
                name:
                  type: string
                tax_id:
                  type: string
                contact_info:
                  type: object
                  required: *id060
                  properties:
                    address_line1:
                      type: string
                    address_line2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    postal_code:
                      type: string
                    country:
                      type: string
                    contact:
                      type: object
                      required: *id061
                      properties:
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                          format: email
                        phone_number:
                          type: object
                          properties:
                            country_code:
                              type: string
                            area_code:
                              type: string
                            phone_number:
                              type: string
                            extension:
                              type: string
          readOnly: true
        external_name:
          type: string
        configuration:
          type: object
          properties:
            params:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  value:
                    type: string
                  type:
                    type: string
                    enum:
                    - text
                    - dropdown
                    - password
                    - email
                    - checkbox
                    - subdomain
                    - domain
                    - phone
                    - url
                    - choice
                  scope:
                    type: string
                    enum:
                    - product
                    - item
                    - marketplace
                    - item_marketplace
                  phase:
                    type: string
                    enum:
                    - configuration
                  contraints:
                    type: object
                    properties:
                      required:
                        type: boolean
                      hidden:
                        type: boolean
                      unique:
                        type: boolean
                      shared:
                        type: string
                        enum:
                        - view
                        - edit
                  events:
                    type: object
                    properties:
                      created:
                        type: object
                        properties:
                          at:
                            type: string
                            format: datetime
                          by:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      updated:
                        type: object
                        properties:
                          at:
                            type: string
                            format: datetime
                          by:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
          readOnly: true
      type: object
      required:
      - product
      - external_name
    dp.AssetChangeRequest:
      type: object
      properties:
        type:
          type: string
          enum:
          - change
        asset:
          type: object
          properties:
            id:
              type: string
            items:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  quantity:
                    type: number
            external_attributes:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  value:
                    type: string
    dp.AssetPurchaseRequest:
      type: object
      properties:
        type:
          type: string
          enum:
          - purchase
        note:
          type: string
        reason:
          type: string
        status:
          type: string
          enum:
          - draft
          - tiers_setup
          - pending
          - inquiring
          - approved
          - failed
        asset:
          type: object
          properties:
            external_id:
              type: string
            external_uid:
              type: string
            connection:
              type: object
              properties:
                id:
                  type: string
            items:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  quantity:
                    type: number
            params:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  value:
                    type: string
                  value_error:
                    type: string
                  type:
                    type: string
                    enum:
                    - text
                    - dropdown
                    - password
                    - email
                    - checkbox
                    - subdomain
                    - domain
                    - phone
                    - url
                    - choice
                  scope:
                    type: string
                    enum:
                    - asset
                    - tier1
                    - tier2
                  value_choices:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
                  phase:
                    type: string
                    enum:
                    - fulfillment
                    - ordering
                  contraints:
                    type: object
                    properties:
                      required:
                        type: boolean
                      hidden:
                        type: boolean
                      unique:
                        type: boolean
                      reconciliation:
                        type: boolean
                      shared:
                        type: string
                        enum:
                        - view
                        - edit
            tiers:
              type: object
              properties:
                customer:
                  type: object
                  properties:
                    external_id:
                      type: string
                    external_uid:
                      type: string
                    name:
                      type: string
                    tax_id:
                      type: string
                    contact_info:
                      type: object
                      required: &id062
                      - address_line1
                      - city
                      - postal_code
                      - country
                      - contact
                      properties:
                        address_line1:
                          type: string
                        address_line2:
                          type: string
                        city:
                          type: string
                        state:
                          type: string
                        postal_code:
                          type: string
                        country:
                          type: string
                        contact:
                          type: object
                          required: &id063
                          - first_name
                          - last_name
                          - email
                          - phone_number
                          properties:
                            first_name:
                              type: string
                            last_name:
                              type: string
                            email:
                              type: string
                              format: email
                            phone_number:
                              type: object
                              properties:
                                country_code:
                                  type: string
                                area_code:
                                  type: string
                                phone_number:
                                  type: string
                                extension:
                                  type: string
                tier1:
                  type: object
                  properties:
                    external_id:
                      type: string
                    external_uid:
                      type: string
                    name:
                      type: string
                    tax_id:
                      type: string
                    contact_info:
                      type: object
                      required: *id062
                      properties:
                        address_line1:
                          type: string
                        address_line2:
                          type: string
                        city:
                          type: string
                        state:
                          type: string
                        postal_code:
                          type: string
                        country:
                          type: string
                        contact:
                          type: object
                          required: *id063
                          properties:
                            first_name:
                              type: string
                            last_name:
                              type: string
                            email:
                              type: string
                              format: email
                            phone_number:
                              type: object
                              properties:
                                country_code:
                                  type: string
                                area_code:
                                  type: string
                                phone_number:
                                  type: string
                                extension:
                                  type: string
                tier2:
                  type: object
                  properties:
                    external_id:
                      type: string
                    external_uid:
                      type: string
                    name:
                      type: string
                    tax_id:
                      type: string
                    contact_info:
                      type: object
                      required: *id062
                      properties:
                        address_line1:
                          type: string
                        address_line2:
                          type: string
                        city:
                          type: string
                        state:
                          type: string
                        postal_code:
                          type: string
                        country:
                          type: string
                        contact:
                          type: object
                          required: *id063
                          properties:
                            first_name:
                              type: string
                            last_name:
                              type: string
                            email:
                              type: string
                              format: email
                            phone_number:
                              type: object
                              properties:
                                country_code:
                                  type: string
                                area_code:
                                  type: string
                                phone_number:
                                  type: string
                                extension:
                                  type: string
    dp.AssetSuspendResumeCancelRequest:
      type: object
      properties:
        type:
          type: string
          enum:
          - suspend
          - resume
          - cancel
        asset:
          type: object
          properties:
            id:
              type: string
            external_attributes:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  value:
                    type: string
    dp.Cart:
      properties:
        validation:
          type: boolean
      type: object
    dp.Category:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        parent:
          $ref: '#/components/schemas/dp.CategoryReference'
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/dp.CategoryReference'
          readOnly: true
        family:
          $ref: '#/components/schemas/dp.FamilyReference'
      type: object
      required:
      - name
      - family
    dp.CategoryReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
      type: object
      required:
      - name
    dp.CategoryWrite:
      properties:
        id:
          type: string
      type: object
      required:
      - id
    dp.CompanyReference:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
      type: object
      required:
      - id
    dp.ConfigurationDataRead:
      properties:
        value:
          type: string
          nullable: true
          maxLength: 2000
        structured_value:
          type: object
        parameter:
          $ref: '#/components/schemas/dp.Parameter'
          readOnly: true
        item:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          readOnly: true
        marketplace:
          $ref: '#/components/schemas/dp.MarketplaceReference'
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
      required:
      - structured_value
    dp.ConfigurationDataWrite:
      properties:
        value:
          type: string
          nullable: true
        structured_value:
          type: object
          nullable: true
        parameter:
          $ref: '#/components/schemas/dp.Id'
        item:
          $ref: '#/components/schemas/dp.Id'
        marketplace:
          $ref: '#/components/schemas/dp.Id'
      type: object
      required:
      - parameter
    dp.Connection:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - pending
          - approved
          - rejected
          - revoked
          - active
        provider:
          $ref: '#/components/schemas/dp.CompanyReference'
        vendor:
          $ref: '#/components/schemas/dp.CompanyReference'
        hub:
          $ref: '#/components/schemas/dp.HubConnection'
        created_at:
          type: string
          format: date-time
          readOnly: true
        endpoint_url:
          type: string
          readOnly: true
        frontend_url:
          type: string
          readOnly: true
        oauth_key:
          type: string
          readOnly: true
        oauth_secret:
          type: string
          readOnly: true
        version:
          type: string
          readOnly: true
      type: object
      required:
      - provider
      - vendor
      - hub
    dp.ConnectionProductReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        icon:
          type: string
          readOnly: true
        short_description:
          type: string
          readOnly: true
        version:
          type: integer
          readOnly: true
      type: object
    dp.ConnectionReference:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - pending
          - approved
          - rejected
          - revoked
          - active
        provider:
          $ref: '#/components/schemas/dp.CompanyReference'
        vendor:
          $ref: '#/components/schemas/dp.CompanyReference'
        created_at:
          type: string
          format: date-time
          readOnly: true
        product:
          $ref: '#/components/schemas/dp.ConnectionProductReference'
      type: object
      required:
      - provider
      - vendor
      - product
    dp.ConnectionWrite:
      properties:
        id:
          type: string
      type: object
      required:
      - id
    dp.Contract:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        version:
          type: integer
          readOnly: true
          nullable: true
        status:
          type: string
          readOnly: true
        marketplace:
          $ref: '#/components/schemas/dp.MarketplaceReference'
        owner:
          $ref: '#/components/schemas/dp.CompanyReference'
        version_created:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            signed:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            countersigned:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            terminated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        referral:
          $ref: '#/components/schemas/dp.Referral'
        name:
          type: string
          readOnly: true
        agreement:
          $ref: '#/components/schemas/dp.AgreementReference'
        creator:
          $ref: '#/components/schemas/dp.CompanyReference'
        enrolled:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        latest:
          type: boolean
          readOnly: true
        activation:
          $ref: '#/components/schemas/dp.ActivationField'
        signee:
          $ref: '#/components/schemas/dp.PortalUserReference'
        kind:
          type: string
          enum:
          - production
          - test
        expire_at:
          type: string
          format: date-time
          nullable: true
        note:
          type: string
          maxLength: 100
        permissions:
          type: object
          writeOnly: true
          nullable: true
        termination_note:
          type: string
          readOnly: true
        issuer:
          $ref: '#/components/schemas/dp.CompanyReference'
        partner:
          $ref: '#/components/schemas/dp.ContractPartner'
      type: object
    dp.ContractNameReference:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
      type: object
    dp.ContractPartner:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        external_id:
          type: string
          nullable: true
      type: object
      required:
      - name
    dp.ContractReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      type: object
    dp.ContractVersion:
      properties:
        contract:
          $ref: '#/components/schemas/dp.Contract'
          readOnly: true
        version:
          type: string
          readOnly: true
        signee:
          $ref: '#/components/schemas/dp.PortalUserReference'
        version_created:
          type: string
          format: date-time
          readOnly: true
      type: object
    dp.Country:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
        icon:
          type: string
          format: uri
          readOnly: true
        prefix:
          type: string
          readOnly: true
      type: object
      required:
      - id
    dp.CountryReference:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
      type: object
      required:
      - id
    dp.CreateObjectID:
      properties:
        id:
          type: string
          writeOnly: true
      type: object
      required:
      - id
    dp.DistributionAgreementFormVersion:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        schema:
          type: object
        version:
          type: integer
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        type:
          type: string
      type: object
      required:
      - name
      - schema
      - type
    dp.DistributionAgreementForms:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - enroll
          - product
          - item
        status:
          type: string
          enum:
          - active
          - deleted
        highest_form_version:
          $ref: '#/components/schemas/dp.DistributionAgreementFormVersion'
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        schema:
          type: object
          writeOnly: true
        name:
          type: string
          writeOnly: true
      type: object
      required:
      - schema
      - name
    dp.DistributionData:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        contract:
          $ref: '#/components/schemas/dp.ContractReference'
        product:
          $ref: '#/components/schemas/dp.ProductReference'
        item:
          $ref: '#/components/schemas/dp.ItemReferenceWithType'
        data:
          type: object
        form_version:
          $ref: '#/components/schemas/dp.AgreementFormVersionReference'
      type: object
      required:
      - data
    dp.FamilyReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
      type: object
      required:
      - name
    dp.Hub:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 256
        description:
          type: string
          nullable: true
        company:
          $ref: '#/components/schemas/dp.CompanyReference'
        instance:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
              enum:
              - OA
              - CB
              - API
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        stats:
          type: object
          properties:
            connections:
              type: integer
            marketplaces:
              type: integer
          readOnly: true
        instance_id:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 255
        instance_type:
          type: string
          enum:
          - oa
          - cb
          - api
          writeOnly: true
        version:
          type: string
          maxLength: 256
        extension_version:
          type: string
          maxLength: 256
        last_health_check:
          type: string
          format: date-time
          nullable: true
      type: object
      required:
      - instance_id
      - instance_type
    dp.HubConnection:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 256
        instance:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
              enum:
              - OA
              - CB
              - API
          readOnly: true
      type: object
    dp.HubCreateResponse:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 256
        description:
          type: string
          nullable: true
        company:
          $ref: '#/components/schemas/dp.CompanyReference'
        instance:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
              enum:
              - OA
              - CB
              - API
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        instance_id:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 255
        instance_type:
          type: string
          enum:
          - oa
          - cb
          - api
          writeOnly: true
        version:
          type: string
          maxLength: 256
        extension_version:
          type: string
          maxLength: 256
        last_health_check:
          type: string
          format: date-time
          nullable: true
      type: object
      required:
      - instance_id
      - instance_type
    dp.HubReference:
      properties:
        id:
          type: string
        name:
          type: string
          maxLength: 256
      type: object
      required:
      - id
    dp.HubReferenceMarketplace:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
        icon:
          type: string
          format: uri
          readOnly: true
        description:
          type: string
          nullable: true
      type: object
      required:
      - id
    dp.Id:
      properties:
        id:
          type: string
      type: object
      required:
      - id
    dp.IdWrite:
      properties:
        id:
          type: string
          writeOnly: true
      type: object
      required:
      - id
    dp.Inquiring:
      properties:
        validation:
          type: boolean
      type: object
    dp.ItemCommitment:
      properties:
        count:
          type: integer
      type: object
      required:
      - count
    dp.ItemCreate:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        mpn:
          type: string
          nullable: true
        description:
          type: string
        type:
          type: string
          enum:
          - Reservation
          - PPU
        dynamic:
          type: boolean
        item_type:
          type: string
        period:
          type: string
          enum:
          - Monthly
          - Yearly
          - years_2
          - years_3
          - years_4
          - years_5
          - OneTime
        commitment:
          $ref: '#/components/schemas/dp.ItemCommitment'
        unit:
          $ref: '#/components/schemas/dp.ItemUnit'
        precision:
          type: string
          enum:
          - Integer
          - Decimal(1)
          - Decimal(2)
          - Decimal(4)
          - Decimal(8)
        app:
          type: string
        created_by:
          type: string
          nullable: true
        ui:
          $ref: '#/components/schemas/dp.ItemVisibility'
      type: object
      required:
      - name
      - mpn
      - description
      - type
      - unit
      - app
    dp.ItemReferenceWithStatus:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - draft
          - published
          - endofsale
      type: object
    dp.ItemReferenceWithType:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - COUNTER
          - SUBSCRIPTION_SERVICE
      type: object
      required:
      - type
    dp.ItemUnit:
      properties:
        id:
          type: string
      type: object
      required:
      - id
    dp.ItemUpdate:
      properties:
        ui:
          $ref: '#/components/schemas/dp.ItemVisibility'
        unit:
          $ref: '#/components/schemas/dp.ItemUnit'
        period:
          type: string
          enum:
          - Monthly
          - Yearly
          - years_2
          - years_3
          - years_4
          - years_5
          - OneTime
        description:
          type: string
        mpn:
          type: string
          nullable: true
        type:
          type: string
          enum:
          - Reservation
          - PPU
        precision:
          type: string
          enum:
          - Integer
          - Decimal(1)
          - Decimal(2)
          - Decimal(4)
          - Decimal(8)
        name:
          type: string
          maxLength: 255
        commitment:
          $ref: '#/components/schemas/dp.ItemCommitment'
        dynamic:
          type: boolean
        gravity:
          type: object
          writeOnly: true
      type: object
    dp.ItemVisibility:
      properties:
        visibility:
          type: boolean
      type: object
      required:
      - visibility
    dp.ListCategory:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        parent:
          $ref: '#/components/schemas/dp.CategoryReference'
          readOnly: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/dp.CategoryReference'
          readOnly: true
        family:
          $ref: '#/components/schemas/dp.FamilyReference'
      type: object
      required:
      - name
      - family
    dp.Listing:
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        contract:
          $ref: '#/components/schemas/dp.ContractNameReference'
        product:
          $ref: '#/components/schemas/dp.ProductReference'
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        vendor:
          $ref: '#/components/schemas/dp.CompanyReference'
          readOnly: true
        provider:
          $ref: '#/components/schemas/dp.CompanyReference'
          readOnly: true
        pending_request:
          $ref: '#/components/schemas/dp.ListingRequestReference'
          readOnly: true
        offer:
          $ref: '#/components/schemas/dp.Offer'
        pricelist:
          $ref: '#/components/schemas/dp.PriceList'
      type: object
      required:
      - offer
      - pricelist
    dp.ListingRequest:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - new
          - remove
        state:
          type: string
          enum:
          - draft
          - reviewing
          - deploying
          - canceled
          - completed
          readOnly: true
        product:
          $ref: '#/components/schemas/dp.ProductReference'
          readOnly: true
        listing:
          $ref: '#/components/schemas/dp.Listing'
        offer:
          $ref: '#/components/schemas/dp.Offer'
        pricelist:
          $ref: '#/components/schemas/dp.PriceList'
        creator:
          $ref: '#/components/schemas/dp.UnifiedUserReference'
        assignee:
          $ref: '#/components/schemas/dp.PortalUserReference'
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        product_id:
          type: string
          writeOnly: true
        contract_id:
          type: string
          writeOnly: true
        listing_id:
          type: string
          writeOnly: true
        offer_id:
          type: string
          writeOnly: true
          nullable: true
        pricelist_id:
          type: string
          writeOnly: true
          nullable: true
        note:
          type: string
          writeOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
      required:
      - type
    dp.ListingRequestReference:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - new
          - remove
        status:
          type: string
      type: object
      required:
      - type
      - status
    dp.Marketplace:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        owner:
          $ref: '#/components/schemas/dp.CompanyReference'
        icon:
          type: string
          format: uri
          readOnly: true
        zone:
          type: string
          enum:
          - AF
          - NA
          - OC
          - AS
          - EU
          - SA
          nullable: true
        hubs:
          type: array
          items:
            $ref: '#/components/schemas/dp.MarketplaceHub'
        active_contracts:
          type: string
          readOnly: true
        countries:
          type: array
          items:
            $ref: '#/components/schemas/dp.CountryReference'
        sourcing:
          type: boolean
          readOnly: true
        currency:
          type: string
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - SSP
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
          nullable: true
        attributes:
          type: object
      type: object
      required:
      - name
    dp.MarketplaceHub:
      properties:
        hub:
          $ref: '#/components/schemas/dp.HubReference'
        external_id:
          type: string
          maxLength: 255
      type: object
      required:
      - hub
      - external_id
    dp.MarketplaceIcon:
      properties:
        icon:
          type: string
          format: binary
          writeOnly: true
      type: object
      required:
      - icon
    dp.MarketplaceReference:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
        icon:
          type: string
          format: uri
          readOnly: true
      type: object
      required:
      - id
    dp.MarketplaceUpdate:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        owner:
          $ref: '#/components/schemas/dp.CompanyReference'
        icon:
          type: string
          format: uri
          readOnly: true
        zone:
          type: string
          readOnly: true
        hubs:
          type: array
          items:
            $ref: '#/components/schemas/dp.MarketplaceHub'
        active_contracts:
          type: string
          readOnly: true
        countries:
          type: array
          items:
            $ref: '#/components/schemas/dp.CountryReference'
        sourcing:
          type: boolean
          readOnly: true
        currency:
          type: string
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - SSP
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
          nullable: true
        attributes:
          type: object
      type: object
      required:
      - name
    dp.Offer:
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          maxLength: 32
      type: object
      required:
      - id
      - name
    dp.POFile:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        error_detail:
          type: string
          readOnly: true
        file:
          type: string
          writeOnly: true
      type: object
      required:
      - file
    dp.Parameter:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        type:
          type: string
          enum:
          - text
          - dropdown
          - password
          - email
          - checkbox
          - subdomain
          - domain
          - address
          - phone
          - object
          - url
          - choice
        scope:
          type: string
          enum:
          - asset
          - tier1
          - tier2
          - product
          - item
          - marketplace
          - item_marketplace
        phase:
          type: string
          enum:
          - configuration
          - fulfillment
          - ordering
        hint:
          type: string
        default:
          type: object
        placeholder:
          type: string
        constraints:
          type: object
          properties:
            required:
              type: boolean
            hidden:
              type: boolean
            unique:
              type: boolean
            shared:
              type: boolean
            reconciliation:
              type: boolean
            min_length:
              type: integer
            max_length:
              type: integer
            choices:
              type: array
              items:
                type: string
          readOnly: true
      type: object
      required:
      - name
      - title
    dp.ParameterCreate:
      properties:
        name:
          type: string
          maxLength: 100
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        type:
          type: string
          enum:
          - text
          - dropdown
          - password
          - email
          - checkbox
          - subdomain
          - domain
          - address
          - phone
          - object
          - url
          - choice
        scope:
          type: string
          enum:
          - asset
          - tier1
          - tier2
          - product
          - item
          - marketplace
          - item_marketplace
        phase:
          type: string
          enum:
          - configuration
          - fulfillment
          - ordering
        constraints:
          type: object
        hint:
          type: string
        default:
          type: object
        placeholder:
          type: string
      type: object
      required:
      - name
      - title
      - constraints
    dp.ParameterRead:
      properties:
        id:
          type: string
        name:
          type: string
          maxLength: 100
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        type:
          type: string
          enum:
          - text
          - dropdown
          - password
          - email
          - checkbox
          - subdomain
          - domain
          - address
          - phone
          - object
          - url
          - choice
        scope:
          type: string
          enum:
          - asset
          - tier1
          - tier2
          - product
          - item
          - marketplace
          - item_marketplace
        phase:
          type: string
          enum:
          - configuration
          - fulfillment
          - ordering
        hint:
          type: string
        default:
          type: object
        placeholder:
          type: string
        constraints:
          type: object
          properties:
            required:
              type: boolean
            hidden:
              type: boolean
            unique:
              type: boolean
            shared:
              type: boolean
            reconciliation:
              type: boolean
            min_length:
              type: integer
            max_length:
              type: integer
            choices:
              type: array
              items:
                type: string
          readOnly: true
        position:
          type: integer
          maximum: 4294967295
          format: int64
          nullable: true
          minimum: 0
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
      required:
      - id
      - name
      - title
    dp.ParameterUpdate:
      properties:
        title:
          type: string
        description:
          type: string
          nullable: true
        type:
          type: string
          enum:
          - text
          - dropdown
          - password
          - email
          - checkbox
          - subdomain
          - domain
          - address
          - phone
          - object
          - url
          - choice
        scope:
          type: string
          enum:
          - asset
          - tier1
          - tier2
          - product
          - item
          - marketplace
          - item_marketplace
        phase:
          type: string
          enum:
          - configuration
          - fulfillment
          - ordering
        constraints:
          type: object
        hint:
          type: string
        default:
          type: object
        placeholder:
          type: string
      type: object
    dp.ParameterWrite:
      properties:
        id:
          type: string
          writeOnly: true
        value:
          type: string
          writeOnly: true
          nullable: true
        structured_value:
          type: object
          writeOnly: true
          nullable: true
        value_error:
          type: string
          writeOnly: true
          nullable: true
      type: object
      required:
      - id
    dp.Partner:
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        icon:
          readOnly: true
        type:
          type: string
        description:
          type: string
        overview:
          type: string
        headquarters:
          type: string
        countries:
          type: array
          items: {}
        languages:
          type: object
        websites:
          type: object
        stats:
          $ref: '#/components/schemas/dp.PartnerStats'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/dp.PartnerContact'
          readOnly: true
        industries:
          type: array
          items:
            $ref: '#/components/schemas/dp.PartnerIndustry'
          readOnly: true
        public:
          type: object
      type: object
      required:
      - id
      - name
      - status
      - type
      - description
      - overview
      - headquarters
      - countries
      - languages
      - websites
      - stats
      - public
    dp.PartnerContact:
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        tags:
          type: array
          items:
            $ref: '#/components/schemas/dp.PartnerContactTag'
          readOnly: true
      type: object
      required:
      - id
      - name
      - email
    dp.PartnerContactTag:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 32
      type: object
      required:
      - name
    dp.PartnerContractsStats:
      properties:
        distribution:
          type: integer
        program:
          type: integer
        service:
          type: integer
        syndication:
          type: integer
      type: object
      required:
      - distribution
      - program
      - service
      - syndication
    dp.PartnerIndustry:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
      type: object
      required:
      - name
    dp.PartnerStats:
      properties:
        contracts:
          $ref: '#/components/schemas/dp.PartnerContractsStats'
        listings:
          type: integer
      type: object
      required:
      - contracts
      - listings
    dp.PayAsYouGo:
      properties:
        ppu:
          type: boolean
          writeOnly: true
        schema:
          type: string
          enum:
          - TR
          - CR
          - PR
          - QT
        dynamic:
          type: boolean
        predictive:
          type: boolean
        future:
          type: boolean
      type: object
      required:
      - ppu
    dp.PortalUserReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
      type: object
    dp.PriceList:
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          maxLength: 512
        status:
          type: string
          enum:
          - draft
          - scheduled
          - active
          - terminated
      type: object
      required:
      - id
      - name
      - status
    dp.Product:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        icon:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        replacement:
          $ref: '#/components/schemas/dp.ReplacementProduct'
          readOnly: true
        end_of_sale_notes:
          type: string
          nullable: true
        short_description:
          type: string
          readOnly: true
        detailed_description:
          type: string
          readOnly: true
        configurations:
          type: object
          properties:
            suspend_resume_supported:
              type: boolean
            requires_reseller_information:
              type: boolean
          readOnly: true
        customer_ui_settings:
          $ref: '#/components/schemas/dp.ApplicationUI'
          readOnly: true
        version:
          type: integer
          readOnly: true
        category:
          $ref: '#/components/schemas/dp.CategoryReference'
        published_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          $ref: '#/components/schemas/dp.CompanyReference'
        latest:
          type: boolean
          readOnly: true
        media:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            thumbnail:
              type: string
            url:
              type: string
          readOnly: true
        usage_rule:
          type: object
          properties:
            enabled:
              type: boolean
            providers:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
          readOnly: true
        sourcing:
          type: object
          properties:
            agreements:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  marketplace:
                    type: object
                    properties:
                      id:
                        type: string
                      icon:
                        type: string
                      name:
                        type: string
          readOnly: true
        stats:
          type: object
          properties:
            versions:
              type: integer
          readOnly: true
        capabilities:
          $ref: '#/components/schemas/dp.VirtualCapabilities'
          readOnly: true
        visibility:
          type: object
          properties:
            owner:
              type: boolean
            listing:
              type: boolean
            syndication:
              type: boolean
            catalog:
              type: boolean
          readOnly: true
        changes_description:
          type: string
          readOnly: true
          description: Change log for product version
        public:
          type: boolean
          readOnly: true
          description: Is version available for Providers
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        extensions:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            status:
              type: string
            package_url:
              type: string
          readOnly: true
      type: object
    dp.ProductActions:
      properties:
        action:
          type: string
          maxLength: 100
        name:
          type: string
        type:
          type: string
        scope:
          type: string
        description:
          type: string
          maxLength: 300
        id:
          type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        title:
          type: string
      type: object
      required:
      - action
      - name
      - type
      - scope
      - description
    dp.ProductCreate:
      properties:
        name:
          type: string
        category:
          $ref: '#/components/schemas/dp.CategoryWrite'
      type: object
      required:
      - name
      - category
    dp.ProductLocalizationsCreate:
      properties:
        id:
          type: string
          writeOnly: true
        name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        error_detail:
          type: string
          readOnly: true
      type: object
      required:
      - id
    dp.ProductLocalizationsRead:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        error_detail:
          type: string
          readOnly: true
      type: object
    dp.ProductReference:
      properties:
        id:
          type: string
        icon:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
      type: object
      required:
      - id
    dp.ProductSourcingAgreement:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - program
          - service
          - syndication
          - referral
        title:
          type: string
          maxLength: 100
        description:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        link:
          type: string
          format: uri
          writeOnly: true
        owner:
          $ref: '#/components/schemas/dp.CompanyReference'
        version:
          $ref: '#/components/schemas/dp.AVersion'
      type: object
      required:
      - type
      - title
      - description
      - link
    dp.ProductTemplates:
      properties:
        id:
          type: string
          readOnly: true
        title:
          type: string
        name:
          type: string
        body:
          type: string
        scope:
          type: string
          enum:
          - asset
          - tier1
          - tier2
        type:
          type: string
          enum:
          - inquire
          - fulfillment
          nullable: true
        position:
          type: integer
          maximum: 4294967295
          format: int64
          nullable: true
          minimum: 0
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
      required:
      - name
    dp.ProductTemplatesUpdate:
      properties:
        name:
          type: string
        body:
          type: string
      type: object
    dp.ProductUpdate:
      properties:
        usage_rule:
          type: object
        name:
          type: string
        short_description:
          type: string
        detailed_description:
          type: string
        category:
          $ref: '#/components/schemas/dp.CategoryWrite'
        icon:
          type: string
          format: binary
        capabilities:
          $ref: '#/components/schemas/dp.VirtualCapabilities'
        customer_ui_settings:
          type: object
      type: object
    dp.ProductVersionCreateUpdate:
      properties:
        changes_description:
          type: string
          writeOnly: true
          description: Change log for product version
        public:
          type: boolean
          writeOnly: true
          description: Is version available for Providers
      type: object
      description: Product version serializer for CREATE and UPDATE operations
    dp.ProductVersionMediaCreate:
      properties:
        position:
          type: integer
          maximum: 8
          minimum: 1
        type:
          type: string
          enum:
          - image
          - video
        thumbnail:
          type: string
          format: binary
        url:
          type: string
          format: uri
      type: object
      required:
      - position
      - type
      - thumbnail
    dp.ProductVersionMediaUpdate:
      properties:
        type:
          type: string
          enum:
          - image
          - video
        thumbnail:
          type: string
          format: binary
        url:
          type: string
          format: uri
      type: object
    dp.Referral:
      properties:
        agreement:
          $ref: '#/components/schemas/dp.AgreementReference'
        product:
          $ref: '#/components/schemas/dp.ProductReference'
        marketplace:
          $ref: '#/components/schemas/dp.MarketplaceReference'
        account:
          $ref: '#/components/schemas/dp.CompanyReference'
          readOnly: true
      type: object
      required:
      - agreement
      - product
      - marketplace
    dp.RegenerateSecret:
      properties:
        jwt_secret:
          type: string
          readOnly: true
      type: object
      description: Serializer class for regenerate secret key
    dp.ReplacementProduct:
      properties:
        id:
          type: string
          readOnly: true
          description: Product or Product Version ID
        icon:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
      type: object
    dp.RequestReference:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - purchase
          - cancel
          - change
          - suspend
          - resume
        status:
          type: string
          enum:
          - draft
          - tiers_setup
          - pending
          - inquiring
          - approved
          - failed
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
          readOnly: true
        assignee:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
          readOnly: true
      type: object
    dp.Reservation:
      properties:
        consumption:
          type: boolean
      type: object
    dp.Subscription:
      properties:
        hold:
          type: boolean
        schema:
          type: string
          enum:
          - explicit
          - evergreen
      type: object
    dp.TemplateReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
      type: object
      required:
      - name
    dp.TierAccountCreate:
      properties:
        id:
          type: string
        type:
          type: string
        external_uid:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
        parent:
          $ref: '#/components/schemas/dp.IdWrite'
        name:
          type: string
        hub:
          $ref: '#/components/schemas/dp.IdWrite'
        contact_info:
          type: object
          required:
          - address_line1
          - city
          - postal_code
          - country
          - contact
          properties:
            address_line1:
              type: string
            address_line2:
              type: string
            city:
              type: string
            state:
              type: string
            postal_code:
              type: string
            country:
              type: string
            contact:
              type: object
              required:
              - first_name
              - last_name
              - email
              - phone_number
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                phone_number:
                  type: object
                  properties:
                    country_code:
                      type: string
                    area_code:
                      type: string
                    phone_number:
                      type: string
                    extension:
                      type: string
        tax_id:
          type: string
          nullable: true
      type: object
    dp.TierAccountDetail:
      properties:
        id:
          type: string
          readOnly: true
        version:
          type: integer
          readOnly: true
        name:
          type: string
        type:
          type: string
          enum:
          - customer
          - reseller
        external_id:
          type: string
          nullable: true
          maxLength: 255
        external_uid:
          type: string
          nullable: true
          maxLength: 255
        parent:
          $ref: '#/components/schemas/dp.TierAccountReference'
        scopes:
          type: array
          items:
            type: string
          readOnly: true
        hub:
          $ref: '#/components/schemas/dp.HubReference'
          readOnly: true
        tax_id:
          type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        contact_info:
          type: object
          required:
          - address_line1
          - city
          - postal_code
          - country
          - contact
          properties:
            address_line1:
              type: string
            address_line2:
              type: string
            city:
              type: string
            state:
              type: string
            postal_code:
              type: string
            country:
              type: string
            contact:
              type: object
              required:
              - first_name
              - last_name
              - email
              - phone_number
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                phone_number:
                  type: object
                  properties:
                    country_code:
                      type: string
                    area_code:
                      type: string
                    phone_number:
                      type: string
                    extension:
                      type: string
          readOnly: true
      type: object
      required:
      - name
      - parent
    dp.TierAccountReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        external_id:
          type: string
          nullable: true
          maxLength: 255
      type: object
    dp.TierAccountRequest:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - update
        status:
          type: string
          enum:
          - pending
          - accepted
          - ignored
          - unsupported
        account:
          $ref: '#/components/schemas/dp.TierAccountVersion'
          readOnly: true
        vendor:
          $ref: '#/components/schemas/dp.CompanyReference'
          readOnly: true
        provider:
          $ref: '#/components/schemas/dp.CompanyReference'
        product:
          $ref: '#/components/schemas/dp.ProductReference'
        reason:
          type: string
          nullable: true
          maxLength: 255
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
      required:
      - type
      - status
    dp.TierAccountRequestCreate:
      properties:
        type:
          type: string
          enum:
          - update
      type: object
      required:
      - type
    dp.TierAccountUpdate:
      properties:
        type:
          type: string
        external_uid:
          type: string
        external_id:
          type: string
        parent:
          $ref: '#/components/schemas/dp.IdWrite'
        name:
          type: string
        contact_info:
          type: object
          required:
          - address_line1
          - city
          - postal_code
          - country
          - contact
          properties:
            address_line1:
              type: string
            address_line2:
              type: string
            city:
              type: string
            state:
              type: string
            postal_code:
              type: string
            country:
              type: string
            contact:
              type: object
              required:
              - first_name
              - last_name
              - email
              - phone_number
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                phone_number:
                  type: object
                  properties:
                    country_code:
                      type: string
                    area_code:
                      type: string
                    phone_number:
                      type: string
                    extension:
                      type: string
        tax_id:
          type: string
          nullable: true
      type: object
    dp.TierAccountVersion:
      properties:
        id:
          type: string
        version:
          type: integer
        name:
          type: string
        type:
          type: string
        external_id:
          type: string
        external_uid:
          type: string
          readOnly: true
        parent:
          $ref: '#/components/schemas/dp.TierAccountReference'
          readOnly: true
        scopes:
          type: array
          items:
            type: string
          readOnly: true
        hub:
          $ref: '#/components/schemas/dp.HubReference'
          readOnly: true
        tax_id:
          type: string
        contact_info:
          type: object
          required:
          - address_line1
          - city
          - postal_code
          - country
          - contact
          properties:
            address_line1:
              type: string
            address_line2:
              type: string
            city:
              type: string
            state:
              type: string
            postal_code:
              type: string
            country:
              type: string
            contact:
              type: object
              required:
              - first_name
              - last_name
              - email
              - phone_number
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                phone_number:
                  type: object
                  properties:
                    country_code:
                      type: string
                    area_code:
                      type: string
                    phone_number:
                      type: string
                    extension:
                      type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
      required:
      - id
      - version
      - name
      - type
      - external_id
      - tax_id
    dp.TierAccountWithOwnerDetail:
      properties:
        id:
          type: string
          readOnly: true
        version:
          type: integer
          readOnly: true
        name:
          type: string
        type:
          type: string
          enum:
          - customer
          - reseller
        external_id:
          type: string
          nullable: true
          maxLength: 255
        external_uid:
          type: string
          nullable: true
          maxLength: 255
        parent:
          $ref: '#/components/schemas/dp.TierAccountReference'
        scopes:
          type: array
          items:
            type: string
          readOnly: true
        hub:
          $ref: '#/components/schemas/dp.HubReference'
          readOnly: true
        tax_id:
          type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        contact_info:
          type: object
          required:
          - address_line1
          - city
          - postal_code
          - country
          - contact
          properties:
            address_line1:
              type: string
            address_line2:
              type: string
            city:
              type: string
            state:
              type: string
            postal_code:
              type: string
            country:
              type: string
            contact:
              type: object
              required:
              - first_name
              - last_name
              - email
              - phone_number
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                phone_number:
                  type: object
                  properties:
                    country_code:
                      type: string
                    area_code:
                      type: string
                    phone_number:
                      type: string
                    extension:
                      type: string
          readOnly: true
        owner:
          $ref: '#/components/schemas/dp.CompanyReference'
          readOnly: true
      type: object
      required:
      - name
      - parent
    dp.TierConfigCreate:
      properties:
        product:
          $ref: '#/components/schemas/dp.CreateObjectID'
        tier_level:
          type: string
          enum:
          - 1
          - 2
        connection:
          $ref: '#/components/schemas/dp.ConnectionWrite'
        marketplace:
          $ref: '#/components/schemas/dp.MarketplaceReference'
      type: object
      required:
      - product
      - tier_level
    dp.TierConfigRequestRead:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - setup
          - update
        status:
          type: string
          enum:
          - tiers_setup
          - pending
          - inquiring
          - approved
          - failed
        configuration:
          $ref: '#/components/schemas/dp.TierConfiguration'
          readOnly: true
        parent_configuration:
          $ref: '#/components/schemas/dp.TierConfiguration'
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            inquired:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            pended:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        params:
          type: array
          items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                title:
                  type: string
                description:
                  type: string
                value:
                  type: string
                value_error:
                  type: string
                type:
                  type: string
                  enum:
                  - text
                  - dropdown
                  - password
                  - email
                  - checkbox
                  - subdomain
                  - domain
                  - phone
                  - url
                  - choice
                scope:
                  type: string
                  enum:
                  - asset
                  - tier1
                  - tier2
                phase:
                  type: string
                  enum:
                  - fulfillment
                  - ordering
                contraints:
                  type: object
                  properties:
                    required:
                      type: boolean
                    hidden:
                      type: boolean
                    unique:
                      type: boolean
                    reconciliation:
                      type: boolean
                    shared:
                      type: string
                      enum:
                      - view
                      - edit
                    choices:
                      type: array
                      items:
                        type: object
                        properties:
                          label:
                            type: string
                          value:
                            type: string
        assignee:
          $ref: '#/components/schemas/dp.UnifiedUserReference'
        template:
          $ref: '#/components/schemas/dp.TemplateReference'
        reason:
          type: string
          nullable: true
        activation:
          type: object
          properties:
            link:
              type: string
          readOnly: true
        notes:
          type: string
          nullable: true
        environment:
          type: string
          readOnly: true
        tiers:
          type: object
          properties:
            tier1:
              type: object
              properties:
                external_id:
                  type: string
                external_uid:
                  type: string
                name:
                  type: string
                tax_id:
                  type: string
                contact_info:
                  type: object
                  required: &id064
                  - address_line1
                  - city
                  - postal_code
                  - country
                  - contact
                  properties:
                    address_line1:
                      type: string
                    address_line2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    postal_code:
                      type: string
                    country:
                      type: string
                    contact:
                      type: object
                      required: &id065
                      - first_name
                      - last_name
                      - email
                      - phone_number
                      properties:
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                          format: email
                        phone_number:
                          type: object
                          properties:
                            country_code:
                              type: string
                            area_code:
                              type: string
                            phone_number:
                              type: string
                            extension:
                              type: string
            tier2:
              type: object
              properties:
                external_id:
                  type: string
                external_uid:
                  type: string
                name:
                  type: string
                tax_id:
                  type: string
                contact_info:
                  type: object
                  required: *id064
                  properties:
                    address_line1:
                      type: string
                    address_line2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    postal_code:
                      type: string
                    country:
                      type: string
                    contact:
                      type: object
                      required: *id065
                      properties:
                        first_name:
                          type: string
                        last_name:
                          type: string
                        email:
                          type: string
                          format: email
                        phone_number:
                          type: object
                          properties:
                            country_code:
                              type: string
                            area_code:
                              type: string
                            phone_number:
                              type: string
                            extension:
                              type: string
          readOnly: true
      type: object
      required:
      - type
      - params
      - assignee
      - template
      - reason
    dp.TierConfigRequestReference:
      properties:
        id:
          type: string
          readOnly: true
      type: object
    dp.TierConfigRequestUpdate:
      properties:
        params:
          type: array
          items:
            $ref: '#/components/schemas/dp.ParameterWrite'
          writeOnly: true
          maxItems: 50
          minItems: 0
        notes:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 2000
      type: object
    dp.TierConfigSetupRequestCreate:
      properties:
        configuration:
          $ref: '#/components/schemas/dp.TierConfigCreate'
        params:
          type: array
          items:
            $ref: '#/components/schemas/dp.ParameterWrite'
          writeOnly: true
          maxItems: 50
          minItems: 0
      type: object
      required:
      - configuration
    dp.TierConfiguration:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
        account:
          type: object
          properties:
            external_id:
              type: string
            external_uid:
              type: string
            name:
              type: string
            tax_id:
              type: string
            contact_info:
              type: object
              required:
              - address_line1
              - city
              - postal_code
              - country
              - contact
              properties:
                address_line1:
                  type: string
                address_line2:
                  type: string
                city:
                  type: string
                state:
                  type: string
                postal_code:
                  type: string
                country:
                  type: string
                contact:
                  type: object
                  required:
                  - first_name
                  - last_name
                  - email
                  - phone_number
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                      format: email
                    phone_number:
                      type: object
                      properties:
                        country_code:
                          type: string
                        area_code:
                          type: string
                        phone_number:
                          type: string
                        extension:
                          type: string
          readOnly: true
        product:
          $ref: '#/components/schemas/dp.ProductReference'
        tier_level:
          type: string
          enum:
          - 1
          - 2
          minimum: -2147483648
          maximum: 2147483647
        connection:
          type: object
          properties:
            id:
              type: string
            provider:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
            vendor:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
            type:
              type: string
              enum:
              - preview
              - test
              - production
            hub:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        params:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              description:
                type: string
              value:
                type: string
              value_error:
                type: string
              type:
                type: string
                enum:
                - text
                - dropdown
                - password
                - email
                - checkbox
                - subdomain
                - domain
                - phone
                - url
                - choice
              scope:
                type: string
                enum:
                - asset
                - tier1
                - tier2
              phase:
                type: string
                enum:
                - fulfillment
                - ordering
              contraints:
                type: object
                properties:
                  required:
                    type: boolean
                  hidden:
                    type: boolean
                  unique:
                    type: boolean
                  reconciliation:
                    type: boolean
                  shared:
                    type: string
                    enum:
                    - view
                    - edit
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
          readOnly: true
        template:
          $ref: '#/components/schemas/dp.TemplateReference'
        open_request:
          $ref: '#/components/schemas/dp.TierConfigRequestReference'
        status:
          type: string
          enum:
          - active
          - processing
          readOnly: true
        configuration:
          type: object
          properties:
            params:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  value:
                    type: string
                  type:
                    type: string
                    enum:
                    - text
                    - dropdown
                    - password
                    - email
                    - checkbox
                    - subdomain
                    - domain
                    - phone
                    - url
                    - choice
                  scope:
                    type: string
                    enum:
                    - product
                    - item
                    - marketplace
                    - item_marketplace
                  phase:
                    type: string
                    enum:
                    - configuration
                  contraints:
                    type: object
                    properties:
                      required:
                        type: boolean
                      hidden:
                        type: boolean
                      unique:
                        type: boolean
                      shared:
                        type: string
                        enum:
                        - view
                        - edit
                  events:
                    type: object
                    properties:
                      created:
                        type: object
                        properties:
                          at:
                            type: string
                            format: datetime
                          by:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      updated:
                        type: object
                        properties:
                          at:
                            type: string
                            format: datetime
                          by:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
          readOnly: true
        contract:
          $ref: '#/components/schemas/dp.ContractReference'
          readOnly: true
        marketplace:
          $ref: '#/components/schemas/dp.MarketplaceReference'
          readOnly: true
      type: object
      required:
      - id
      - product
      - tier_level
      - template
      - open_request
    dp.TierConfigurationDetail:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
        account:
          type: object
          properties:
            external_id:
              type: string
            external_uid:
              type: string
            name:
              type: string
            tax_id:
              type: string
            contact_info:
              type: object
              required:
              - address_line1
              - city
              - postal_code
              - country
              - contact
              properties:
                address_line1:
                  type: string
                address_line2:
                  type: string
                city:
                  type: string
                state:
                  type: string
                postal_code:
                  type: string
                country:
                  type: string
                contact:
                  type: object
                  required:
                  - first_name
                  - last_name
                  - email
                  - phone_number
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                      format: email
                    phone_number:
                      type: object
                      properties:
                        country_code:
                          type: string
                        area_code:
                          type: string
                        phone_number:
                          type: string
                        extension:
                          type: string
          readOnly: true
        product:
          $ref: '#/components/schemas/dp.ProductReference'
        tier_level:
          type: string
          enum:
          - 1
          - 2
          minimum: -2147483648
          maximum: 2147483647
        connection:
          type: object
          properties:
            id:
              type: string
            provider:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
            vendor:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
            type:
              type: string
              enum:
              - preview
              - test
              - production
            hub:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        params:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              description:
                type: string
              value:
                type: string
              value_error:
                type: string
              type:
                type: string
                enum:
                - text
                - dropdown
                - password
                - email
                - checkbox
                - subdomain
                - domain
                - phone
                - url
                - choice
              scope:
                type: string
                enum:
                - asset
                - tier1
                - tier2
              phase:
                type: string
                enum:
                - fulfillment
                - ordering
              contraints:
                type: object
                properties:
                  required:
                    type: boolean
                  hidden:
                    type: boolean
                  unique:
                    type: boolean
                  reconciliation:
                    type: boolean
                  shared:
                    type: string
                    enum:
                    - view
                    - edit
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        value:
                          type: string
          readOnly: true
        template:
          $ref: '#/components/schemas/dp.TemplateReference'
        open_request:
          $ref: '#/components/schemas/dp.TierConfigRequestReference'
        status:
          type: string
          enum:
          - active
          - processing
          readOnly: true
        configuration:
          type: object
          properties:
            params:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  value:
                    type: string
                  type:
                    type: string
                    enum:
                    - text
                    - dropdown
                    - password
                    - email
                    - checkbox
                    - subdomain
                    - domain
                    - phone
                    - url
                    - choice
                  scope:
                    type: string
                    enum:
                    - product
                    - item
                    - marketplace
                    - item_marketplace
                  phase:
                    type: string
                    enum:
                    - configuration
                  contraints:
                    type: object
                    properties:
                      required:
                        type: boolean
                      hidden:
                        type: boolean
                      unique:
                        type: boolean
                      shared:
                        type: string
                        enum:
                        - view
                        - edit
                  events:
                    type: object
                    properties:
                      created:
                        type: object
                        properties:
                          at:
                            type: string
                            format: datetime
                          by:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                      updated:
                        type: object
                        properties:
                          at:
                            type: string
                            format: datetime
                          by:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
          readOnly: true
        contract:
          $ref: '#/components/schemas/dp.ContractReference'
          readOnly: true
        marketplace:
          $ref: '#/components/schemas/dp.MarketplaceReference'
          readOnly: true
        tiers:
          type: string
          readOnly: true
      type: object
      required:
      - id
      - product
      - tier_level
      - template
      - open_request
    dp.Tiers:
      properties:
        updates:
          type: boolean
        configs:
          $ref: '#/components/schemas/dp.TiersConfigs'
      type: object
    dp.TiersConfigs:
      properties:
        configs:
          type: boolean
          writeOnly: true
        level:
          type: string
          enum:
          - 1
          - 2
      type: object
      required:
      - configs
    dp.UIAppMeta:
      properties:
        title:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        visible_for:
          type: string
          readOnly: true
      type: object
    dp.UIItem:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - draft
          - published
          - endofsale
        unit:
          $ref: '#/components/schemas/dp.Unit'
          readOnly: true
        mpn:
          type: string
          nullable: true
        position:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        local_id:
          type: string
          readOnly: true
        display_name:
          type: string
          maxLength: 255
        period:
          type: string
          readOnly: true
        precision:
          type: string
          readOnly: true
        commitment:
          type: object
          properties:
            multiplier:
              type: string
            count:
              type: integer
          readOnly: true
        dynamic:
          type: boolean
        replacement:
          $ref: '#/components/schemas/dp.ItemReferenceWithStatus'
        end_of_sale_notes:
          type: string
          nullable: true
        ui:
          $ref: '#/components/schemas/dp.UIVisibility'
          readOnly: true
        ui_visibility:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        parent:
          $ref: '#/components/schemas/dp.ItemReferenceWithStatus'
        depth:
          type: integer
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            saleended:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
      required:
      - display_name
      - replacement
      - parent
    dp.UILocale:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
      type: object
      required:
      - id
    dp.UIVisibility:
      properties:
        visibility:
          type: boolean
          readOnly: true
      type: object
    dp.UnifiedUserReference:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
      required:
      - id
    dp.Unit:
      properties:
        id:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 255
        title:
          type: string
          maxLength: 255
        unit:
          type: string
          maxLength: 64
      type: object
      required:
      - id
      - name
      - title
    dp.VirtualCapabilities:
      properties:
        ppu:
          $ref: '#/components/schemas/dp.PayAsYouGo'
        reservation:
          $ref: '#/components/schemas/dp.Reservation'
        cart:
          $ref: '#/components/schemas/dp.Cart'
        inquiring:
          $ref: '#/components/schemas/dp.Inquiring'
        tiers:
          $ref: '#/components/schemas/dp.Tiers'
        subscription:
          $ref: '#/components/schemas/dp.Subscription'
      type: object
    helpdesk.Account:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
        icon:
          type: string
          readOnly: true
      type: object
      description: Description of the *Account* model.
      required:
      - id
    helpdesk.AccountSettings:
      properties:
        ttl:
          type: integer
          maximum: 2147483647
          description: Number of days after which case will be closed
          minimum: 0
        mode:
          type: string
          enum:
          - builtin
          - federated
        instructions:
          type: string
          nullable: true
          maxLength: 5000
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
    helpdesk.Actor:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
      type: object
      description: Description of the *User* model.
      required:
      - id
    helpdesk.Attachment:
      properties:
        id:
          type: string
          readOnly: true
        account:
          $ref: '#/components/schemas/helpdesk.Account'
        attachment:
          type: string
          format: binary
        size:
          type: string
          readOnly: true
        preview:
          type: string
          format: binary
          readOnly: true
        name:
          type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      type: object
      description: Description of the *Attachment* model.
      required:
      - attachment
    helpdesk.Case:
      properties:
        id:
          type: string
          readOnly: true
        product:
          $ref: '#/components/schemas/helpdesk.Product'
        subject:
          type: string
          maxLength: 300
        description:
          type: string
          maxLength: 10000
        priority:
          type: string
          enum:
          - 0
          - 1
          - 2
          - 3
          minimum: -2147483648
          maximum: 2147483647
        state:
          type: string
          enum:
          - pending
          - inquiring
          - resolved
          - closed
        type:
          type: string
          enum:
          - technical
          - business
        issuer:
          $ref: '#/components/schemas/helpdesk.Issuer'
        receiver:
          $ref: '#/components/schemas/helpdesk.Receiver'
        events:
          type: string
          readOnly: true
        rating:
          type: string
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          readOnly: true
        feedback:
          type: string
          readOnly: true
      type: object
      description: Description of the *Case* model.
      required:
      - subject
      - description
      - type
      - receiver
    helpdesk.Issuer:
      properties:
        account:
          $ref: '#/components/schemas/helpdesk.Account'
        agent:
          $ref: '#/components/schemas/helpdesk.Actor'
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/helpdesk.Actor'
      type: object
    helpdesk.Product:
      properties:
        id:
          type: string
        name:
          type: string
          readOnly: true
        icon:
          type: string
          readOnly: true
      type: object
      description: Description of the *Product* model.
      required:
      - id
    helpdesk.Receiver:
      properties:
        account:
          $ref: '#/components/schemas/helpdesk.Account'
        agent:
          $ref: '#/components/schemas/helpdesk.Actor'
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/helpdesk.Actor'
      type: object
      required:
      - account
    ns.Account:
      properties:
        id:
          type: string
          maxLength: 100
        name:
          type: string
          maxLength: 100
      type: object
      required:
      - id
      - name
    ns.LastTriggerInfo:
      properties:
        time:
          type: string
          format: date-time
        response:
          type: object
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        status:
          type: string
          enum:
          - success
          - failure
        status_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        errors:
          type: string
          readOnly: true
      type: object
      required:
      - response
      - duration
      - status
    ns.Product:
      properties:
        id:
          type: string
          maxLength: 100
        name:
          type: string
          maxLength: 100
        icon:
          type: string
          maxLength: 2000
      type: object
      required:
      - id
      - name
    ns.Stats:
      properties:
        events:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        triggers:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        success_triggers:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        failure_triggers:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        failure_since_last_success:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      type: object
    ns.User:
      properties:
        id:
          type: string
          maxLength: 100
        name:
          type: string
          maxLength: 100
        email:
          type: string
          maxLength: 50
      type: object
      required:
      - id
      - name
    ns.Webhook:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - event
          - validator
          - inquiring_validator
          default: event
        object_class:
          type: string
          enum:
          - fulfillment_request
          - tier_config_request
          - tier_account_request
          - listing_request
          - billing_request
          - usage_file
        label:
          type: string
        active:
          type: boolean
        external_url:
          type: string
          format: uri
        jwt_secret:
          type: string
        description:
          type: string
        http_method:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/ns.User'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        modified_by:
          $ref: '#/components/schemas/ns.User'
        product:
          $ref: '#/components/schemas/ns.Product'
        account:
          $ref: '#/components/schemas/ns.Account'
        data:
          type: object
        headers:
          type: object
        earliest_possible_trigger:
          type: string
          format: date-time
          readOnly: true
        stats:
          $ref: '#/components/schemas/ns.Stats'
        last_event:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        last_success:
          $ref: '#/components/schemas/ns.LastTriggerInfo'
        last_failure:
          $ref: '#/components/schemas/ns.LastTriggerInfo'
        api_url:
          type: string
          format: uri
          readOnly: true
      type: object
      required:
      - label
      - active
      - external_url
      - jwt_secret
      - description
      - http_method
      - data
      - headers
    offers.Account:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 64
      type: object
      description: Account representation.
      required:
      - name
    offers.Feature:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 256
        description:
          type: string
          nullable: true
        position:
          type: integer
          readOnly: true
        gravity:
          type: object
          writeOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        group:
          type: string
        plans:
          type: array
          items:
            type: string
      type: object
      description: Feature representation.
      required:
      - name
      - group
      - plans
    offers.FeaturesGroup:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 256
        description:
          type: string
          nullable: true
        position:
          type: integer
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        gravity:
          type: object
          writeOnly: true
      type: object
      description: Feature group representation.
      required:
      - name
    offers.Offer:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 32
        description:
          type: string
          nullable: true
        owner:
          $ref: '#/components/schemas/offers.Account'
        product:
          type: string
        stats:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        changes_description:
          type: string
          readOnly: true
          description: Change log for offer version
        public:
          type: boolean
          readOnly: true
        version:
          type: integer
          readOnly: true
        sample:
          type: boolean
          writeOnly: true
          description: Passed on creation, means should sample offer be created.
      type: object
      required:
      - name
      - product
    offers.OfferItem:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 32
        description:
          type: string
          nullable: true
        plans:
          type: string
          nullable: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
      description: Offer Item representation
      required:
      - name
    offers.OfferVersion:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        owner:
          $ref: '#/components/schemas/offers.Account'
        product:
          type: string
          readOnly: true
        stats:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
        changes_description:
          type: string
          nullable: true
          description: Change log for offer version
        public:
          type: boolean
        version:
          type: integer
          readOnly: true
      type: object
      description: Offer representation. Field 'stats.listings' is accessed only by
        Vendor.
    offers.Plan:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 32
        color:
          type: string
          maxLength: 32
        periods:
          type: array
          items:
            type: string
        description:
          type: string
          nullable: true
        position:
          type: integer
          readOnly: true
        gravity:
          type: object
          writeOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: datetime
                by:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
          readOnly: true
      type: object
      description: Plan representation
      required:
      - name
      - color
      - periods
    pricing.Account:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 64
      type: object
      required:
      - name
    pricing.Action:
      properties: {}
      type: object
      description: POST action data
    pricing.Actor:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
      type: object
      description: User or Account Token representation.
    pricing.Item:
      properties:
        global_id:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        mpn:
          type: string
          readOnly: true
        product:
          $ref: '#/components/schemas/pricing.Product'
      type: object
      description: Product Item representation.
    pricing.PriceAdjustment:
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - processing
          - success
          - partial
          - failed
          readOnly: true
        uploaded_file:
          type: string
          format: uri-reference
          description: Link to XLSX bulk data update file.
        processed_file:
          type: string
          format: uri-reference
          readOnly: true
          description: Link to XLSX file with processing results.
        error_detail:
          type: string
          readOnly: true
          description: Description of file format level parse errors.
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
                by:
                  $ref: '#/components/schemas/pricing.Actor'
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
          readOnly: true
      type: object
      description: PriceAdjustment representation.
      required:
      - uploaded_file
    pricing.PriceList:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 512
        description:
          type: string
          maxLength: 2048
        currency:
          type: string
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - SSP
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
        precision:
          type: number
          maximum: 0.1
          minimum: 0
          description: Maximum PricePoints precision. Must be power of -10 (0.1, 0.01,
            etc.). Each PricePoint will be checked for precision excess.
        status:
          type: string
          enum:
          - draft
          - scheduled
          - active
          - terminated
          readOnly: true
        owner:
          $ref: '#/components/schemas/pricing.Account'
        attributes:
          items:
            type: object
          minItems: 1
          type: array
          uniqueItems: true
          description: PriceList attributes (columns). This is a array of objects.
            Each object must contain 'name' properties. Property 'description' is
            optional. Property 'id' is allowed for update only. Property 'name' must
            match pattern '^(Price|Suggested T0 Price|Suggested T1 Price|Suggested
            T2 Price|v\..{1:98})$'. At least one attribute must be specified. If specified
            'name' and/or 'description' properties for predefined attributes then
            they will be redefined. Custom attributes 'name' property must start with
            'v.'. Attributes order is equal to XLSX representation column order.
        products:
          type: array
          items:
            properties:
              id:
                type: string
              name:
                readOnly: true
                type: string
              description:
                readOnly: true
                type: string
              icon:
                readOnly: true
                type: string
            required:
            - id
            type: object
        stats:
          type: object
          properties:
            products:
              type: integer
              readOnly: true
            listings:
              type: integer
              readOnly: true
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
                by:
                  $ref: '#/components/schemas/pricing.Actor'
            terminated:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
                by:
                  $ref: '#/components/schemas/pricing.Actor'
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
                by:
                  $ref: '#/components/schemas/pricing.Actor'
          readOnly: true
      type: object
      description: PriceList representation. Field 'stats.listings' is accessed only
        by Vendor.
      required:
      - name
      - description
      - currency
      - attributes
      - products
    pricing.PriceListRelated:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        currency:
          type: string
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYN
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - SSP
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XAG
          - XAU
          - XBA
          - XBB
          - XBC
          - XBD
          - XCD
          - XDR
          - XOF
          - XPD
          - XPF
          - XPT
          - XSU
          - XTS
          - XUA
          - XXX
          - YER
          - ZAR
          - ZMW
          - ZWL
          readOnly: true
        precision:
          type: number
          maximum: 1000000000000000
          minimum: -1000000000000000
          readOnly: true
          description: Maximum PricePoints precision. Must be power of -10 (0.1, 0.01,
            etc.). Each PricePoint will be checked for precision excess.
        status:
          type: string
          enum:
          - draft
          - scheduled
          - active
          - terminated
          readOnly: true
        owner:
          $ref: '#/components/schemas/pricing.Account'
        attributes:
          items:
            type: object
          minItems: 1
          type: array
          uniqueItems: true
          readOnly: true
          description: PriceList attributes (columns). This is a array of objects.
            Each object must contain 'name' properties. Property 'description' is
            optional. Property 'id' is allowed for update only. Property 'name' must
            match pattern '^(Price|Suggested T0 Price|Suggested T1 Price|Suggested
            T2 Price|v\..{1:98})$'. At least one attribute must be specified. If specified
            'name' and/or 'description' properties for predefined attributes then
            they will be redefined. Custom attributes 'name' property must start with
            'v.'. Attributes order is equal to XLSX representation column order.
        stats:
          type: object
          properties:
            products:
              type: integer
              readOnly: true
            listings:
              type: integer
              readOnly: true
          readOnly: true
      type: object
      description: Nested PriceList representation. Field 'stats.listings' is accessed
        only by Vendor.
    pricing.PriceListVersion:
      properties:
        id:
          type: string
          readOnly: true
        description:
          type: string
          maxLength: 2048
        base:
          type: string
          description: Base PriceListVersion (PricePoints are got from that PriceListVersion).
        start_at:
          type: string
          format: date-time
          description: Time when this PriceListVersion is activated (in case of scheduling
            activation in future). PriceListVersions are being activated at begin
            of specified hour.
        status:
          type: string
          enum:
          - processing
          - draft
          - scheduled
          - active
          - expired
          readOnly: true
        pricelist:
          $ref: '#/components/schemas/pricing.PriceListRelated'
        xlsx_file:
          type: string
          format: uri-reference
          readOnly: true
          description: Link to XLSX representation file.
        events:
          type: object
          properties:
            activated:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
                by:
                  $ref: '#/components/schemas/pricing.Actor'
            canceled:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
                by:
                  $ref: '#/components/schemas/pricing.Actor'
            created:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
                by:
                  $ref: '#/components/schemas/pricing.Actor'
            expired:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
                by:
                  $ref: '#/components/schemas/pricing.Actor'
            scheduled:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
                by:
                  $ref: '#/components/schemas/pricing.Actor'
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
                by:
                  $ref: '#/components/schemas/pricing.Actor'
          readOnly: true
      type: object
      description: PriceListVersion representation.
      required:
      - description
      - base
    pricing.PricePoint:
      properties:
        id:
          type: string
          readOnly: true
        item:
          $ref: '#/components/schemas/pricing.Item'
        status:
          type: string
          enum:
          - filled
          - empty
          readOnly: true
        attributes:
          type: object
      type: object
      description: PricePoint representation.
      required:
      - attributes
    pricing.Product:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        icon:
          type: string
          readOnly: true
      type: object
      description: Product representation.
    reporting.AccountReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 64
      type: object
      required:
      - name
    reporting.ActorReference:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
      required:
      - id
      - name
    reporting.GitCredentials:
      properties:
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      type: object
      description: 'Git Credentials.


        Is used to represent input object to request git tags. You need to provide

        `username` and `password` to your git repository as input data.'
    reporting.GitInfo:
      properties:
        url:
          type: string
          format: uri
          maxLength: 200
        tag:
          type: string
          maxLength: 256
        commit:
          type: string
          nullable: true
          maxLength: 64
        auth:
          $ref: '#/components/schemas/reporting.GitCredentials'
      type: object
      description: 'Git Info.


        Is used to represent git repository information'
      required:
      - url
      - tag
    reporting.GitInfoCreate:
      properties:
        url:
          type: string
          format: uri
          maxLength: 200
        tag:
          type: string
          maxLength: 256
        auth:
          $ref: '#/components/schemas/reporting.GitCredentials'
      type: object
      description: 'Git Info.


        Is used to represent git repository information while adding new repository.

        You need to provide `url` and `tag` parameters as input data. Optionally

        you can provide `auth` if your repository requires authentication.'
      required:
      - url
      - tag
    reporting.GitTags:
      properties:
        url:
          type: string
          format: uri
        auth:
          $ref: '#/components/schemas/reporting.GitCredentials'
        tags:
          type: array
          items:
            type: string
      type: object
      description: 'Git Tags.


        Is used to represent repository tags'
      required:
      - url
    reporting.GitTagsRequest:
      properties:
        url:
          type: string
          format: uri
        auth:
          $ref: '#/components/schemas/reporting.GitCredentials'
      type: object
      description: 'Git Tags Request.


        Is used to represent input object to request git tags. You need to provide

        `url` and `auth` as input data.'
      required:
      - url
    reporting.RepoEvent:
      properties:
        at:
          type: string
          readOnly: true
        by:
          $ref: '#/components/schemas/reporting.ActorReference'
          readOnly: true
      type: object
    reporting.RepoEvents:
      properties:
        created:
          $ref: '#/components/schemas/reporting.RepoEvent'
        updated:
          $ref: '#/components/schemas/reporting.RepoEvent'
      type: object
      description: 'Repository events.


        Is used to represent `created` and `updated` properties of the repository'
      required:
      - created
      - updated
    reporting.RepoStats:
      properties:
        templates_count:
          type: integer
          readOnly: true
        monthly_executions:
          type: integer
          readOnly: true
        total_executions:
          type: integer
          readOnly: true
      type: object
      description: 'Repository Stats.


        Is used to represent statistics about repository. `templates_count` -- amount

        of templates registered for this repository, `monthly_executions` -- amount
        of executions

        in current month, `total_executions` -- amount of all executions.'
    reporting.Report:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 512
        description:
          type: string
          nullable: true
          maxLength: 2048
        revision:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        template:
          $ref: '#/components/schemas/reporting.ReportTemplateReference'
        parameters:
          type: object
          nullable: true
        events:
          $ref: '#/components/schemas/reporting.ReportEvents'
        progress:
          $ref: '#/components/schemas/reporting.ReportStatsProgress'
        report_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        timeout:
          type: boolean
        status:
          type: string
          enum:
          - pending
          - deploying
          - running
          - succeeded
          - failed
        timing:
          $ref: '#/components/schemas/reporting.ReportTiming'
        owner:
          $ref: '#/components/schemas/reporting.AccountReference'
        failure_output:
          type: string
          nullable: true
          maxLength: 4096
        schedule:
          $ref: '#/components/schemas/reporting.ReportScheduleReference'
      type: object
      description: 'Report.


        Is used to represent a concrete report execution.'
      required:
      - name
      - template
      - events
      - progress
      - owner
      - schedule
    reporting.ReportCreate:
      properties:
        name:
          type: string
          maxLength: 512
        description:
          type: string
          nullable: true
          maxLength: 2048
        template:
          $ref: '#/components/schemas/reporting.ReportTemplateCreate'
        parameters:
          type: array
          items:
            type: object
          nullable: true
      type: object
      description: 'Create report.


        Is used to create a new report and execute it. You need to provide the `name`,

        `description` and `template` data as input. You also can optionally provide
        list

        of parameters in `parameters` section.'
      required:
      - name
      - template
    reporting.ReportEvent:
      properties:
        at:
          type: string
          readOnly: true
        by:
          $ref: '#/components/schemas/reporting.ActorReference'
          readOnly: true
      type: object
    reporting.ReportEvents:
      properties:
        created:
          $ref: '#/components/schemas/reporting.ReportEvent'
        updated:
          $ref: '#/components/schemas/reporting.ReportEvent'
        started:
          $ref: '#/components/schemas/reporting.ReportEvent'
        terminated:
          $ref: '#/components/schemas/reporting.ReportEvent'
      type: object
      description: 'Report events.


        Is used to represent `created`, `updated`, `started` and `terminated` properties
        of the report'
      required:
      - created
      - updated
      - started
      - terminated
    reporting.ReportFail:
      properties:
        notes:
          type: string
        block:
          type: boolean
      type: object
      description: 'Fail report.


        Is used to fail a concrete report execution. You need to provide the `notes`,
        as reason

        for failure, and `block` data as input.'
      required:
      - notes
      - block
    reporting.ReportRepositoryReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 512
        git:
          $ref: '#/components/schemas/reporting.GitInfo'
      type: object
      description: 'Report repository.


        Is used to represent repository attached to this report'
      required:
      - git
    reporting.ReportSchedule:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 512
        description:
          type: string
          nullable: true
          maxLength: 2048
        notes:
          type: string
          nullable: true
          maxLength: 2048
        template:
          $ref: '#/components/schemas/reporting.ReportTemplateReference'
        trigger:
          $ref: '#/components/schemas/reporting.ReportScheduleTrigger'
        events:
          $ref: '#/components/schemas/reporting.ReportScheduleEvents'
        stats:
          $ref: '#/components/schemas/reporting.ReportScheduleStats'
        owner:
          $ref: '#/components/schemas/reporting.AccountReference'
        parameters:
          type: array
          items:
            type: object
        status:
          type: string
          enum:
          - enabled
          - disabled
      type: object
      description: 'Report Schedule.


        A report schedule represents a configuration for the periodic execution of
        a report

        based on a concrete report template with concrete parameter values in scope
        of a given

        account.'
      required:
      - name
      - template
      - trigger
      - events
      - stats
      - owner
      - parameters
    reporting.ReportScheduleCreate:
      properties:
        name:
          type: string
          maxLength: 512
        description:
          type: string
          nullable: true
          maxLength: 2048
        trigger:
          $ref: '#/components/schemas/reporting.ReportScheduleTrigger'
        parameters:
          type: array
          items:
            type: object
          nullable: true
        template:
          $ref: '#/components/schemas/reporting.ReportScheduleTemplateCreate'
      type: object
      description: 'Create Report Schedule.


        Represents an object required to be passed to create new schedule.

        `name` -- name of the schedule. It will be put as a report name

        constructed as the following string: "`schedule.name` from `Y-m-d H:i:s` (UTC)".

        `description` -- description of the schedule. It will be put as the

        description of the generated report.

        `trigger` -- trigger configuration of the schedule.

        `parameters` -- list of parameters required for the report.'
      required:
      - name
      - trigger
      - template
    reporting.ReportScheduleDisable:
      properties:
        notes:
          type: string
      type: object
      description: 'Disable Report Schedule.


        Is used to disable a concrete report schedule. You need to provide the `notes`,
        as reason

        for the schedule being disabled'
      required:
      - notes
    reporting.ReportScheduleEvent:
      properties:
        at:
          type: string
          readOnly: true
        by:
          $ref: '#/components/schemas/reporting.ActorReference'
          readOnly: true
      type: object
    reporting.ReportScheduleEvents:
      properties:
        created:
          $ref: '#/components/schemas/reporting.ReportScheduleEvent'
        updated:
          $ref: '#/components/schemas/reporting.ReportScheduleEvent'
        last_execution:
          $ref: '#/components/schemas/reporting.ReportScheduleEvent'
        next_execution:
          $ref: '#/components/schemas/reporting.ReportScheduleEvent'
      type: object
      description: 'ReportSchedule events.


        A report schedule events provides information about events such as:

        `created` -- timestamp in UTC when schedule was created and user details

        `updated` -- timestamp in UTC when schedule was las updated and user details

        `last_execution` -- timestamp in UTC when schedule was las executed

        `next_execution` -- timestamp in UTC when schedule will be executed next time.'
      required:
      - created
      - updated
      - last_execution
      - next_execution
    reporting.ReportScheduleReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 512
      type: object
      description: 'ReportSchedule.


        For scheduled reports, represents a reference to the

        related schedule object.'
      required:
      - name
    reporting.ReportScheduleStats:
      properties:
        total_executions:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        average_execution_time:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      type: object
      description: 'Report Schedule Stats.


        A report schedule stats provides information about report executions

        based on this schedule. `total_executions` -- total amount of report

        executions based on this schedule, `average_execution_time` -- average

        execution time of the report based on this schedule.'
    reporting.ReportScheduleTemplateCreate:
      properties:
        id:
          type: string
      type: object
      description: 'ReportSchedule template id.


        `id` -- id of the report template'
      required:
      - id
    reporting.ReportScheduleTrigger:
      properties:
        frequency:
          type: string
          enum:
          - daily
          - weekly
          - monthly
        time:
          type: string
        day_of_week:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        day_of_month:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
      type: object
      description: 'Report Schedule Trigger details.


        A report schedule trigger provides information about report execution trigger.

        `frequency` -- frequency of the schedule, one of: `daily` | `weekly` | `monthly`.

        `time` -- time of the day in UTC report has to be executed (best-effort approach).

        `day_of_week` -- day of the week trigger is executed. 1-7: Can be null.

        In case if the frequency is `daily`, this is ignored. 1 - Monday, 7 - Sunday.

        `day_of_month` -- day of the month trigger is executed. 1-31: can be null.

        In case if the frequency is `daily`, this is ignored. If current month has
        no day

        number set (i.e. February has no day #31) -- report is not executed this month.'
      required:
      - time
    reporting.ReportScheduleUpdate:
      properties:
        name:
          type: string
          maxLength: 512
        description:
          type: string
          nullable: true
          maxLength: 2048
        trigger:
          $ref: '#/components/schemas/reporting.ReportScheduleTrigger'
        parameters:
          type: array
          items:
            type: object
          nullable: true
      type: object
      required:
      - name
      - trigger
    reporting.ReportStatsProgress:
      properties:
        value:
          type: integer
        max:
          type: integer
      type: object
      description: 'Report stats.


        Is used to represent current (`value`) and maximum (`max`) progress of the
        report'
      required:
      - value
      - max
    reporting.ReportTemplate:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 512
        local_id:
          type: string
          maxLength: 512
        description:
          type: string
          maxLength: 2048
        type:
          type: string
        revision:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        specs_version:
          type: string
          maxLength: 32
        status:
          type: string
          enum:
          - enabled
          - disabled
          - blocked
        notes:
          type: string
          nullable: true
        repository:
          $ref: '#/components/schemas/reporting.ReportTemplateRepository'
        audience:
          $ref: '#/components/schemas/reporting.ReportTemplateAudience'
        entrypoint:
          type: string
          maxLength: 512
        parameters:
          type: object
          nullable: true
        owner:
          $ref: '#/components/schemas/reporting.AccountReference'
        stats:
          $ref: '#/components/schemas/reporting.ReportTemplateStats'
        events:
          $ref: '#/components/schemas/reporting.ReportTemplateEvents'
      type: object
      description: 'Report Template.


        Is used to represent report template object.'
      required:
      - name
      - local_id
      - description
      - type
      - specs_version
      - repository
      - audience
      - entrypoint
      - owner
      - stats
      - events
    reporting.ReportTemplateAudience:
      properties:
        vendor:
          type: boolean
        provider:
          type: boolean
      type: object
      description: 'Report Template Audience.


        Is used to represent `vendor` and `provider` properties of the report template'
      required:
      - vendor
      - provider
    reporting.ReportTemplateCreate:
      properties:
        id:
          type: string
      type: object
      description: 'Report template id.


        `id` -- id of the report template'
      required:
      - id
    reporting.ReportTemplateEvent:
      properties:
        at:
          type: string
          readOnly: true
        by:
          $ref: '#/components/schemas/reporting.ActorReference'
          readOnly: true
      type: object
    reporting.ReportTemplateEvents:
      properties:
        created:
          $ref: '#/components/schemas/reporting.ReportTemplateEvent'
        updated:
          $ref: '#/components/schemas/reporting.ReportTemplateEvent'
      type: object
      description: 'Report Template events.


        Is used to represent `created` and `updated` properties of the report template'
      required:
      - created
      - updated
    reporting.ReportTemplateNotes:
      properties:
        notes:
          type: string
      type: object
      description: 'Report Template Notes.


        Is used to disable the template. You need to provide `notes` property

        explaining the reason for disable action'
      required:
      - notes
    reporting.ReportTemplateReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 512
        description:
          type: string
          maxLength: 2048
        type:
          type: string
        specs_version:
          type: string
          maxLength: 32
        revision:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        repository:
          $ref: '#/components/schemas/reporting.ReportRepositoryReference'
        entrypoint:
          type: string
          maxLength: 512
        local_id:
          type: string
          maxLength: 512
      type: object
      description: 'Report template.


        Is used to represent template attached to this report'
      required:
      - name
      - description
      - type
      - specs_version
      - repository
      - entrypoint
      - local_id
    reporting.ReportTemplateRepository:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 512
        repository_type:
          type: string
          enum:
          - system
          - custom
        git:
          $ref: '#/components/schemas/reporting.GitInfo'
      type: object
      description: 'Report Template Git.


        Is used to represent git repository object of the template.'
      required:
      - git
    reporting.ReportTemplateStats:
      properties:
        monthly_executions:
          type: integer
          readOnly: true
        total_executions:
          type: integer
          readOnly: true
        runtime_min:
          type: integer
          readOnly: true
        runtime_max:
          type: integer
          readOnly: true
        runtime_avg:
          type: integer
          readOnly: true
        wait_min:
          type: integer
          readOnly: true
        wait_max:
          type: integer
          readOnly: true
        wait_avg:
          type: integer
          readOnly: true
        success:
          type: integer
          readOnly: true
        failure:
          type: integer
          readOnly: true
        timeout:
          type: integer
          readOnly: true
      type: object
      description: 'Report Template Stats.


        Is used to represent statistics about repository.

        `monthly_executions` -- amount of executions in current month,

        `total_executions` -- amount of all executions.'
    reporting.ReportTiming:
      properties:
        run:
          type: string
          readOnly: true
        wait:
          type: string
          readOnly: true
      type: object
      description: 'Report timing.


        Is used to represent `run` and `wait` properties of the report'
    reporting.ReportUpdateProgress:
      properties:
        progress:
          $ref: '#/components/schemas/reporting.ReportStatsProgress'
      type: object
      description: 'Update report progress.


        Is used to update progress for a concrete report execution. You need to provide
        the `progress`

        data as input.'
      required:
      - progress
    reporting.ReportsRepository:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 512
        description:
          type: string
          nullable: true
          maxLength: 2048
        version:
          type: string
          nullable: true
          maxLength: 128
        language:
          type: string
          enum:
          - python
          nullable: true
        repository_type:
          type: string
          enum:
          - system
          - custom
        revision:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        git:
          $ref: '#/components/schemas/reporting.GitInfo'
        status:
          type: string
          enum:
          - configuring
          - ready
          - failed
        stats:
          $ref: '#/components/schemas/reporting.RepoStats'
        events:
          $ref: '#/components/schemas/reporting.RepoEvents'
        owner:
          $ref: '#/components/schemas/reporting.AccountReference'
        notes:
          type: string
          nullable: true
          maxLength: 2048
      type: object
      description: 'Repository.


        Is used to represent reports repository.'
      required:
      - git
      - stats
      - events
      - owner
    reporting.ReportsRepositoryCreate:
      properties:
        git:
          $ref: '#/components/schemas/reporting.GitInfoCreate'
      type: object
      description: 'Repository Create Request.


        Is used to represent input object to request repository creation. You need
        to provide

        `git` object with repository details.'
      required:
      - git
    reporting.ReportsRepositoryReference:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 512
      type: object
      description: 'Report template repository.


        A repository linked to the template of this schedule.'
    reporting.RepositoryTags:
      properties:
        git:
          $ref: '#/components/schemas/reporting.GitTags'
      type: object
      description: 'Repository Tags.


        Is used to represent repository tags'
      required:
      - git
    reporting.RepositoryTagsRequest:
      properties:
        git:
          $ref: '#/components/schemas/reporting.GitTagsRequest'
      type: object
      description: 'Repository Tags Request.


        Is used to represent input object to request repository tags'
      required:
      - git
    statistics.Statistics:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - account_statistics
          readOnly: true
          default: account_statistics
        account:
          type: object
          properties:
            id:
              type: string
          readOnly: true
        status:
          type: string
          enum:
          - ready
          - calculating
          readOnly: true
        counters:
          type: object
          properties:
            counter:
              type: object
              properties:
                value:
                  type: integer
                updated:
                  type: object
                  properties:
                    at:
                      type: string
                      format: date-time
          readOnly: true
      type: object
    subscriptions.Account:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 64
      type: object
      required:
      - name
    subscriptions.Asset:
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - draft
          - processing
          - active
          - terminating
          - suspended
          - terminated
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
          readOnly: true
        external_id:
          type: string
          readOnly: true
        external_uid:
          type: string
          readOnly: true
        product:
          $ref: '#/components/schemas/subscriptions.Product'
        connection:
          $ref: '#/components/schemas/subscriptions.Connection'
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/subscriptions.ItemWithBillingAssetReference'
        params:
          type: array
          items:
            $ref: '#/components/schemas/subscriptions.Parameter'
        tiers:
          type: object
          properties:
            customer:
              $ref: '#/components/schemas/subscriptions.TierAccount'
            tier1:
              $ref: '#/components/schemas/subscriptions.TierAccount'
            tier2:
              $ref: '#/components/schemas/subscriptions.TierAccount'
          readOnly: true
        marketplace:
          $ref: '#/components/schemas/subscriptions.Marketplace'
          readOnly: true
        contract:
          $ref: '#/components/schemas/subscriptions.Contract'
          readOnly: true
        billing:
          type: object
          properties:
            period:
              type: object
              properties:
                delta:
                  type: number
                uom:
                  type: string
                  enum:
                  - monthly
                  - yearly
                  - years_2
                  - years_3
                  - years_4
                  - years_5
            next_date:
              type: string
              format: date-time
            anniversary:
              type: object
              properties:
                day:
                  type: integer
                month:
                  type: integer
            stats:
              type: object
              properties:
                vendor:
                  type: object
                  properties:
                    last_request:
                      $ref: '#/components/schemas/subscriptions.BillingRequestSummary'
                    count:
                      type: integer
                provider:
                  type: object
                  properties:
                    last_request:
                      $ref: '#/components/schemas/subscriptions.BillingRequestSummary'
                    count:
                      type: integer
          readOnly: true
      type: object
    subscriptions.AssetReference:
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - draft
          - processing
          - active
          - terminating
          - suspended
          - terminated
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
          readOnly: true
        external_id:
          type: string
          readOnly: true
        external_uid:
          type: string
          readOnly: true
        product:
          $ref: '#/components/schemas/subscriptions.Product'
        connection:
          $ref: '#/components/schemas/subscriptions.Connection'
          readOnly: true
        params:
          type: array
          items:
            $ref: '#/components/schemas/subscriptions.Parameter'
        tiers:
          type: object
          properties:
            customer:
              $ref: '#/components/schemas/subscriptions.TierAccount'
            tier1:
              $ref: '#/components/schemas/subscriptions.TierAccount'
            tier2:
              $ref: '#/components/schemas/subscriptions.TierAccount'
          readOnly: true
        marketplace:
          $ref: '#/components/schemas/subscriptions.Marketplace'
          readOnly: true
        contract:
          $ref: '#/components/schemas/subscriptions.Contract'
          readOnly: true
        billing:
          type: object
          properties:
            period:
              type: object
              properties:
                delta:
                  type: number
                uom:
                  type: string
                  enum:
                  - monthly
                  - yearly
                  - years_2
                  - years_3
                  - years_4
                  - years_5
            next_date:
              type: string
              format: date-time
            anniversary:
              type: object
              properties:
                day:
                  type: integer
                month:
                  type: integer
          readOnly: true
      type: object
    subscriptions.Assets:
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - draft
          - processing
          - active
          - terminating
          - suspended
          - terminated
          readOnly: true
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
          readOnly: true
        external_id:
          type: string
          readOnly: true
        external_uid:
          type: string
          readOnly: true
        product:
          $ref: '#/components/schemas/subscriptions.Product'
        connection:
          $ref: '#/components/schemas/subscriptions.Connection'
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/subscriptions.ItemAssetReference'
        params:
          type: array
          items:
            $ref: '#/components/schemas/subscriptions.Parameter'
        tiers:
          type: object
          properties:
            customer:
              $ref: '#/components/schemas/subscriptions.TierAccount'
            tier1:
              $ref: '#/components/schemas/subscriptions.TierAccount'
            tier2:
              $ref: '#/components/schemas/subscriptions.TierAccount'
          readOnly: true
        marketplace:
          $ref: '#/components/schemas/subscriptions.Marketplace'
          readOnly: true
        contract:
          $ref: '#/components/schemas/subscriptions.Contract'
          readOnly: true
        billing:
          type: object
          properties:
            period:
              type: object
              properties:
                delta:
                  type: number
                uom:
                  type: string
                  enum:
                  - monthly
                  - yearly
                  - years_2
                  - years_3
                  - years_4
                  - years_5
            next_date:
              type: string
              format: date-time
            anniversary:
              type: object
              properties:
                day:
                  type: integer
                month:
                  type: integer
          readOnly: true
      type: object
    subscriptions.Attribute:
      properties:
        vendor:
          type: object
        provider:
          type: object
      type: object
    subscriptions.BillingRequest:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - vendor
          - provider
        events:
          type: object
          properties:
            created:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
            updated:
              type: object
              properties:
                at:
                  type: string
                  format: date-time
          readOnly: true
        asset:
          $ref: '#/components/schemas/subscriptions.AssetReference'
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/subscriptions.ItemRequestReference'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/subscriptions.Attribute'
        period:
          type: object
          properties:
            from:
              type: string
              format: date-time
            to:
              type: string
              format: date-time
            delta:
              type: number
            uom:
              type: string
              enum:
              - monthly
              - yearly
              - years_2
              - years_3
              - years_4
              - years_5
          readOnly: true
      type: object
    subscriptions.BillingRequestSummary:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum:
          - vendor
          - provider
        period:
          type: object
          properties:
            from:
              type: string
              format: date-time
            to:
              type: string
              format: date-time
            delta:
              type: number
            uom:
              type: string
              enum:
              - monthly
              - yearly
              - years_2
              - years_3
              - years_4
              - years_5
          readOnly: true
      type: object
    subscriptions.Connection:
      properties:
        id:
          type: string
          readOnly: true
        hub:
          $ref: '#/components/schemas/subscriptions.Hub'
        provider:
          $ref: '#/components/schemas/subscriptions.Account'
          readOnly: true
        vendor:
          $ref: '#/components/schemas/subscriptions.Account'
        type:
          type: string
          enum:
          - test
          - production
          - preview
          nullable: true
      type: object
      description: 'Connection Serializer that handle syndication asset representation

        In scope of vendor as provider returns Hyper Provider instance from

        syndicated data

        Require ''asset'' to be passed in context'
    subscriptions.Contract:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 128
      type: object
      required:
      - name
    subscriptions.Hub:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 256
      type: object
      required:
      - name
    subscriptions.ItemAssetReference:
      properties:
        id:
          type: string
        global_id:
          type: string
        display_name:
          type: string
        mpn:
          type: string
        item_type:
          type: string
        period:
          type: string
        quantity:
          type: number
        type:
          type: string
      type: object
      required:
      - id
      - global_id
      - display_name
      - mpn
      - item_type
      - period
      - type
    subscriptions.ItemRequestReference:
      properties:
        id:
          type: string
        global_id:
          type: string
        display_name:
          type: string
        mpn:
          type: string
        item_type:
          type: string
        period:
          type: string
        quantity:
          type: number
        type:
          type: string
        billing:
          type: object
          properties:
            cycle_number:
              type: integer
          readOnly: true
      type: object
      required:
      - id
      - global_id
      - display_name
      - mpn
      - item_type
      - period
      - type
    subscriptions.ItemWithBillingAssetReference:
      properties:
        id:
          type: string
        global_id:
          type: string
        display_name:
          type: string
        mpn:
          type: string
        item_type:
          type: string
        period:
          type: string
        quantity:
          type: number
        type:
          type: string
        billing:
          type: object
          properties:
            stats:
              type: object
              properties:
                vendor:
                  type: object
                  properties:
                    last_request:
                      $ref: '#/components/schemas/subscriptions.BillingRequestSummary'
                    count:
                      type: integer
                provider:
                  type: object
                  properties:
                    last_request:
                      $ref: '#/components/schemas/subscriptions.BillingRequestSummary'
                    count:
                      type: integer
          readOnly: true
      type: object
      required:
      - id
      - global_id
      - display_name
      - mpn
      - item_type
      - period
      - type
    subscriptions.Marketplace:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        icon:
          type: string
          nullable: true
          maxLength: 2000
      type: object
      required:
      - name
    subscriptions.NewBillingRequest:
      properties:
        asset_id:
          type: string
          nullable: true
          maxLength: 100
        asset_external_uid:
          type: string
          nullable: true
          maxLength: 100
        type:
          type: string
          enum:
          - vendor
          - provider
        items:
          type: array
          items:
            type: object
        attributes:
          $ref: '#/components/schemas/subscriptions.Attribute'
        period_from:
          type: string
          format: date-time
        period_to:
          type: string
          format: date-time
        period_delta:
          type: number
        period_uom:
          type: string
          enum:
          - monthly
          - yearly
          - years_2
          - years_3
          - years_4
          - years_5
      type: object
      required:
      - items
      - period_from
      - period_to
      - period_delta
      - period_uom
    subscriptions.Parameter:
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        value:
          type: string
          nullable: true
          maxLength: 2048
        value_error:
          type: string
          nullable: true
          maxLength: 512
        structured_value:
          type: object
          nullable: true
      type: object
      required:
      - id
      - name
      - description
      - type
    subscriptions.Product:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        status:
          type: string
          maxLength: 30
        icon:
          type: string
          maxLength: 2000
      type: object
      required:
      - name
      - status
    subscriptions.TierAccount:
      properties:
        id:
          type: string
          readOnly: true
        external_id:
          type: string
          readOnly: true
        external_uid:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        tax_id:
          type: string
          readOnly: true
        contact_info:
          type: object
          properties:
            address_line1:
              type: string
            address_line2:
              type: string
            city:
              type: string
            state:
              type: string
            postal_code:
              type: string
            country:
              type: string
            tax_id:
              type: string
            contact:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                phone_number:
                  type: object
                  properties:
                    country_code:
                      type: string
                    area_code:
                      type: string
                    phone_number:
                      type: string
                    extension:
                      type: string
          readOnly: true
      type: object
    usage.Categories:
      properties:
        id:
          type: string
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
          maxLength: 255
      type: object
      required:
      - id
      - name
    usage.PartUsageFile:
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - draft
          - ready
          - closed
          - failed
          readOnly: true
        outdated:
          type: boolean
          readOnly: true
        usagefile:
          $ref: '#/components/schemas/usage.ReferenceUsageFile'
        binding:
          $ref: '#/components/schemas/usage.ReferenceBinding'
        marketplace:
          $ref: '#/components/schemas/usage.ReferenceMarketplace'
        error:
          type: object
          properties:
            detail:
              type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              $ref: '#/components/schemas/usage.UsageEvents'
            uploaded:
              $ref: '#/components/schemas/usage.UsageEvents'
            submitted:
              $ref: '#/components/schemas/usage.UsageEvents'
            accepted:
              $ref: '#/components/schemas/usage.UsageEvents'
            closed:
              $ref: '#/components/schemas/usage.UsageEvents'
            rejected:
              $ref: '#/components/schemas/usage.UsageEvents'
            deleted:
              $ref: '#/components/schemas/usage.UsageEvents'
        stats:
          type: object
          properties:
            uploaded:
              type: integer
            validated:
              type: integer
            pending:
              type: integer
            accepted:
              type: integer
            closed:
              type: integer
            billed:
              type: integer
          readOnly: true
        provider:
          $ref: '#/components/schemas/usage.ReferenceAccount'
        external_id:
          type: string
      type: object
      required:
      - external_id
    usage.Products:
      properties:
        id:
          type: string
        name:
          type: string
        icon:
          type: string
      type: object
      required:
      - id
      - name
      - icon
    usage.Reconciliation:
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          enum:
          - uploaded
          - processing
          - processed
          - failed
          nullable: true
        usagefile:
          $ref: '#/components/schemas/usage.ReferenceUsageFile'
        partusagefile:
          $ref: '#/components/schemas/usage.ReferencePartUsageFile'
        binding:
          $ref: '#/components/schemas/usage.ReferenceBinding'
        error:
          type: object
          properties:
            detail:
              type: string
          readOnly: true
        notes:
          type: object
          properties:
            uploaded:
              type: string
            processing:
              type: string
          readOnly: true
        events:
          type: object
          properties:
            created:
              $ref: '#/components/schemas/usage.UsageEvents'
            uploaded:
              $ref: '#/components/schemas/usage.UsageEvents'
            submitted:
              $ref: '#/components/schemas/usage.UsageEvents'
            accepted:
              $ref: '#/components/schemas/usage.UsageEvents'
            closed:
              $ref: '#/components/schemas/usage.UsageEvents'
            rejected:
              $ref: '#/components/schemas/usage.UsageEvents'
            deleted:
              $ref: '#/components/schemas/usage.UsageEvents'
      type: object
    usage.ReferenceAccount:
      properties:
        id:
          type: string
          maxLength: 100
        name:
          type: string
          nullable: true
          maxLength: 255
      type: object
      required:
      - id
    usage.ReferenceAsset:
      properties:
        id:
          type: string
          maxLength: 255
        external_id:
          type: string
          nullable: true
          maxLength: 255
        external_uid:
          type: string
          nullable: true
          maxLength: 255
      type: object
      description: Serialize reference asset object
      required:
      - id
    usage.ReferenceBinding:
      properties:
        hub:
          $ref: '#/components/schemas/usage.ReferenceHub'
        external_id:
          type: string
          readOnly: true
      type: object
    usage.ReferenceContract:
      properties:
        id:
          type: string
          maxLength: 100
        name:
          type: string
          nullable: true
          maxLength: 255
      type: object
      required:
      - id
    usage.ReferenceHub:
      properties:
        id:
          type: string
          maxLength: 255
        name:
          type: string
          nullable: true
          maxLength: 255
      type: object
      required:
      - id
    usage.ReferenceItem:
      properties:
        id:
          type: string
        local_id:
          type: string
          nullable: true
          maxLength: 128
        name:
          type: string
          maxLength: 255
        unit:
          type: string
          nullable: true
          maxLength: 64
        mpn:
          type: string
          nullable: true
        precision:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      type: object
      description: Serialize reference item object
      required:
      - id
      - name
    usage.ReferenceMarketplace:
      properties:
        id:
          type: string
          maxLength: 100
        name:
          type: string
          nullable: true
          maxLength: 255
        icon:
          type: string
          nullable: true
          maxLength: 500
      type: object
      required:
      - id
    usage.ReferencePartUsageFile:
      properties:
        id:
          type: string
          readOnly: true
        provider:
          $ref: '#/components/schemas/usage.ReferenceAccount'
      type: object
      required:
      - provider
    usage.ReferenceUsageFile:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        schema:
          type: string
          enum:
          - tr
          - pr
          - qt
          - cr
        currency:
          type: string
          nullable: true
          maxLength: 20
      type: object
    usage.ReferenceUser:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
      required:
      - id
      - name
    usage.UsageEvents:
      properties:
        at:
          type: string
          format: date-time
        by:
          $ref: '#/components/schemas/usage.ReferenceUser'
      type: object
      required:
      - at
    usage.UsageFileCreate:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        external_id:
          type: string
        vendor:
          type: string
          nullable: true
        provider:
          type: string
          nullable: true
        environment:
          type: string
          enum:
          - test
          - preview
          - production
        marketplace:
          type: string
          nullable: true
        distribution_contract:
          type: string
          nullable: true
        product_id:
          type: string
          nullable: true
          maxLength: 100
        product_name:
          type: string
          nullable: true
          maxLength: 255
        product_icon:
          type: string
        description:
          type: string
          nullable: true
        schema:
          type: string
          enum:
          - tr
          - pr
          - qt
          - cr
        currency:
          type: string
        start_datetime_utc:
          type: string
          format: date-time
          nullable: true
        end_datetime_utc:
          type: string
          format: date-time
          nullable: true
      type: object
    usage.UsageFileDetail:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        external_id:
          type: string
        status:
          type: string
          enum:
          - draft
          - uploading
          - uploaded
          - invalid
          - processing
          - ready
          - rejected
          - pending
          - accepted
          - closed
          - deleted
        vendor:
          $ref: '#/components/schemas/usage.ReferenceAccount'
        provider:
          $ref: '#/components/schemas/usage.ReferenceAccount'
        environment:
          type: string
          enum:
          - test
          - preview
          - production
        marketplace:
          $ref: '#/components/schemas/usage.ReferenceMarketplace'
        contract:
          $ref: '#/components/schemas/usage.ReferenceContract'
        product:
          $ref: '#/components/schemas/usage.Products'
        error_detail:
          type: string
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
        acceptance_note:
          type: string
          nullable: true
          maxLength: 200
        rejection_note:
          type: string
          nullable: true
          maxLength: 200
        schema:
          type: string
          enum:
          - tr
          - pr
          - qt
          - cr
        currency:
          type: string
          nullable: true
          maxLength: 20
        period:
          type: object
          properties:
            from:
              type: string
              format: date
            to:
              type: string
              format: date
        stats:
          type: object
          properties:
            uploaded:
              type: integer
            validated:
              type: integer
            pending:
              type: integer
            accepted:
              type: integer
            closed:
              type: integer
            billed:
              type: integer
          readOnly: true
        events:
          type: object
          properties:
            created:
              $ref: '#/components/schemas/usage.UsageEvents'
            uploaded:
              $ref: '#/components/schemas/usage.UsageEvents'
            submitted:
              $ref: '#/components/schemas/usage.UsageEvents'
            accepted:
              $ref: '#/components/schemas/usage.UsageEvents'
            closed:
              $ref: '#/components/schemas/usage.UsageEvents'
            rejected:
              $ref: '#/components/schemas/usage.UsageEvents'
            deleted:
              $ref: '#/components/schemas/usage.UsageEvents'
        sub_status:
          type: string
          enum:
          - processing
          - processed
          nullable: true
        usage_file_uri:
          type: string
          readOnly: true
        processed_file_uri:
          type: string
          readOnly: true
        reconciliation_file_uri:
          type: string
          readOnly: true
        records:
          type: object
          properties:
            valid:
              type: integer
            invalid:
              type: integer
            closed:
              type: integer
          readOnly: true
        start_datetime_utc:
          type: string
          format: date-time
          writeOnly: true
        end_datetime_utc:
          type: string
          format: date-time
          writeOnly: true
      type: object
      required:
      - external_id
      - vendor
      - provider
      - marketplace
      - contract
    usage.UsageFileList:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        external_id:
          type: string
        status:
          type: string
          enum:
          - draft
          - uploading
          - uploaded
          - invalid
          - processing
          - ready
          - rejected
          - pending
          - accepted
          - closed
          - deleted
        vendor:
          $ref: '#/components/schemas/usage.ReferenceAccount'
        provider:
          $ref: '#/components/schemas/usage.ReferenceAccount'
        environment:
          type: string
          enum:
          - test
          - preview
          - production
        marketplace:
          $ref: '#/components/schemas/usage.ReferenceMarketplace'
        contract:
          $ref: '#/components/schemas/usage.ReferenceContract'
        product:
          $ref: '#/components/schemas/usage.Products'
        error_detail:
          type: string
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
        acceptance_note:
          type: string
          nullable: true
          maxLength: 200
        rejection_note:
          type: string
          nullable: true
          maxLength: 200
        schema:
          type: string
          enum:
          - tr
          - pr
          - qt
          - cr
        currency:
          type: string
          nullable: true
          maxLength: 20
        period:
          type: object
          properties:
            from:
              type: string
              format: date
            to:
              type: string
              format: date
        stats:
          type: object
          properties:
            uploaded:
              type: integer
            validated:
              type: integer
            pending:
              type: integer
            accepted:
              type: integer
            closed:
              type: integer
            billed:
              type: integer
          readOnly: true
        events:
          type: object
          properties:
            created:
              $ref: '#/components/schemas/usage.UsageEvents'
            uploaded:
              $ref: '#/components/schemas/usage.UsageEvents'
            submitted:
              $ref: '#/components/schemas/usage.UsageEvents'
            accepted:
              $ref: '#/components/schemas/usage.UsageEvents'
            closed:
              $ref: '#/components/schemas/usage.UsageEvents'
            rejected:
              $ref: '#/components/schemas/usage.UsageEvents'
            deleted:
              $ref: '#/components/schemas/usage.UsageEvents'
      type: object
      required:
      - external_id
      - vendor
      - provider
      - marketplace
      - contract
    usage.UsageItemRule:
      properties:
        id:
          type: string
          readOnly: true
        action:
          type: string
          enum:
          - accept
          - reject
          - manual
        scope:
          type: string
        rule:
          type: string
          nullable: true
          maxLength: 2000
        status:
          type: string
          enum:
          - active
          - deleted
        item:
          $ref: '#/components/schemas/usage.UsageRuleReferenceItem'
        events:
          type: object
          properties:
            created:
              $ref: '#/components/schemas/usage.UsageEvents'
            updated:
              $ref: '#/components/schemas/usage.UsageEvents'
          readOnly: true
        item_id:
          type: string
          writeOnly: true
        item_name:
          type: string
          writeOnly: true
        product_id:
          type: string
          writeOnly: true
        account_id:
          type: string
          writeOnly: true
        created_by:
          type: string
          writeOnly: true
        updated_by:
          type: string
          writeOnly: true
      type: object
    usage.UsageRecord:
      properties:
        id:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
          readOnly: true
        product_id:
          type: string
          nullable: true
          maxLength: 500
        external_billing_id:
          type: string
          readOnly: true
        external_billing_note:
          type: string
          readOnly: true
        item:
          $ref: '#/components/schemas/usage.ReferenceItem'
        asset:
          $ref: '#/components/schemas/usage.ReferenceAsset'
        category:
          type: string
          readOnly: true
        tier:
          type: integer
          maximum: 4294967295
          format: int64
          nullable: true
          minimum: 0
        amount:
          type: number
          maximum: 10000000000000000
          minimum: -10000000000000000
          nullable: true
        multiplier:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        usage:
          type: number
        status:
          type: string
          enum:
          - valid
          - invalid
          - approved
          - rejected
          - closed
          nullable: true
        closed_at:
          type: string
          format: date-time
          nullable: true
        closed_by:
          type: string
          nullable: true
          maxLength: 254
        params:
          type: array
          items:
            $ref: '#/components/schemas/usage.UsageRecordParameters'
        item_id:
          type: string
          readOnly: true
        asset_id:
          type: string
          readOnly: true
        usagefile:
          $ref: '#/components/schemas/usage.ReferenceUsageFile'
        resource_local_id:
          type: string
          readOnly: true
        asset_external_id:
          type: string
          readOnly: true
        asset_external_uid:
          type: string
          readOnly: true
      type: object
      required:
      - usage
      - usagefile
    usage.UsageRecordAggregate:
      properties:
        item:
          $ref: '#/components/schemas/usage.ReferenceItem'
        asset:
          $ref: '#/components/schemas/usage.ReferenceAsset'
        amount:
          type: number
          maximum: 10000000000000000
          minimum: -10000000000000000
          nullable: true
        currency:
          type: string
          nullable: true
          maxLength: 100
        consumed:
          type: integer
          readOnly: true
        accepted:
          type: integer
          readOnly: true
        events:
          type: object
          properties:
            last_reported:
              $ref: '#/components/schemas/usage.UsageEvents'
          readOnly: true
      type: object
      description: Serializer class for UsageRecordAggregate API
      required:
      - item
      - asset
    usage.UsageRecordParameters:
      properties:
        parameter_name:
          type: string
          maxLength: 255
        parameter_value:
          type: string
          nullable: true
          maxLength: 255
      type: object
      required:
      - parameter_name
    usage.UsageRuleReferenceItem:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
      type: object
  responses:
    any_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    conversations.any_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    dp.create_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    dp.update_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    helpdesk.any_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    ns.create_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    ns.update_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    offers.any_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    pricing.any_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    reporting.any_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    statistics.any_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    subscriptions.any_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
    usage.any_400:
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
              errors:
                type: array
                items:
                  type: string
      description: ''
  parameters:
    RQL1000Pagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    RQL1000Pagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    RQLContentRangeLimitOffsetPagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    RQLContentRangeLimitOffsetPagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    conversations.RQL1000Pagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    conversations.RQL1000Pagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    dp.CategoriesPagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    dp.CategoriesPagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    dp.CountryPagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    dp.CountryPagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    dp.LimitOffsetContentRangePagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    dp.LimitOffsetContentRangePagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    dp.MarketplacePagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    dp.MarketplacePagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    dp.PartnersPagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    dp.PartnersPagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    dp.RQL1000Pagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    dp.RQL1000Pagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    dp.RQLContentRangeLimitOffsetPagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    dp.RQLContentRangeLimitOffsetPagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    dp.TierAccountPagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    dp.TierAccountPagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    dp.TierConfigRequestPagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    dp.TierConfigRequestPagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    helpdesk.RQL1000Pagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    helpdesk.RQL1000Pagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    ns.LimitOffsetContentRangePagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    ns.LimitOffsetContentRangePagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    offers.RQLContentRangeLimitOffsetPagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    offers.RQLContentRangeLimitOffsetPagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    pricing.RQLContentRangeLimitOffsetPagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    pricing.RQLContentRangeLimitOffsetPagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    reporting.RQLContentRangeLimitOffsetPagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    reporting.RQLContentRangeLimitOffsetPagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    subscriptions.RQLContentRangeLimitOffsetPagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    subscriptions.RQLContentRangeLimitOffsetPagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
    usage.RQL1000Pagination.limit:
      name: limit
      required: false
      in: query
      description: Number of results to return per page.
      schema:
        type: integer
    usage.RQL1000Pagination.offset:
      name: offset
      required: false
      in: query
      description: The initial index from which to return the results.
      schema:
        type: integer
  headers:
    Content-Range:
      schema:
        type: string
      description: RQL RFC2616 limit offset pagination.
  securitySchemes:
    Apikey0:
      type: apiKey
      in: header
      name: Authorization
tags:
- name: Accounts
  description: ''
- name: Agreements
  description: Control the lifecycle of agreements (contract templates) with the Agreements
    Management endpoints.
- name: Assets
  description: Review, test and manage assets of products with the Assets Management
    endpoints.
- name: Auth
  description: ''
- name: Contracts
  description: Manage contracts with your partners with the Contracts Management endpoints.
- name: Conversations
  description: Create and manage Conversations.
- name: Customers
  description: View and manage your customers (tier accounts) with the Customers Management
    endpoints.
- name: Extensions
  description: Create and manage API tokens, access information and other integrations
    with the Extensions Management endpoints.
- name: General Collections
  description: Common collections.
- name: Helpdesk
  description: '# Create, discuss and manage partners requests for help'
- name: Hubs
  description: Register and manage instances of your Commerce Management systems with
    the Hubs Management endpoints.
- name: Listings
  description: Monitor and process the queue of listing requests from your partners
    with the Listings Management endpoints.
- name: Marketplaces
  description: Define and control assignment of Hubs and Accounts to the Marketplaces
    with the Marketplaces Management endpoints.
- name: Offers
  description: '# Create and manage Offers'
- name: Partners
  description: ''
- name: Pricing
  description: "\n# Create and manage PriceLists of Products with the Pricing Management\
    \ endpoints.\n\nUse cases:\n\n* create PriceList and it's PriceListVersion\n\n\
    * download PriceListVersion XLSX representation for using in bulk update operations\n\
    \n* work with draft statused PriceListVersion:\n\n    * via REST API with each\
    \ PricePoint\n\n    * via uploading through XLSX file bulk PricePoint update\n\
    \n* activate PriceListVersion or schedule activation in future\n\n* terminate\
    \ PriceList\n\n* download XLSX PriceListVersion representation\n\n_Notes:_\n\n\
    * PriceList becomes visible to Provider after PriceList to Listing binding (see\
    \ listings API collection)\n\n* Provider can access for PriceList with statuses\
    \ 'active', 'scheduled' or 'terminated'\n\n* Provider can access for PriceListVersion\
    \ with statuses 'active', 'scheduled' or 'expired'\n                "
- name: Products
  description: Review, test and manage your products with the Products Management
    endpoints.
- name: Reports
  description: Reports management module.
- name: Settings
  description: View and manage the tier configuration information in the Settings
    Management endpoints.
- name: Statistics
  description: Create and manage statistics
- name: Subscriptions
  description: Review, test and manage subscriptions of products with the Subscriptions
    Management endpoints.
- name: Usage Reporting
  description: ''
